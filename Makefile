# Makefile.in generated by automake 1.15 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# zebra
#

#
# watchfrr
#

#
# tools
#

#
# ripd
#

#
# ripngd
#

#
# ospfd
#

#
# ospf6d
#

#
# ospfclient
#

#
# isisd
#

#
# nhrpd
#

#
# ldpd
#

#
# babeld
#

#
# eigrpd
#

#
# sharpd
#

#
# pimd
#

#
# pbrd
#







am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/frr
pkgincludedir = $(includedir)/frr
pkglibdir = $(libdir)/frr
pkglibexecdir = $(libexecdir)/frr
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = $(am__EXEEXT_1)
sbin_PROGRAMS = $(am__EXEEXT_4) $(am__EXEEXT_5) tools/ssd$(EXEEXT) \
	$(am__EXEEXT_6) $(am__EXEEXT_7) $(am__EXEEXT_8) \
	$(am__EXEEXT_9) $(am__EXEEXT_10) $(am__EXEEXT_11) \
	$(am__EXEEXT_12) $(am__EXEEXT_13) $(am__EXEEXT_14) \
	$(am__EXEEXT_15) $(am__EXEEXT_16) $(am__EXEEXT_17) \
	$(am__EXEEXT_18)
noinst_PROGRAMS = lib/grammar_sandbox$(EXEEXT) $(am__EXEEXT_2) \
	tools/permutations$(EXEEXT) $(am__EXEEXT_3)

#
# SNMP support
#
#am__append_1 = lib/libfrrsnmp.la

#
# ZeroMQ support
#
#am__append_2 = lib/libfrrzmq.la
#am__append_3 = lib/frr_zmq.h
am__append_4 = lib/clippy
am__append_5 = zebra/zebra
am__append_6 = zebra/zebra.conf.sample
am__append_7 = zebra/zebra_irdp.la
#am__append_8 = zebra/zebra_snmp.la
#am__append_9 = zebra/zebra_fpm.la
#am__append_10 = zebra/zebra_fpm_protobuf.c
##am__append_11 = zebra/zebra_fpm_dt.c
am__append_12 = watchfrr/watchfrr
#am__append_13 = qpb/libfrr_pb.la
#am__append_14 = qpb/qpb_allocator.c
#am__append_15 = qpb/qpb.pb-c.c qpb/qpb.pb-c.h \
#	fpm/fpm.pb-c.c fpm/fpm.pb-c.h # end
#am__append_16 = fpm/libfrrfpm_pb.la
am__append_17 = ripd/librip.a
am__append_18 = ripd/ripd
am__append_19 = ripd/ripd.conf.sample
#am__append_20 = ripd/ripd_snmp.la
am__append_21 = ripngd/libripng.a
am__append_22 = ripngd/ripngd
am__append_23 = ospfd/libfrrospf.a
am__append_24 = ospfd/ospfd
am__append_25 = ospfd/ospfd.conf.sample
#am__append_26 = ospfd/ospfd_snmp.la
am__append_27 = ospf6d/libospf6.a
am__append_28 = ospf6d/ospf6d
am__append_29 = ospf6d/ospf6d.conf.sample
#am__append_30 = ospf6d/ospf6d_snmp.la
am__append_31 = ospfclient/libfrrospfapiclient.la
am__append_32 = ospfclient/ospfclient
am__append_33 = isisd/libisis.a
am__append_34 = isisd/isisd
am__append_35 = isisd/isisd.conf.sample
#am__append_36 = nhrpd/nhrpd
am__append_37 = ldpd/libldp.a
am__append_38 = ldpd/ldpd
am__append_39 = ldpd/ldpd.conf.sample
am__append_40 = babeld/libbabel.a
am__append_41 = babeld/babeld
am__append_42 = babeld/babeld.conf.sample
am__append_43 = eigrpd/libeigrp.a
am__append_44 = eigrpd/eigrpd
am__append_45 = eigrpd/eigrpd.conf.sample
#am__append_46 = sharpd/libsharp.a
#am__append_47 = sharpd/sharpd
#am__append_48 = sharpd/sharpd.conf.sample
am__append_49 = pimd/libpim.a
am__append_50 = pimd/pimd
am__append_51 = pimd/mtracebis
am__append_52 = pimd/test_igmpv3_join
am__append_53 = pimd/pimd.conf.sample
am__append_54 = pbrd/libpbr.a
am__append_55 = pbrd/pbrd
am__append_56 = pbrd/pbrd.conf.sample
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__dist_examples_DATA_DIST) \
	$(eigrpdheader_HEADERS) $(noinst_HEADERS) \
	$(am__ospfapiheader_HEADERS_DIST) \
	$(am__ospfdheader_HEADERS_DIST) $(am__pkginclude_HEADERS_DIST) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = redhat/frr.spec alpine/APKBUILD \
	snapcraft/snapcraft.yaml lib/version.h \
	tests/lib/cli/test_cli.refout pkgsrc/bgpd.sh pkgsrc/ospf6d.sh \
	pkgsrc/ospfd.sh pkgsrc/ripd.sh pkgsrc/ripngd.sh \
	pkgsrc/zebra.sh pkgsrc/eigrpd.sh
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
babeld_libbabel_a_AR = $(AR) $(ARFLAGS)
babeld_libbabel_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_babeld_libbabel_a_OBJECTS = babeld/babel_filter.$(OBJEXT) \
	babeld/babel_interface.$(OBJEXT) babeld/babel_memory.$(OBJEXT) \
	babeld/babel_zebra.$(OBJEXT) babeld/babeld.$(OBJEXT) \
	babeld/kernel.$(OBJEXT) babeld/message.$(OBJEXT) \
	babeld/neighbour.$(OBJEXT) babeld/net.$(OBJEXT) \
	babeld/resend.$(OBJEXT) babeld/route.$(OBJEXT) \
	babeld/source.$(OBJEXT) babeld/util.$(OBJEXT) \
	babeld/xroute.$(OBJEXT)
babeld_libbabel_a_OBJECTS = $(am_babeld_libbabel_a_OBJECTS)
eigrpd_libeigrp_a_AR = $(AR) $(ARFLAGS)
eigrpd_libeigrp_a_LIBADD =
am_eigrpd_libeigrp_a_OBJECTS = eigrpd/eigrp_dump.$(OBJEXT) \
	eigrpd/eigrp_filter.$(OBJEXT) eigrpd/eigrp_fsm.$(OBJEXT) \
	eigrpd/eigrp_hello.$(OBJEXT) eigrpd/eigrp_interface.$(OBJEXT) \
	eigrpd/eigrp_memory.$(OBJEXT) eigrpd/eigrp_neighbor.$(OBJEXT) \
	eigrpd/eigrp_network.$(OBJEXT) eigrpd/eigrp_packet.$(OBJEXT) \
	eigrpd/eigrp_query.$(OBJEXT) eigrpd/eigrp_reply.$(OBJEXT) \
	eigrpd/eigrp_siaquery.$(OBJEXT) \
	eigrpd/eigrp_siareply.$(OBJEXT) eigrpd/eigrp_snmp.$(OBJEXT) \
	eigrpd/eigrp_topology.$(OBJEXT) eigrpd/eigrp_update.$(OBJEXT) \
	eigrpd/eigrp_vty.$(OBJEXT) eigrpd/eigrp_zebra.$(OBJEXT) \
	eigrpd/eigrpd.$(OBJEXT)
eigrpd_libeigrp_a_OBJECTS = $(am_eigrpd_libeigrp_a_OBJECTS)
isisd_libisis_a_AR = $(AR) $(ARFLAGS)
isisd_libisis_a_LIBADD =
am_isisd_libisis_a_OBJECTS = isisd/dict.$(OBJEXT) \
	isisd/isis_adjacency.$(OBJEXT) isisd/isis_circuit.$(OBJEXT) \
	isisd/isis_csm.$(OBJEXT) isisd/isis_dr.$(OBJEXT) \
	isisd/isis_dynhn.$(OBJEXT) isisd/isis_events.$(OBJEXT) \
	isisd/isis_flags.$(OBJEXT) isisd/isis_lsp.$(OBJEXT) \
	isisd/isis_lsp_hash.$(OBJEXT) isisd/isis_memory.$(OBJEXT) \
	isisd/isis_misc.$(OBJEXT) isisd/isis_mt.$(OBJEXT) \
	isisd/isis_pdu.$(OBJEXT) isisd/isis_redist.$(OBJEXT) \
	isisd/isis_route.$(OBJEXT) isisd/isis_routemap.$(OBJEXT) \
	isisd/isis_spf.$(OBJEXT) isisd/isis_te.$(OBJEXT) \
	isisd/isis_tlvs.$(OBJEXT) isisd/isis_vty.$(OBJEXT) \
	isisd/isis_zebra.$(OBJEXT) isisd/isisd.$(OBJEXT) \
	isisd/iso_checksum.$(OBJEXT)
isisd_libisis_a_OBJECTS = $(am_isisd_libisis_a_OBJECTS)
ldpd_libldp_a_AR = $(AR) $(ARFLAGS)
ldpd_libldp_a_LIBADD =
am_ldpd_libldp_a_OBJECTS = ldpd/accept.$(OBJEXT) \
	ldpd/address.$(OBJEXT) ldpd/adjacency.$(OBJEXT) \
	ldpd/control.$(OBJEXT) ldpd/hello.$(OBJEXT) \
	ldpd/init.$(OBJEXT) ldpd/interface.$(OBJEXT) \
	ldpd/keepalive.$(OBJEXT) ldpd/l2vpn.$(OBJEXT) \
	ldpd/labelmapping.$(OBJEXT) ldpd/lde.$(OBJEXT) \
	ldpd/lde_lib.$(OBJEXT) ldpd/ldp_debug.$(OBJEXT) \
	ldpd/ldp_vty_cmds.$(OBJEXT) ldpd/ldp_vty_conf.$(OBJEXT) \
	ldpd/ldp_vty_exec.$(OBJEXT) ldpd/ldp_zebra.$(OBJEXT) \
	ldpd/ldpd.$(OBJEXT) ldpd/ldpe.$(OBJEXT) ldpd/log.$(OBJEXT) \
	ldpd/logmsg.$(OBJEXT) ldpd/neighbor.$(OBJEXT) \
	ldpd/notification.$(OBJEXT) ldpd/packet.$(OBJEXT) \
	ldpd/pfkey.$(OBJEXT) ldpd/socket.$(OBJEXT) ldpd/util.$(OBJEXT)
ldpd_libldp_a_OBJECTS = $(am_ldpd_libldp_a_OBJECTS)
ospf6d_libospf6_a_AR = $(AR) $(ARFLAGS)
ospf6d_libospf6_a_LIBADD =
am_ospf6d_libospf6_a_OBJECTS = ospf6d/ospf6_abr.$(OBJEXT) \
	ospf6d/ospf6_area.$(OBJEXT) ospf6d/ospf6_asbr.$(OBJEXT) \
	ospf6d/ospf6_bfd.$(OBJEXT) ospf6d/ospf6_flood.$(OBJEXT) \
	ospf6d/ospf6_interface.$(OBJEXT) ospf6d/ospf6_intra.$(OBJEXT) \
	ospf6d/ospf6_lsa.$(OBJEXT) ospf6d/ospf6_lsdb.$(OBJEXT) \
	ospf6d/ospf6_memory.$(OBJEXT) ospf6d/ospf6_message.$(OBJEXT) \
	ospf6d/ospf6_neighbor.$(OBJEXT) ospf6d/ospf6_network.$(OBJEXT) \
	ospf6d/ospf6_proto.$(OBJEXT) ospf6d/ospf6_route.$(OBJEXT) \
	ospf6d/ospf6_spf.$(OBJEXT) ospf6d/ospf6_top.$(OBJEXT) \
	ospf6d/ospf6_zebra.$(OBJEXT) ospf6d/ospf6d.$(OBJEXT)
ospf6d_libospf6_a_OBJECTS = $(am_ospf6d_libospf6_a_OBJECTS)
ospfd_libfrrospf_a_AR = $(AR) $(ARFLAGS)
ospfd_libfrrospf_a_LIBADD =
am_ospfd_libfrrospf_a_OBJECTS = ospfd/ospf_abr.$(OBJEXT) \
	ospfd/ospf_api.$(OBJEXT) ospfd/ospf_apiserver.$(OBJEXT) \
	ospfd/ospf_asbr.$(OBJEXT) ospfd/ospf_ase.$(OBJEXT) \
	ospfd/ospf_bfd.$(OBJEXT) ospfd/ospf_dump.$(OBJEXT) \
	ospfd/ospf_dump_api.$(OBJEXT) ospfd/ospf_ext.$(OBJEXT) \
	ospfd/ospf_flood.$(OBJEXT) ospfd/ospf_ia.$(OBJEXT) \
	ospfd/ospf_interface.$(OBJEXT) ospfd/ospf_ism.$(OBJEXT) \
	ospfd/ospf_lsa.$(OBJEXT) ospfd/ospf_lsdb.$(OBJEXT) \
	ospfd/ospf_memory.$(OBJEXT) ospfd/ospf_neighbor.$(OBJEXT) \
	ospfd/ospf_network.$(OBJEXT) ospfd/ospf_nsm.$(OBJEXT) \
	ospfd/ospf_opaque.$(OBJEXT) ospfd/ospf_packet.$(OBJEXT) \
	ospfd/ospf_ri.$(OBJEXT) ospfd/ospf_route.$(OBJEXT) \
	ospfd/ospf_routemap.$(OBJEXT) ospfd/ospf_spf.$(OBJEXT) \
	ospfd/ospf_sr.$(OBJEXT) ospfd/ospf_te.$(OBJEXT) \
	ospfd/ospf_vty.$(OBJEXT) ospfd/ospf_zebra.$(OBJEXT) \
	ospfd/ospfd.$(OBJEXT)
ospfd_libfrrospf_a_OBJECTS = $(am_ospfd_libfrrospf_a_OBJECTS)
pbrd_libpbr_a_AR = $(AR) $(ARFLAGS)
pbrd_libpbr_a_LIBADD =
am_pbrd_libpbr_a_OBJECTS = pbrd/pbr_zebra.$(OBJEXT) \
	pbrd/pbr_vty.$(OBJEXT) pbrd/pbr_map.$(OBJEXT) \
	pbrd/pbr_memory.$(OBJEXT) pbrd/pbr_nht.$(OBJEXT) \
	pbrd/pbr_debug.$(OBJEXT)
pbrd_libpbr_a_OBJECTS = $(am_pbrd_libpbr_a_OBJECTS)
pimd_libpim_a_AR = $(AR) $(ARFLAGS)
pimd_libpim_a_LIBADD =
am_pimd_libpim_a_OBJECTS = pimd/pim_assert.$(OBJEXT) \
	pimd/pim_bfd.$(OBJEXT) pimd/pim_br.$(OBJEXT) \
	pimd/pim_cmd.$(OBJEXT) pimd/pim_hello.$(OBJEXT) \
	pimd/pim_iface.$(OBJEXT) pimd/pim_ifchannel.$(OBJEXT) \
	pimd/pim_igmp.$(OBJEXT) pimd/pim_igmp_mtrace.$(OBJEXT) \
	pimd/pim_igmp_stats.$(OBJEXT) pimd/pim_igmpv2.$(OBJEXT) \
	pimd/pim_igmpv3.$(OBJEXT) pimd/pim_instance.$(OBJEXT) \
	pimd/pim_int.$(OBJEXT) pimd/pim_join.$(OBJEXT) \
	pimd/pim_jp_agg.$(OBJEXT) pimd/pim_macro.$(OBJEXT) \
	pimd/pim_memory.$(OBJEXT) pimd/pim_mroute.$(OBJEXT) \
	pimd/pim_msdp.$(OBJEXT) pimd/pim_msdp_packet.$(OBJEXT) \
	pimd/pim_msdp_socket.$(OBJEXT) pimd/pim_msg.$(OBJEXT) \
	pimd/pim_neighbor.$(OBJEXT) pimd/pim_nht.$(OBJEXT) \
	pimd/pim_oil.$(OBJEXT) pimd/pim_pim.$(OBJEXT) \
	pimd/pim_register.$(OBJEXT) pimd/pim_routemap.$(OBJEXT) \
	pimd/pim_rp.$(OBJEXT) pimd/pim_rpf.$(OBJEXT) \
	pimd/pim_signals.$(OBJEXT) pimd/pim_sock.$(OBJEXT) \
	pimd/pim_ssm.$(OBJEXT) pimd/pim_ssmpingd.$(OBJEXT) \
	pimd/pim_static.$(OBJEXT) pimd/pim_str.$(OBJEXT) \
	pimd/pim_time.$(OBJEXT) pimd/pim_tlv.$(OBJEXT) \
	pimd/pim_upstream.$(OBJEXT) pimd/pim_util.$(OBJEXT) \
	pimd/pim_version.$(OBJEXT) pimd/pim_vty.$(OBJEXT) \
	pimd/pim_zebra.$(OBJEXT) pimd/pim_zlookup.$(OBJEXT) \
	pimd/pimd.$(OBJEXT)
pimd_libpim_a_OBJECTS = $(am_pimd_libpim_a_OBJECTS)
ripd_librip_a_AR = $(AR) $(ARFLAGS)
ripd_librip_a_LIBADD =
am_ripd_librip_a_OBJECTS = ripd/rip_debug.$(OBJEXT) \
	ripd/rip_interface.$(OBJEXT) ripd/rip_memory.$(OBJEXT) \
	ripd/rip_offset.$(OBJEXT) ripd/rip_peer.$(OBJEXT) \
	ripd/rip_routemap.$(OBJEXT) ripd/rip_zebra.$(OBJEXT) \
	ripd/ripd.$(OBJEXT)
ripd_librip_a_OBJECTS = $(am_ripd_librip_a_OBJECTS)
ripngd_libripng_a_AR = $(AR) $(ARFLAGS)
ripngd_libripng_a_LIBADD =
am_ripngd_libripng_a_OBJECTS = ripngd/ripng_debug.$(OBJEXT) \
	ripngd/ripng_interface.$(OBJEXT) ripngd/ripng_memory.$(OBJEXT) \
	ripngd/ripng_nexthop.$(OBJEXT) ripngd/ripng_offset.$(OBJEXT) \
	ripngd/ripng_peer.$(OBJEXT) ripngd/ripng_route.$(OBJEXT) \
	ripngd/ripng_routemap.$(OBJEXT) ripngd/ripng_zebra.$(OBJEXT) \
	ripngd/ripngd.$(OBJEXT)
ripngd_libripng_a_OBJECTS = $(am_ripngd_libripng_a_OBJECTS)
sharpd_libsharp_a_AR = $(AR) $(ARFLAGS)
sharpd_libsharp_a_LIBADD =
am_sharpd_libsharp_a_OBJECTS = sharpd/sharp_zebra.$(OBJEXT) \
	sharpd/sharp_vty.$(OBJEXT)
sharpd_libsharp_a_OBJECTS = $(am_sharpd_libsharp_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(moduledir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(rcdir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(examplesdir)" "$(DESTDIR)$(eigrpdheaderdir)" \
	"$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(ospfapiheaderdir)" \
	"$(DESTDIR)$(ospfdheaderdir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(module_LTLIBRARIES)
fpm_libfrrfpm_pb_la_LIBADD =
am_fpm_libfrrfpm_pb_la_OBJECTS = fpm/fpm_libfrrfpm_pb_la-fpm_pb.lo
#nodist_fpm_libfrrfpm_pb_la_OBJECTS =  \
#	fpm/fpm_libfrrfpm_pb_la-fpm.pb-c.lo
fpm_libfrrfpm_pb_la_OBJECTS = $(am_fpm_libfrrfpm_pb_la_OBJECTS) \
	$(nodist_fpm_libfrrfpm_pb_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
fpm_libfrrfpm_pb_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(fpm_libfrrfpm_pb_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_fpm_libfrrfpm_pb_la_rpath = -rpath $(libdir)
lib_libfrr_la_DEPENDENCIES =
am_lib_libfrr_la_OBJECTS = lib/bfd.lo lib/buffer.lo lib/checksum.lo \
	lib/command.lo lib/command_graph.lo lib/command_lex.lo \
	lib/command_match.lo lib/command_parse.lo lib/csv.lo \
	lib/debug.lo lib/distribute.lo lib/event_counter.lo \
	lib/ferr.lo lib/filter.lo lib/frr_pthread.lo lib/frrstr.lo \
	lib/getopt.lo lib/getopt1.lo lib/grammar_sandbox.lo \
	lib/graph.lo lib/hash.lo lib/hook.lo lib/if.lo lib/if_rmap.lo \
	lib/imsg-buffer.lo lib/imsg.lo lib/jhash.lo lib/json.lo \
	lib/keychain.lo lib/libfrr.lo lib/linklist.lo lib/log.lo \
	lib/md5.lo lib/memory.lo lib/memory_vty.lo lib/module.lo \
	lib/mpls.lo lib/network.lo lib/nexthop.lo lib/netns_linux.lo \
	lib/netns_other.lo lib/nexthop_group.lo lib/openbsd-tree.lo \
	lib/pid_output.lo lib/plist.lo lib/pqueue.lo lib/prefix.lo \
	lib/privs.lo lib/ptm_lib.lo lib/qobj.lo lib/ringbuf.lo \
	lib/routemap.lo lib/sbuf.lo lib/sha256.lo lib/sigevent.lo \
	lib/skiplist.lo lib/sockopt.lo lib/sockunion.lo \
	lib/spf_backoff.lo lib/srcdest_table.lo lib/stream.lo \
	lib/strlcat.lo lib/strlcpy.lo lib/systemd.lo lib/table.lo \
	lib/termtable.lo lib/thread.lo lib/vector.lo lib/vrf.lo \
	lib/vty.lo lib/wheel.lo lib/workqueue.lo lib/zclient.lo \
	lib/logicalrouter.lo
lib_libfrr_la_OBJECTS = $(am_lib_libfrr_la_OBJECTS)
lib_libfrr_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(lib_libfrr_la_LDFLAGS) $(LDFLAGS) -o $@
am__DEPENDENCIES_1 =
lib_libfrrsnmp_la_DEPENDENCIES = lib/libfrr.la $(am__DEPENDENCIES_1)
am_lib_libfrrsnmp_la_OBJECTS = lib/lib_libfrrsnmp_la-agentx.lo \
	lib/lib_libfrrsnmp_la-smux.lo lib/lib_libfrrsnmp_la-snmp.lo
lib_libfrrsnmp_la_OBJECTS = $(am_lib_libfrrsnmp_la_OBJECTS)
lib_libfrrsnmp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(lib_libfrrsnmp_la_CFLAGS) $(CFLAGS) \
	$(lib_libfrrsnmp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_lib_libfrrsnmp_la_rpath = -rpath $(libdir)
lib_libfrrzmq_la_DEPENDENCIES = lib/libfrr.la $(am__DEPENDENCIES_1)
am_lib_libfrrzmq_la_OBJECTS = lib/lib_libfrrzmq_la-frr_zmq.lo
lib_libfrrzmq_la_OBJECTS = $(am_lib_libfrrzmq_la_OBJECTS)
lib_libfrrzmq_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(lib_libfrrzmq_la_CFLAGS) $(CFLAGS) \
	$(lib_libfrrzmq_la_LDFLAGS) $(LDFLAGS) -o $@
#am_lib_libfrrzmq_la_rpath = -rpath $(libdir)
ospf6d_ospf6d_snmp_la_DEPENDENCIES = lib/libfrrsnmp.la
am_ospf6d_ospf6d_snmp_la_OBJECTS =  \
	ospf6d/ospf6d_ospf6d_snmp_la-ospf6_snmp.lo
ospf6d_ospf6d_snmp_la_OBJECTS = $(am_ospf6d_ospf6d_snmp_la_OBJECTS)
ospf6d_ospf6d_snmp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(ospf6d_ospf6d_snmp_la_CFLAGS) $(CFLAGS) \
	$(ospf6d_ospf6d_snmp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ospf6d_ospf6d_snmp_la_rpath = -rpath \
#	$(moduledir)
ospfclient_libfrrospfapiclient_la_DEPENDENCIES = lib/libfrr.la
am_ospfclient_libfrrospfapiclient_la_OBJECTS =  \
	ospfclient/ospf_apiclient.lo
ospfclient_libfrrospfapiclient_la_OBJECTS =  \
	$(am_ospfclient_libfrrospfapiclient_la_OBJECTS)
ospfclient_libfrrospfapiclient_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ospfclient_libfrrospfapiclient_la_LDFLAGS) $(LDFLAGS) -o $@
am_ospfclient_libfrrospfapiclient_la_rpath = -rpath \
	$(libdir)
ospfd_ospfd_snmp_la_DEPENDENCIES = lib/libfrrsnmp.la
am_ospfd_ospfd_snmp_la_OBJECTS =  \
	ospfd/ospfd_ospfd_snmp_la-ospf_snmp.lo
ospfd_ospfd_snmp_la_OBJECTS = $(am_ospfd_ospfd_snmp_la_OBJECTS)
ospfd_ospfd_snmp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(ospfd_ospfd_snmp_la_CFLAGS) $(CFLAGS) \
	$(ospfd_ospfd_snmp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ospfd_ospfd_snmp_la_rpath = -rpath \
#	$(moduledir)
qpb_libfrr_pb_la_LIBADD =
am__qpb_libfrr_pb_la_SOURCES_DIST = qpb/linear_allocator.h qpb/qpb.h \
	qpb/qpb.c qpb/qpb_allocator.h qpb/qpb_allocator.c
#am__objects_1 =  \
#	qpb/qpb_libfrr_pb_la-qpb_allocator.lo
am_qpb_libfrr_pb_la_OBJECTS = qpb/qpb_libfrr_pb_la-qpb.lo \
	$(am__objects_1)
#nodist_qpb_libfrr_pb_la_OBJECTS =  \
#	qpb/qpb_libfrr_pb_la-qpb.pb-c.lo
qpb_libfrr_pb_la_OBJECTS = $(am_qpb_libfrr_pb_la_OBJECTS) \
	$(nodist_qpb_libfrr_pb_la_OBJECTS)
qpb_libfrr_pb_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(qpb_libfrr_pb_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_qpb_libfrr_pb_la_rpath = -rpath $(libdir)
ripd_ripd_snmp_la_DEPENDENCIES = lib/libfrrsnmp.la
am_ripd_ripd_snmp_la_OBJECTS = ripd/ripd_ripd_snmp_la-rip_snmp.lo
ripd_ripd_snmp_la_OBJECTS = $(am_ripd_ripd_snmp_la_OBJECTS)
ripd_ripd_snmp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(ripd_ripd_snmp_la_CFLAGS) $(CFLAGS) \
	$(ripd_ripd_snmp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ripd_ripd_snmp_la_rpath = -rpath $(moduledir)
#am__DEPENDENCIES_2 =  \
#	$(top_srcdir)/qpb/libfrr_pb.la \
#	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_3 =  \
#	$(top_srcdir)/fpm/libfrrfpm_pb.la \
#	$(am__DEPENDENCIES_2)
zebra_zebra_fpm_la_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__zebra_zebra_fpm_la_SOURCES_DIST = zebra/zebra_fpm.c \
	zebra/zebra_fpm_netlink.c zebra/zebra_fpm_protobuf.c \
	zebra/zebra_fpm_dt.c
#am__objects_2 = zebra/zebra_fpm_protobuf.lo
##am__objects_3 =  \
##	zebra/zebra_fpm_dt.lo
am_zebra_zebra_fpm_la_OBJECTS = zebra/zebra_fpm.lo \
	zebra/zebra_fpm_netlink.lo $(am__objects_2) $(am__objects_3)
zebra_zebra_fpm_la_OBJECTS = $(am_zebra_zebra_fpm_la_OBJECTS)
zebra_zebra_fpm_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(zebra_zebra_fpm_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_zebra_zebra_fpm_la_rpath = -rpath \
#	$(moduledir)
zebra_zebra_irdp_la_LIBADD =
am_zebra_zebra_irdp_la_OBJECTS = zebra/irdp_interface.lo \
	zebra/irdp_main.lo zebra/irdp_packet.lo
zebra_zebra_irdp_la_OBJECTS = $(am_zebra_zebra_irdp_la_OBJECTS)
zebra_zebra_irdp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(zebra_zebra_irdp_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_zebra_zebra_irdp_la_rpath = -rpath \
	$(moduledir)
zebra_zebra_snmp_la_DEPENDENCIES = lib/libfrrsnmp.la
am_zebra_zebra_snmp_la_OBJECTS =  \
	zebra/zebra_zebra_snmp_la-zebra_snmp.lo
zebra_zebra_snmp_la_OBJECTS = $(am_zebra_zebra_snmp_la_OBJECTS)
zebra_zebra_snmp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(zebra_zebra_snmp_la_CFLAGS) $(CFLAGS) \
	$(zebra_zebra_snmp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_zebra_zebra_snmp_la_rpath = -rpath \
#	$(moduledir)
am__EXEEXT_1 = pimd/mtracebis$(EXEEXT)
am__EXEEXT_2 = lib/clippy$(EXEEXT)
am__EXEEXT_3 = pimd/test_igmpv3_join$(EXEEXT)
am__EXEEXT_4 = zebra/zebra$(EXEEXT)
am__EXEEXT_5 = watchfrr/watchfrr$(EXEEXT)
am__EXEEXT_6 = ripd/ripd$(EXEEXT)
am__EXEEXT_7 = ripngd/ripngd$(EXEEXT)
am__EXEEXT_8 = ospfd/ospfd$(EXEEXT)
am__EXEEXT_9 = ospf6d/ospf6d$(EXEEXT)
am__EXEEXT_10 = ospfclient/ospfclient$(EXEEXT)
am__EXEEXT_11 = isisd/isisd$(EXEEXT)
#am__EXEEXT_12 = nhrpd/nhrpd$(EXEEXT)
am__EXEEXT_13 = ldpd/ldpd$(EXEEXT)
am__EXEEXT_14 = babeld/babeld$(EXEEXT)
am__EXEEXT_15 = eigrpd/eigrpd$(EXEEXT)
#am__EXEEXT_16 = sharpd/sharpd$(EXEEXT)
am__EXEEXT_17 = pimd/pimd$(EXEEXT)
am__EXEEXT_18 = pbrd/pbrd$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS) $(sbin_PROGRAMS)
am_babeld_babeld_OBJECTS = babeld/babel_main.$(OBJEXT)
babeld_babeld_OBJECTS = $(am_babeld_babeld_OBJECTS)
babeld_babeld_DEPENDENCIES = babeld/libbabel.a lib/libfrr.la
am_eigrpd_eigrpd_OBJECTS = eigrpd/eigrp_main.$(OBJEXT)
eigrpd_eigrpd_OBJECTS = $(am_eigrpd_eigrpd_OBJECTS)
eigrpd_eigrpd_DEPENDENCIES = eigrpd/libeigrp.a lib/libfrr.la
am_isisd_isisd_OBJECTS = isisd/isis_bpf.$(OBJEXT) \
	isisd/isis_dlpi.$(OBJEXT) isisd/isis_main.$(OBJEXT) \
	isisd/isis_pfpacket.$(OBJEXT)
isisd_isisd_OBJECTS = $(am_isisd_isisd_OBJECTS)
isisd_isisd_DEPENDENCIES = isisd/libisis.a lib/libfrr.la
am_ldpd_ldpd_OBJECTS = ldpd/ldpd.$(OBJEXT)
ldpd_ldpd_OBJECTS = $(am_ldpd_ldpd_OBJECTS)
ldpd_ldpd_DEPENDENCIES = ldpd/libldp.a lib/libfrr.la
am_lib_clippy_OBJECTS = lib/lib_clippy-clippy.$(OBJEXT) \
	lib/lib_clippy-command_graph.$(OBJEXT) \
	lib/lib_clippy-command_lex.$(OBJEXT) \
	lib/lib_clippy-command_parse.$(OBJEXT) \
	lib/lib_clippy-command_py.$(OBJEXT) \
	lib/lib_clippy-defun_lex.$(OBJEXT) \
	lib/lib_clippy-graph.$(OBJEXT) lib/lib_clippy-memory.$(OBJEXT) \
	lib/lib_clippy-vector.$(OBJEXT)
lib_clippy_OBJECTS = $(am_lib_clippy_OBJECTS)
lib_clippy_DEPENDENCIES = $(am__DEPENDENCIES_1)
lib_clippy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(lib_clippy_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_lib_grammar_sandbox_OBJECTS = lib/grammar_sandbox_main.$(OBJEXT)
lib_grammar_sandbox_OBJECTS = $(am_lib_grammar_sandbox_OBJECTS)
lib_grammar_sandbox_DEPENDENCIES = lib/libfrr.la
am_nhrpd_nhrpd_OBJECTS = nhrpd/nhrpd_nhrpd-linux.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-netlink_arp.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-netlink_gre.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_cache.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_event.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_interface.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_main.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_nhs.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_packet.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_peer.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_route.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_shortcut.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_vc.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-nhrp_vty.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-reqid.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-resolver.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-vici.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-zbuf.$(OBJEXT) \
	nhrpd/nhrpd_nhrpd-znl.$(OBJEXT)
nhrpd_nhrpd_OBJECTS = $(am_nhrpd_nhrpd_OBJECTS)
nhrpd_nhrpd_DEPENDENCIES = lib/libfrr.la
nhrpd_nhrpd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(nhrpd_nhrpd_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_ospf6d_ospf6d_OBJECTS = ospf6d/ospf6_main.$(OBJEXT)
ospf6d_ospf6d_OBJECTS = $(am_ospf6d_ospf6d_OBJECTS)
ospf6d_ospf6d_DEPENDENCIES = ospf6d/libospf6.a lib/libfrr.la
am_ospfclient_ospfclient_OBJECTS = ospfclient/ospfclient.$(OBJEXT)
ospfclient_ospfclient_OBJECTS = $(am_ospfclient_ospfclient_OBJECTS)
ospfclient_ospfclient_DEPENDENCIES =  \
	ospfclient/libfrrospfapiclient.la lib/libfrr.la
am_ospfd_ospfd_OBJECTS = ospfd/ospf_main.$(OBJEXT)
ospfd_ospfd_OBJECTS = $(am_ospfd_ospfd_OBJECTS)
ospfd_ospfd_DEPENDENCIES = ospfd/libfrrospf.a lib/libfrr.la
am_pbrd_pbrd_OBJECTS = pbrd/pbr_main.$(OBJEXT)
pbrd_pbrd_OBJECTS = $(am_pbrd_pbrd_OBJECTS)
pbrd_pbrd_DEPENDENCIES = pbrd/libpbr.a lib/libfrr.la
am_pimd_mtracebis_OBJECTS = pimd/mtracebis.$(OBJEXT) \
	pimd/mtracebis_netlink.$(OBJEXT) \
	pimd/mtracebis_routeget.$(OBJEXT)
pimd_mtracebis_OBJECTS = $(am_pimd_mtracebis_OBJECTS)
pimd_mtracebis_DEPENDENCIES = lib/libfrr.la
am_pimd_pimd_OBJECTS = pimd/pim_main.$(OBJEXT)
pimd_pimd_OBJECTS = $(am_pimd_pimd_OBJECTS)
pimd_pimd_DEPENDENCIES = pimd/libpim.a lib/libfrr.la
am_pimd_test_igmpv3_join_OBJECTS = pimd/test_igmpv3_join.$(OBJEXT)
pimd_test_igmpv3_join_OBJECTS = $(am_pimd_test_igmpv3_join_OBJECTS)
pimd_test_igmpv3_join_DEPENDENCIES = lib/libfrr.la
am_ripd_ripd_OBJECTS = ripd/rip_main.$(OBJEXT)
ripd_ripd_OBJECTS = $(am_ripd_ripd_OBJECTS)
ripd_ripd_DEPENDENCIES = ripd/librip.a lib/libfrr.la
am_ripngd_ripngd_OBJECTS = ripngd/ripng_main.$(OBJEXT)
ripngd_ripngd_OBJECTS = $(am_ripngd_ripngd_OBJECTS)
ripngd_ripngd_DEPENDENCIES = ripngd/libripng.a lib/libfrr.la
am_sharpd_sharpd_OBJECTS = sharpd/sharp_main.$(OBJEXT)
sharpd_sharpd_OBJECTS = $(am_sharpd_sharpd_OBJECTS)
sharpd_sharpd_DEPENDENCIES = sharpd/libsharp.a lib/libfrr.la
am_tools_permutations_OBJECTS = tools/permutations.$(OBJEXT)
tools_permutations_OBJECTS = $(am_tools_permutations_OBJECTS)
tools_permutations_DEPENDENCIES = lib/libfrr.la
am_tools_ssd_OBJECTS = tools/start-stop-daemon.$(OBJEXT)
tools_ssd_OBJECTS = $(am_tools_ssd_OBJECTS)
tools_ssd_LDADD = $(LDADD)
am_watchfrr_watchfrr_OBJECTS = watchfrr/watchfrr.$(OBJEXT) \
	watchfrr/watchfrr_vty.$(OBJEXT)
watchfrr_watchfrr_OBJECTS = $(am_watchfrr_watchfrr_OBJECTS)
watchfrr_watchfrr_DEPENDENCIES = lib/libfrr.la
am_zebra_zebra_OBJECTS = zebra/connected.$(OBJEXT) \
	zebra/debug.$(OBJEXT) zebra/if_ioctl.$(OBJEXT) \
	zebra/if_ioctl_solaris.$(OBJEXT) zebra/if_netlink.$(OBJEXT) \
	zebra/if_sysctl.$(OBJEXT) zebra/interface.$(OBJEXT) \
	zebra/ioctl.$(OBJEXT) zebra/ioctl_solaris.$(OBJEXT) \
	zebra/ipforward_proc.$(OBJEXT) \
	zebra/ipforward_solaris.$(OBJEXT) \
	zebra/ipforward_sysctl.$(OBJEXT) \
	zebra/kernel_netlink.$(OBJEXT) zebra/kernel_socket.$(OBJEXT) \
	zebra/label_manager.$(OBJEXT) zebra/main.$(OBJEXT) \
	zebra/redistribute.$(OBJEXT) zebra/router-id.$(OBJEXT) \
	zebra/rt_netlink.$(OBJEXT) zebra/rt_socket.$(OBJEXT) \
	zebra/rtadv.$(OBJEXT) zebra/rtread_getmsg.$(OBJEXT) \
	zebra/rtread_netlink.$(OBJEXT) zebra/rtread_sysctl.$(OBJEXT) \
	zebra/rule_netlink.$(OBJEXT) zebra/rule_socket.$(OBJEXT) \
	zebra/zebra_l2.$(OBJEXT) zebra/zebra_memory.$(OBJEXT) \
	zebra/zebra_mpls.$(OBJEXT) zebra/zebra_mpls_netlink.$(OBJEXT) \
	zebra/zebra_mpls_openbsd.$(OBJEXT) \
	zebra/zebra_mpls_null.$(OBJEXT) zebra/zebra_mpls_vty.$(OBJEXT) \
	zebra/zebra_mroute.$(OBJEXT) zebra/zebra_ns.$(OBJEXT) \
	zebra/zebra_pbr.$(OBJEXT) zebra/zebra_ptm.$(OBJEXT) \
	zebra/zebra_ptm_redistribute.$(OBJEXT) \
	zebra/zebra_pw.$(OBJEXT) zebra/zebra_rib.$(OBJEXT) \
	zebra/zebra_rnh.$(OBJEXT) zebra/zebra_routemap.$(OBJEXT) \
	zebra/zebra_static.$(OBJEXT) zebra/zebra_vrf.$(OBJEXT) \
	zebra/zebra_vty.$(OBJEXT) zebra/zebra_vxlan.$(OBJEXT) \
	zebra/zserv.$(OBJEXT) zebra/zebra_netns_id.$(OBJEXT) \
	zebra/zebra_netns_notify.$(OBJEXT) \
	zebra/table_manager.$(OBJEXT) zebra/zapi_msg.$(OBJEXT)
zebra_zebra_OBJECTS = $(am_zebra_zebra_OBJECTS)
zebra_zebra_DEPENDENCIES = lib/libfrr.la $(am__DEPENDENCIES_1)
SCRIPTS = $(rc_SCRIPTS) $(sbin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_$(V))
am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
SOURCES = $(babeld_libbabel_a_SOURCES) $(eigrpd_libeigrp_a_SOURCES) \
	$(isisd_libisis_a_SOURCES) $(ldpd_libldp_a_SOURCES) \
	$(ospf6d_libospf6_a_SOURCES) $(ospfd_libfrrospf_a_SOURCES) \
	$(pbrd_libpbr_a_SOURCES) $(pimd_libpim_a_SOURCES) \
	$(ripd_librip_a_SOURCES) $(ripngd_libripng_a_SOURCES) \
	$(sharpd_libsharp_a_SOURCES) $(fpm_libfrrfpm_pb_la_SOURCES) \
	$(nodist_fpm_libfrrfpm_pb_la_SOURCES) $(lib_libfrr_la_SOURCES) \
	$(lib_libfrrsnmp_la_SOURCES) $(lib_libfrrzmq_la_SOURCES) \
	$(ospf6d_ospf6d_snmp_la_SOURCES) \
	$(ospfclient_libfrrospfapiclient_la_SOURCES) \
	$(ospfd_ospfd_snmp_la_SOURCES) $(qpb_libfrr_pb_la_SOURCES) \
	$(nodist_qpb_libfrr_pb_la_SOURCES) \
	$(ripd_ripd_snmp_la_SOURCES) $(zebra_zebra_fpm_la_SOURCES) \
	$(zebra_zebra_irdp_la_SOURCES) $(zebra_zebra_snmp_la_SOURCES) \
	$(babeld_babeld_SOURCES) $(eigrpd_eigrpd_SOURCES) \
	$(isisd_isisd_SOURCES) $(ldpd_ldpd_SOURCES) \
	$(lib_clippy_SOURCES) $(lib_grammar_sandbox_SOURCES) \
	$(nhrpd_nhrpd_SOURCES) $(ospf6d_ospf6d_SOURCES) \
	$(ospfclient_ospfclient_SOURCES) $(ospfd_ospfd_SOURCES) \
	$(pbrd_pbrd_SOURCES) $(pimd_mtracebis_SOURCES) \
	$(pimd_pimd_SOURCES) $(pimd_test_igmpv3_join_SOURCES) \
	$(ripd_ripd_SOURCES) $(ripngd_ripngd_SOURCES) \
	$(sharpd_sharpd_SOURCES) $(tools_permutations_SOURCES) \
	$(tools_ssd_SOURCES) $(watchfrr_watchfrr_SOURCES) \
	$(zebra_zebra_SOURCES)
DIST_SOURCES = $(babeld_libbabel_a_SOURCES) \
	$(eigrpd_libeigrp_a_SOURCES) $(isisd_libisis_a_SOURCES) \
	$(ldpd_libldp_a_SOURCES) $(ospf6d_libospf6_a_SOURCES) \
	$(ospfd_libfrrospf_a_SOURCES) $(pbrd_libpbr_a_SOURCES) \
	$(pimd_libpim_a_SOURCES) $(ripd_librip_a_SOURCES) \
	$(ripngd_libripng_a_SOURCES) $(sharpd_libsharp_a_SOURCES) \
	$(fpm_libfrrfpm_pb_la_SOURCES) $(lib_libfrr_la_SOURCES) \
	$(lib_libfrrsnmp_la_SOURCES) $(lib_libfrrzmq_la_SOURCES) \
	$(ospf6d_ospf6d_snmp_la_SOURCES) \
	$(ospfclient_libfrrospfapiclient_la_SOURCES) \
	$(ospfd_ospfd_snmp_la_SOURCES) \
	$(am__qpb_libfrr_pb_la_SOURCES_DIST) \
	$(ripd_ripd_snmp_la_SOURCES) \
	$(am__zebra_zebra_fpm_la_SOURCES_DIST) \
	$(zebra_zebra_irdp_la_SOURCES) $(zebra_zebra_snmp_la_SOURCES) \
	$(babeld_babeld_SOURCES) $(eigrpd_eigrpd_SOURCES) \
	$(isisd_isisd_SOURCES) $(ldpd_ldpd_SOURCES) \
	$(lib_clippy_SOURCES) $(lib_grammar_sandbox_SOURCES) \
	$(nhrpd_nhrpd_SOURCES) $(ospf6d_ospf6d_SOURCES) \
	$(ospfclient_ospfclient_SOURCES) $(ospfd_ospfd_SOURCES) \
	$(pbrd_pbrd_SOURCES) $(pimd_mtracebis_SOURCES) \
	$(pimd_pimd_SOURCES) $(pimd_test_igmpv3_join_SOURCES) \
	$(ripd_ripd_SOURCES) $(ripngd_ripngd_SOURCES) \
	$(sharpd_sharpd_SOURCES) $(tools_permutations_SOURCES) \
	$(tools_ssd_SOURCES) $(watchfrr_watchfrr_SOURCES) \
	$(zebra_zebra_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__dist_examples_DATA_DIST = zebra/zebra.conf.sample \
	ripd/ripd.conf.sample ripngd/ripngd.conf.sample \
	ospfd/ospfd.conf.sample ospf6d/ospf6d.conf.sample \
	isisd/isisd.conf.sample ldpd/ldpd.conf.sample \
	babeld/babeld.conf.sample eigrpd/eigrpd.conf.sample \
	sharpd/sharpd.conf.sample pimd/pimd.conf.sample \
	pbrd/pbrd.conf.sample
DATA = $(dist_examples_DATA)
am__ospfapiheader_HEADERS_DIST = ospfclient/ospf_apiclient.h
am__ospfdheader_HEADERS_DIST = ospfd/ospf_api.h ospfd/ospf_asbr.h \
	ospfd/ospf_dump.h ospfd/ospf_dump_api.h ospfd/ospf_ism.h \
	ospfd/ospf_lsa.h ospfd/ospf_lsdb.h ospfd/ospf_nsm.h \
	ospfd/ospf_opaque.h ospfd/ospfd.h
am__pkginclude_HEADERS_DIST = lib/bfd.h lib/bitfield.h lib/buffer.h \
	lib/checksum.h lib/command.h lib/command_graph.h \
	lib/command_match.h lib/compiler.h lib/csv.h lib/debug.h \
	lib/distribute.h lib/event_counter.h lib/ferr.h lib/fifo.h \
	lib/filter.h lib/freebsd-queue.h lib/frr_pthread.h \
	lib/frratomic.h lib/frrstr.h lib/getopt.h lib/graph.h \
	lib/hash.h lib/hook.h lib/if.h lib/if_rmap.h lib/imsg.h \
	lib/ipaddr.h lib/jhash.h lib/json.h lib/keychain.h \
	lib/libfrr.h lib/libospf.h lib/linklist.h lib/log.h lib/md5.h \
	lib/memory.h lib/memory_vty.h lib/module.h lib/monotime.h \
	lib/mpls.h lib/network.h lib/nexthop.h lib/nexthop_group.h \
	lib/ns.h lib/openbsd-queue.h lib/openbsd-tree.h lib/plist.h \
	lib/pqueue.h lib/prefix.h lib/privs.h lib/ptm_lib.h lib/pw.h \
	lib/qobj.h lib/queue.h lib/ringbuf.h lib/routemap.h lib/sbuf.h \
	lib/sha256.h lib/sigevent.h lib/skiplist.h lib/smux.h \
	lib/sockopt.h lib/sockunion.h lib/spf_backoff.h \
	lib/srcdest_table.h lib/stream.h lib/systemd.h lib/table.h \
	lib/termtable.h lib/thread.h lib/vector.h lib/vlan.h lib/vrf.h \
	lib/vrf_int.h lib/vty.h lib/vxlan.h lib/wheel.h \
	lib/workqueue.h lib/zassert.h lib/zclient.h lib/zebra.h \
	lib/logicalrouter.h lib/pbr.h lib/frr_zmq.h
HEADERS = $(eigrpdheader_HEADERS) $(nodist_pkginclude_HEADERS) \
	$(noinst_HEADERS) $(ospfapiheader_HEADERS) \
	$(ospfdheader_HEADERS) $(pkginclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/babeld/subdir.am \
	$(srcdir)/common.am $(srcdir)/config.h.in \
	$(srcdir)/eigrpd/subdir.am $(srcdir)/fpm/subdir.am \
	$(srcdir)/include/subdir.am $(srcdir)/isisd/subdir.am \
	$(srcdir)/ldpd/subdir.am $(srcdir)/lib/subdir.am \
	$(srcdir)/nhrpd/subdir.am $(srcdir)/ospf6d/subdir.am \
	$(srcdir)/ospfclient/subdir.am $(srcdir)/ospfd/subdir.am \
	$(srcdir)/pbrd/subdir.am $(srcdir)/pimd/subdir.am \
	$(srcdir)/qpb/subdir.am $(srcdir)/ripd/subdir.am \
	$(srcdir)/ripngd/subdir.am $(srcdir)/sharpd/subdir.am \
	$(srcdir)/tools/subdir.am $(srcdir)/watchfrr/subdir.am \
	$(srcdir)/zebra/subdir.am $(top_srcdir)/alpine/APKBUILD.in \
	$(top_srcdir)/lib/version.h.in $(top_srcdir)/pkgsrc/bgpd.sh.in \
	$(top_srcdir)/pkgsrc/eigrpd.sh.in \
	$(top_srcdir)/pkgsrc/ospf6d.sh.in \
	$(top_srcdir)/pkgsrc/ospfd.sh.in \
	$(top_srcdir)/pkgsrc/ripd.sh.in \
	$(top_srcdir)/pkgsrc/ripngd.sh.in \
	$(top_srcdir)/pkgsrc/zebra.sh.in \
	$(top_srcdir)/redhat/frr.spec.in \
	$(top_srcdir)/snapcraft/snapcraft.yaml.in \
	$(top_srcdir)/tests/lib/cli/test_cli.refout.in AUTHORS COPYING \
	ChangeLog INSTALL NEWS README compile config.guess config.sub \
	depcomp install-sh lib/command_lex.c lib/command_parse.c \
	lib/command_parse.h lib/defun_lex.c ltmain.sh missing ylwrap
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/rahyab/FRR5-1/frr5/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
ASAN_FLAGS = 
AUTOCONF = ${SHELL} /home/rahyab/FRR5-1/frr5/missing autoconf
AUTOHEADER = ${SHELL} /home/rahyab/FRR5-1/frr5/missing autoheader
AUTOMAKE = ${SHELL} /home/rahyab/FRR5-1/frr5/missing automake-1.15
AWK = gawk
BGPD = bgpd
BISON_CLOSEBRACE = }
BISON_OPENBRACE = {
BISON_VERBOSE = -Dparse.error=verbose
CARES_CFLAGS = 
CARES_LIBS = 
CC = gcc -std=gnu11
CCDEPMODE = depmode=gcc3
CFG_MODULE = /usr/local/lib/frr/modules
CFG_SBIN = /usr/local/sbin
CFG_STATE = /usr/local/rahyab/state
CFG_SYSCONF = /usr/local/rahyab
CFLAGS =  -g -Os -fno-omit-frame-pointer -funwind-tables -Wall -Wextra -Wmissing-prototypes -Wmissing-declarations -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -pthread
CONFDATE = 20190303
CONFIG_ARGS =  '--enable-group=rahyab' '--enable-user=rahyab' '--disable-nhrpd' '--sysconfdir=/usr/local/rahyab' '--localstatedir=/usr/local/rahyab/state'
CPP = gcc -E
CPPFLAGS = 
CURSES = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H -DSYSCONFDIR=\"$(sysconfdir)/\" -DCONFDATE=$(CONFDATE) -DVERSION_TYPE_$(VERSION_TYPE)
DEPDIR = .deps
DFLT_NAME = traditional
DLLTOOL = false
DOC = doc
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_LIBPCREPOSIX = 
HOSTTOOLS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  -rdynamic
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBCAP = 
LIBM = -lm
LIBOBJS = 
LIBPAM = 
LIBREADLINE = -lreadline  -ltermcap
LIBRFP = bgpd/rfp-example/librfp
LIBS = -ldl -lm -lcrypt   -ljson-c -lrt
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/rahyab/FRR5-1/frr5/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MSAN_FLAGS = 
NETSNMP_CONFIG = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = frr
PACKAGE_BUGREPORT = https://github.com/frrouting/frr/issues
PACKAGE_EXTRAVERSION = 
PACKAGE_FULLNAME = FRRouting
PACKAGE_NAME = frr
PACKAGE_STRING = frr 5.1-dev
PACKAGE_TARNAME = frr
PACKAGE_URL = https://frrouting.org/
PACKAGE_VERSION = 5.1-dev
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PROTOBUF_C_CFLAGS = 
PROTOBUF_C_LIBS = 
PROTOC_C = 
PTHREAD_CC = gcc -std=gnu11
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHONCONFIG = python3-config
PYTHON_CFLAGS = -I/usr/include/python3.5m -I/usr/include/python3.5m
PYTHON_LIBS = -lpython3.5m -lpthread -ldl  -lutil -lm 
RANLIB = ranlib
RFPINC = bgpd/rfp-example/librfp
RFPTEST = bgpd/rfp-example/rfptest
RTRLIB_CFLAGS = 
RTRLIB_LIBS = 
SAN_CLIPPY_FLAGS = 
SED = sed
SET_MAKE = 
SHELL = /bin/bash
SNMP_CFLAGS = 
SNMP_LIBS = 
SOLARIS = 
STRIP = strip
TSAN_FLAGS = 
VERSION = 5.1-dev
VNC_RFP_PATH = bgpd/rfp-example
VTYSH = vtysh
WERROR = 
YACC = bison -y
YFLAGS = 
ZEROMQ_CFLAGS = 
ZEROMQ_LIBS = 
abs_builddir = /home/rahyab/FRR5-1/frr5
abs_srcdir = /home/rahyab/FRR5-1/frr5
abs_top_builddir = /home/rahyab/FRR5-1/frr5
abs_top_srcdir = /home/rahyab/FRR5-1/frr5
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
ac_ct_PYTHONCONFIG = python3-config
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_group = rahyab
enable_user = rahyab
enable_vty_group = 
exampledir = /usr/local/rahyab
exec_prefix = ${prefix}
frr_statedir = /usr/local/rahyab/state
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/rahyab/FRR5-1/frr5/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /usr/local/rahyab/state
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
moduledir = ${libdir}/frr/modules
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgsrcrcdir = 
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /usr/local/rahyab
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
AUTOMAKE_OPTIONS = subdir-objects 1.12

#
# Automake fragment intended to be shared by Makefile.am files in the
# tree. When used, should be included at the very top of the file.
#
AM_CPPFLAGS =     \
	-I$(top_srcdir) -I$(top_srcdir)/include -I$(top_srcdir)/lib \
	-I$(top_builddir) -I$(top_builddir)/include \
	-I$(top_builddir)/lib
AM_CFLAGS =    
AM_V_CLIPPY = $(am__v_CLIPPY_$(V))
am__v_CLIPPY_ = $(am__v_CLIPPY_$(AM_DEFAULT_VERBOSITY))
am__v_CLIPPY_0 = @echo "  CLIPPY  " $@;
am__v_CLIPPY_1 = 
CLIPPY_DEPS = $(HOSTTOOLS)lib/clippy $(top_srcdir)/python/clidef.py
SUFFIXES = _clippy.c .proto .pb-c.c .pb-c.h .pb.h

# Uncomment to use an non-system version of libprotobuf-c.
#
# Q_PROTOBUF_C_CLIENT_INCLUDES = -I$(top_srcdir)/third-party/protobuf-c/src
# Q_PROTOBUF_C_CLIENT_LDOPTS = $(top_builddir)/third-party/protobuf-c/src/libprotobuf-c.la
#Q_PROTOBUF_C_CLIENT_INCLUDES = 
#Q_PROTOBUF_C_CLIENT_LDOPTS = -lprotobuf-c
#Q_PROTOC = protoc
#Q_PROTOC_C = protoc-c
#AM_V_PROTOC_C = $(am__v_PROTOC_C_$(V))
#am__v_PROTOC_C_ = $(am__v_PROTOC_C_$(AM_DEFAULT_VERBOSITY))
#am__v_PROTOC_C_0 = @echo "  PROTOC_C" $@;
#am__v_PROTOC_C_1 = 

#
# Information about how to link to various libraries.
#
#Q_FRR_PB_CLIENT_LDOPTS = $(top_srcdir)/qpb/libfrr_pb.la $(Q_PROTOBUF_C_CLIENT_LDOPTS)
#Q_FPM_PB_CLIENT_LDOPTS = $(top_srcdir)/fpm/libfrrfpm_pb.la $(Q_FRR_PB_CLIENT_LDOPTS)
VERSION_TYPE := $(shell if echo $(VERSION) | grep -q '^[0-9\.]*$$'; then echo RELEASE ; else echo DEV ; fi)

#
# generated sources & extra foo
#
EXTRA_DIST = lib/command_lex.h lib/command_parse.h lib/gitversion.pl \
	lib/route_types.pl lib/route_types.txt zebra/GNOME-SMI \
	zebra/GNOME-PRODUCT-ZEBRA-MIB qpb/qpb.proto fpm/fpm.proto \
	tools/etc tools/frr tools/frr-reload tools/frr-reload.py \
	tools/frr.service tools/multiple-bgpd.sh tools/rrcheck.pl \
	tools/rrlookup.pl tools/zc.pl tools/zebra.el \
	ripd/RIPv2-MIB.txt ospfd/ChangeLog.opaque.txt \
	ospfd/OSPF-MIB.txt ospfd/OSPF-TRAP-MIB.txt \
	eigrpd/EIGRP-MIB.txt aclocal.m4 m4/README.txt python/clidef.py \
	python/clippy/__init__.py redhat/frr.init redhat/frr.service \
	redhat/daemons redhat/frr.logrotate redhat/frr.pam \
	redhat/frr.spec redhat/README.rpm_build.md \
	snapcraft/snapcraft.yaml snapcraft/README.snap_build.md \
	snapcraft/README.usage.md snapcraft/extra_version_info.txt \
	snapcraft/scripts snapcraft/defaults snapcraft/helpers \
	snapcraft/snap vtysh/Makefile.am vtysh/Makefile.in # end
BUILT_SOURCES = lib/gitversion.h lib/route_types.h # end
CLEANFILES = $(am__append_15)
examplesdir = $(exampledir)
sbin_SCRIPTS = tools/frr-reload tools/frr-reload.py tools/frr # end
noinst_HEADERS = include/linux/if_bridge.h include/linux/if_link.h \
	include/linux/lwtunnel.h include/linux/mpls_iptunnel.h \
	include/linux/neighbour.h include/linux/netlink.h \
	include/linux/rtnetlink.h include/linux/socket.h \
	include/linux/net_namespace.h include/linux/fib_rules.h \
	lib/clippy.h lib/log_int.h lib/plist_int.h zebra/connected.h \
	zebra/debug.h zebra/if_netlink.h zebra/interface.h \
	zebra/ioctl.h zebra/ioctl_solaris.h zebra/ipforward.h \
	zebra/irdp.h zebra/kernel_netlink.h zebra/kernel_socket.h \
	zebra/label_manager.h zebra/redistribute.h zebra/rib.h \
	zebra/router-id.h zebra/rt.h zebra/rt_netlink.h zebra/rtadv.h \
	zebra/rule_netlink.h zebra/zebra_fpm_private.h \
	zebra/zebra_l2.h zebra/zebra_memory.h zebra/zebra_mpls.h \
	zebra/zebra_mroute.h zebra/zebra_ns.h zebra/zebra_pbr.h \
	zebra/zebra_ptm.h zebra/zebra_ptm_redistribute.h \
	zebra/zebra_pw.h zebra/zebra_rnh.h zebra/zebra_routemap.h \
	zebra/zebra_static.h zebra/zebra_vrf.h zebra/zebra_vxlan.h \
	zebra/zebra_vxlan_private.h zebra/zserv.h \
	zebra/zebra_netns_id.h zebra/zebra_netns_notify.h \
	zebra/table_manager.h zebra/zapi_msg.h watchfrr/watchfrr.h \
	ripd/rip_debug.h ripd/rip_interface.h ripd/rip_memory.h \
	ripd/ripd.h ripngd/ripng_debug.h ripngd/ripng_memory.h \
	ripngd/ripng_nexthop.h ripngd/ripng_route.h ripngd/ripngd.h \
	ospfd/ospf_abr.h ospfd/ospf_apiserver.h ospfd/ospf_ase.h \
	ospfd/ospf_bfd.h ospfd/ospf_ext.h ospfd/ospf_flood.h \
	ospfd/ospf_ia.h ospfd/ospf_interface.h ospfd/ospf_memory.h \
	ospfd/ospf_neighbor.h ospfd/ospf_network.h ospfd/ospf_packet.h \
	ospfd/ospf_ri.h ospfd/ospf_route.h ospfd/ospf_spf.h \
	ospfd/ospf_sr.h ospfd/ospf_te.h ospfd/ospf_vty.h \
	ospfd/ospf_zebra.h ospf6d/ospf6_abr.h ospf6d/ospf6_area.h \
	ospf6d/ospf6_asbr.h ospf6d/ospf6_bfd.h ospf6d/ospf6_flood.h \
	ospf6d/ospf6_interface.h ospf6d/ospf6_intra.h \
	ospf6d/ospf6_lsa.h ospf6d/ospf6_lsdb.h ospf6d/ospf6_memory.h \
	ospf6d/ospf6_message.h ospf6d/ospf6_neighbor.h \
	ospf6d/ospf6_network.h ospf6d/ospf6_proto.h \
	ospf6d/ospf6_route.h ospf6d/ospf6_spf.h ospf6d/ospf6_top.h \
	ospf6d/ospf6_zebra.h ospf6d/ospf6d.h isisd/dict.h \
	isisd/isis_adjacency.h isisd/isis_circuit.h \
	isisd/isis_common.h isisd/isis_constants.h isisd/isis_csm.h \
	isisd/isis_dr.h isisd/isis_dynhn.h isisd/isis_events.h \
	isisd/isis_flags.h isisd/isis_lsp.h isisd/isis_lsp_hash.h \
	isisd/isis_memory.h isisd/isis_misc.h isisd/isis_mt.h \
	isisd/isis_network.h isisd/isis_pdu.h isisd/isis_redist.h \
	isisd/isis_route.h isisd/isis_routemap.h isisd/isis_spf.h \
	isisd/isis_te.h isisd/isis_tlvs.h isisd/isis_zebra.h \
	isisd/isisd.h isisd/iso_checksum.h nhrpd/debug.h nhrpd/list.h \
	nhrpd/netlink.h nhrpd/nhrp_protocol.h nhrpd/nhrpd.h nhrpd/os.h \
	nhrpd/vici.h nhrpd/zbuf.h nhrpd/znl.h ldpd/control.h \
	ldpd/lde.h ldpd/ldp.h ldpd/ldp_debug.h ldpd/ldp_vty.h \
	ldpd/ldpd.h ldpd/ldpe.h ldpd/log.h babeld/babel_filter.h \
	babeld/babel_interface.h babeld/babel_main.h \
	babeld/babel_memory.h babeld/babel_zebra.h babeld/babeld.h \
	babeld/kernel.h babeld/message.h babeld/neighbour.h \
	babeld/net.h babeld/resend.h babeld/route.h babeld/source.h \
	babeld/util.h babeld/xroute.h eigrpd/eigrp_const.h \
	eigrpd/eigrp_filter.h eigrpd/eigrp_fsm.h \
	eigrpd/eigrp_interface.h eigrpd/eigrp_macros.h \
	eigrpd/eigrp_memory.h eigrpd/eigrp_neighbor.h \
	eigrpd/eigrp_network.h eigrpd/eigrp_packet.h \
	eigrpd/eigrp_snmp.h eigrpd/eigrp_structs.h eigrpd/eigrp_vty.h \
	eigrpd/eigrp_zebra.h sharpd/sharp_vty.h sharpd/sharp_zebra.h \
	pimd/pim_assert.h pimd/pim_bfd.h pimd/pim_br.h pimd/pim_cmd.h \
	pimd/pim_hello.h pimd/pim_iface.h pimd/pim_ifchannel.h \
	pimd/pim_igmp.h pimd/pim_igmp_join.h pimd/pim_igmp_mtrace.h \
	pimd/pim_igmp_stats.h pimd/pim_igmpv2.h pimd/pim_igmpv3.h \
	pimd/pim_instance.h pimd/pim_int.h pimd/pim_join.h \
	pimd/pim_jp_agg.h pimd/pim_macro.h pimd/pim_memory.h \
	pimd/pim_mroute.h pimd/pim_msdp.h pimd/pim_msdp_packet.h \
	pimd/pim_msdp_socket.h pimd/pim_msg.h pimd/pim_neighbor.h \
	pimd/pim_nht.h pimd/pim_oil.h pimd/pim_pim.h \
	pimd/pim_register.h pimd/pim_rp.h pimd/pim_rpf.h \
	pimd/pim_signals.h pimd/pim_sock.h pimd/pim_ssm.h \
	pimd/pim_ssmpingd.h pimd/pim_static.h pimd/pim_str.h \
	pimd/pim_time.h pimd/pim_tlv.h pimd/pim_upstream.h \
	pimd/pim_util.h pimd/pim_version.h pimd/pim_vty.h \
	pimd/pim_zebra.h pimd/pim_zlookup.h pimd/pimd.h \
	pimd/mtracebis_netlink.h pimd/mtracebis_routeget.h \
	pbrd/pbr_map.h pbrd/pbr_memory.h pbrd/pbr_nht.h pbrd/pbr_vty.h \
	pbrd/pbr_zebra.h pbrd/pbr_debug.h defaults.h
noinst_LIBRARIES = $(am__append_17) $(am__append_21) $(am__append_23) \
	$(am__append_27) $(am__append_33) $(am__append_37) \
	$(am__append_40) $(am__append_43) $(am__append_46) \
	$(am__append_49) $(am__append_54)

#
# libfrr
#
lib_LTLIBRARIES = lib/libfrr.la $(am__append_1) $(am__append_2) \
	$(am__append_13) $(am__append_16) $(am__append_31)
module_LTLIBRARIES = $(am__append_7) $(am__append_8) $(am__append_9) \
	$(am__append_20) $(am__append_26) $(am__append_30)
pkginclude_HEADERS = lib/bfd.h lib/bitfield.h lib/buffer.h \
	lib/checksum.h lib/command.h lib/command_graph.h \
	lib/command_match.h lib/compiler.h lib/csv.h lib/debug.h \
	lib/distribute.h lib/event_counter.h lib/ferr.h lib/fifo.h \
	lib/filter.h lib/freebsd-queue.h lib/frr_pthread.h \
	lib/frratomic.h lib/frrstr.h lib/getopt.h lib/graph.h \
	lib/hash.h lib/hook.h lib/if.h lib/if_rmap.h lib/imsg.h \
	lib/ipaddr.h lib/jhash.h lib/json.h lib/keychain.h \
	lib/libfrr.h lib/libospf.h lib/linklist.h lib/log.h lib/md5.h \
	lib/memory.h lib/memory_vty.h lib/module.h lib/monotime.h \
	lib/mpls.h lib/network.h lib/nexthop.h lib/nexthop_group.h \
	lib/ns.h lib/openbsd-queue.h lib/openbsd-tree.h lib/plist.h \
	lib/pqueue.h lib/prefix.h lib/privs.h lib/ptm_lib.h lib/pw.h \
	lib/qobj.h lib/queue.h lib/ringbuf.h lib/routemap.h lib/sbuf.h \
	lib/sha256.h lib/sigevent.h lib/skiplist.h lib/smux.h \
	lib/sockopt.h lib/sockunion.h lib/spf_backoff.h \
	lib/srcdest_table.h lib/stream.h lib/systemd.h lib/table.h \
	lib/termtable.h lib/thread.h lib/vector.h lib/vlan.h lib/vrf.h \
	lib/vrf_int.h lib/vty.h lib/vxlan.h lib/wheel.h \
	lib/workqueue.h lib/zassert.h lib/zclient.h lib/zebra.h \
	lib/logicalrouter.h lib/pbr.h $(am__append_3)
nodist_pkginclude_HEADERS = lib/route_types.h lib/version.h # end
dist_examples_DATA = $(am__append_6) $(am__append_19) \
	ripngd/ripngd.conf.sample $(am__append_25) $(am__append_29) \
	$(am__append_35) $(am__append_39) $(am__append_42) \
	$(am__append_45) $(am__append_48) $(am__append_53) \
	$(am__append_56)
lib_libfrr_la_LDFLAGS = -version-info 0:0:0
lib_libfrr_la_LIBADD = 
lib_libfrr_la_SOURCES = \
	lib/bfd.c \
	lib/buffer.c \
	lib/checksum.c \
	lib/command.c \
	lib/command_graph.c \
	lib/command_lex.l \
	lib/command_match.c \
	lib/command_parse.y \
	lib/csv.c \
	lib/debug.c \
	lib/distribute.c \
	lib/event_counter.c \
	lib/ferr.c \
	lib/filter.c \
	lib/frr_pthread.c \
	lib/frrstr.c \
	lib/getopt.c \
	lib/getopt1.c \
	lib/grammar_sandbox.c \
	lib/graph.c \
	lib/hash.c \
	lib/hook.c \
	lib/if.c \
	lib/if_rmap.c \
	lib/imsg-buffer.c \
	lib/imsg.c \
	lib/jhash.c \
	lib/json.c \
	lib/keychain.c \
	lib/libfrr.c \
	lib/linklist.c \
	lib/log.c \
	lib/md5.c \
	lib/memory.c \
	lib/memory_vty.c \
	lib/module.c \
	lib/mpls.c \
	lib/network.c \
	lib/nexthop.c \
	lib/netns_linux.c \
	lib/netns_other.c \
	lib/nexthop_group.c \
	lib/openbsd-tree.c \
	lib/pid_output.c \
	lib/plist.c \
	lib/pqueue.c \
	lib/prefix.c \
	lib/privs.c \
	lib/ptm_lib.c \
	lib/qobj.c \
	lib/ringbuf.c \
	lib/routemap.c \
	lib/sbuf.c \
	lib/sha256.c \
	lib/sigevent.c \
	lib/skiplist.c \
	lib/sockopt.c \
	lib/sockunion.c \
	lib/spf_backoff.c \
	lib/srcdest_table.c \
	lib/stream.c \
	lib/strlcat.c \
	lib/strlcpy.c \
	lib/systemd.c \
	lib/table.c \
	lib/termtable.c \
	lib/thread.c \
	lib/vector.c \
	lib/vrf.c \
	lib/vty.c \
	lib/wheel.c \
	lib/workqueue.c \
	lib/zclient.c \
	lib/logicalrouter.c \
	# end

lib_libfrrsnmp_la_CFLAGS = $(WERROR) $(SNMP_CFLAGS) -std=gnu99
lib_libfrrsnmp_la_LDFLAGS = -version-info 0:0:0
lib_libfrrsnmp_la_LIBADD = lib/libfrr.la $(SNMP_LIBS)
lib_libfrrsnmp_la_SOURCES = \
	lib/agentx.c \
	lib/smux.c \
	lib/snmp.c \
	# end

lib_libfrrzmq_la_CFLAGS = $(WERROR) $(ZEROMQ_CFLAGS)
lib_libfrrzmq_la_LDFLAGS = -version-info 0:0:0
lib_libfrrzmq_la_LIBADD = lib/libfrr.la $(ZEROMQ_LIBS)
lib_libfrrzmq_la_SOURCES = \
	lib/frr_zmq.c \
	#end

lib_grammar_sandbox_SOURCES = \
	lib/grammar_sandbox_main.c

lib_grammar_sandbox_LDADD = \
	lib/libfrr.la

lib_clippy_CPPFLAGS = $(AM_CPPFLAGS) -D_GNU_SOURCE -DBUILDING_CLIPPY 
lib_clippy_CFLAGS = $(PYTHON_CFLAGS) 
lib_clippy_LDADD = $(PYTHON_LIBS)
lib_clippy_SOURCES = \
	lib/clippy.c \
	lib/command_graph.c \
	lib/command_lex.l \
	lib/command_parse.y \
	lib/command_py.c \
	lib/defun_lex.l \
	lib/graph.c \
	lib/memory.c \
	lib/vector.c \
	# end

AM_YFLAGS = -d -Dapi.prefix={cmd_yy} -Dparse.error=verbose
#GITH = lib/gitversion.h
zebra_zebra_LDADD = lib/libfrr.la $(LIBCAP)
zebra_zebra_SOURCES = \
	zebra/connected.c \
	zebra/debug.c \
	zebra/if_ioctl.c \
	zebra/if_ioctl_solaris.c \
	zebra/if_netlink.c \
	zebra/if_sysctl.c \
	zebra/interface.c \
	zebra/ioctl.c \
	zebra/ioctl_solaris.c \
	zebra/ipforward_proc.c \
	zebra/ipforward_solaris.c \
	zebra/ipforward_sysctl.c \
	zebra/kernel_netlink.c \
	zebra/kernel_socket.c \
	zebra/label_manager.c \
	zebra/main.c \
	zebra/redistribute.c \
	zebra/router-id.c \
	zebra/rt_netlink.c \
	zebra/rt_socket.c \
	zebra/rtadv.c \
	zebra/rtread_getmsg.c \
	zebra/rtread_netlink.c \
	zebra/rtread_sysctl.c \
	zebra/rule_netlink.c \
	zebra/rule_socket.c \
	zebra/zebra_l2.c \
	zebra/zebra_memory.c \
	zebra/zebra_mpls.c \
	zebra/zebra_mpls_netlink.c \
	zebra/zebra_mpls_openbsd.c \
	zebra/zebra_mpls_null.c \
	zebra/zebra_mpls_vty.c \
	zebra/zebra_mroute.c \
	zebra/zebra_ns.c \
	zebra/zebra_pbr.c \
	zebra/zebra_ptm.c \
	zebra/zebra_ptm_redistribute.c \
	zebra/zebra_pw.c \
	zebra/zebra_rib.c \
	zebra/zebra_rnh.c \
	zebra/zebra_routemap.c \
	zebra/zebra_static.c \
	zebra/zebra_vrf.c \
	zebra/zebra_vty.c \
	zebra/zebra_vxlan.c \
	zebra/zserv.c \
	zebra/zebra_netns_id.c \
	zebra/zebra_netns_notify.c \
	zebra/table_manager.c \
	zebra/zapi_msg.c \
	# end

zebra_zebra_irdp_la_SOURCES = \
	zebra/irdp_interface.c \
	zebra/irdp_main.c \
	zebra/irdp_packet.c \
	# end

zebra_zebra_irdp_la_LDFLAGS = -avoid-version -module -shared -export-dynamic
zebra_zebra_snmp_la_SOURCES = zebra/zebra_snmp.c
zebra_zebra_snmp_la_CFLAGS = $(WERROR) $(SNMP_CFLAGS) -std=gnu99
zebra_zebra_snmp_la_LDFLAGS = -avoid-version -module -shared -export-dynamic
zebra_zebra_snmp_la_LIBADD = lib/libfrrsnmp.la
zebra_zebra_fpm_la_LDFLAGS = -avoid-version -module -shared -export-dynamic
zebra_zebra_fpm_la_LIBADD = $(Q_FPM_PB_CLIENT_LDOPTS)
zebra_zebra_fpm_la_SOURCES = zebra/zebra_fpm.c \
	zebra/zebra_fpm_netlink.c $(am__append_10) $(am__append_11)
watchfrr_watchfrr_LDADD = lib/libfrr.la 
watchfrr_watchfrr_SOURCES = \
	watchfrr/watchfrr.c \
	watchfrr/watchfrr_vty.c \
	# end

qpb_libfrr_pb_la_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/lib -I$(top_builddir) -I$(top_builddir)/lib \
	$(Q_PROTOBUF_C_CLIENT_INCLUDES)

qpb_libfrr_pb_la_LDFLAGS = -version-info 0:0:0
qpb_libfrr_pb_la_SOURCES = qpb/linear_allocator.h qpb/qpb.h qpb/qpb.c \
	qpb/qpb_allocator.h $(am__append_14)
#nodist_qpb_libfrr_pb_la_SOURCES = qpb/qpb.pb-c.c
fpm_libfrrfpm_pb_la_LDFLAGS = -version-info 0:0:0
fpm_libfrrfpm_pb_la_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/lib -I$(top_builddir) -I$(top_builddir)/lib \
	$(Q_PROTOBUF_C_CLIENT_INCLUDES)

fpm_libfrrfpm_pb_la_SOURCES = \
	fpm/fpm.h \
	fpm/fpm_pb.h \
	fpm/fpm_pb.c \
	# end

#nodist_fpm_libfrrfpm_pb_la_SOURCES = fpm/fpm.pb-c.c
tools_permutations_SOURCES = tools/permutations.c
tools_permutations_LDADD = lib/libfrr.la
tools_ssd_SOURCES = tools/start-stop-daemon.c
ripd_librip_a_SOURCES = \
	ripd/rip_debug.c \
	ripd/rip_interface.c \
	ripd/rip_memory.c \
	ripd/rip_offset.c \
	ripd/rip_peer.c \
	ripd/rip_routemap.c \
	ripd/rip_zebra.c \
	ripd/ripd.c \
	# end

ripd_ripd_LDADD = ripd/librip.a lib/libfrr.la 
ripd_ripd_SOURCES = \
	ripd/rip_main.c \
	# end

ripd_ripd_snmp_la_SOURCES = ripd/rip_snmp.c
ripd_ripd_snmp_la_CFLAGS = $(WERROR) $(SNMP_CFLAGS) -std=gnu99
ripd_ripd_snmp_la_LDFLAGS = -avoid-version -module -shared -export-dynamic
ripd_ripd_snmp_la_LIBADD = lib/libfrrsnmp.la
ripngd_libripng_a_SOURCES = \
	ripngd/ripng_debug.c \
	ripngd/ripng_interface.c \
	ripngd/ripng_memory.c \
	ripngd/ripng_nexthop.c \
	ripngd/ripng_offset.c \
	ripngd/ripng_peer.c \
	ripngd/ripng_route.c \
	ripngd/ripng_routemap.c \
	ripngd/ripng_zebra.c \
	ripngd/ripngd.c \
	# end

ripngd_ripngd_LDADD = ripngd/libripng.a lib/libfrr.la 
ripngd_ripngd_SOURCES = \
	ripngd/ripng_main.c \
	# end

ospfd_libfrrospf_a_SOURCES = \
	ospfd/ospf_abr.c \
	ospfd/ospf_api.c \
	ospfd/ospf_apiserver.c \
	ospfd/ospf_asbr.c \
	ospfd/ospf_ase.c \
	ospfd/ospf_bfd.c \
	ospfd/ospf_dump.c \
	ospfd/ospf_dump_api.c \
	ospfd/ospf_ext.c \
	ospfd/ospf_flood.c \
	ospfd/ospf_ia.c \
	ospfd/ospf_interface.c \
	ospfd/ospf_ism.c \
	ospfd/ospf_lsa.c \
	ospfd/ospf_lsdb.c \
	ospfd/ospf_memory.c \
	ospfd/ospf_neighbor.c \
	ospfd/ospf_network.c \
	ospfd/ospf_nsm.c \
	ospfd/ospf_opaque.c \
	ospfd/ospf_packet.c \
	ospfd/ospf_ri.c \
	ospfd/ospf_route.c \
	ospfd/ospf_routemap.c \
	ospfd/ospf_spf.c \
	ospfd/ospf_sr.c \
	ospfd/ospf_te.c \
	ospfd/ospf_vty.c \
	ospfd/ospf_zebra.c \
	ospfd/ospfd.c \
	# end

ospfdheaderdir = $(pkgincludedir)/ospfd
ospfdheader_HEADERS = \
	ospfd/ospf_api.h \
	ospfd/ospf_asbr.h \
	ospfd/ospf_dump.h \
	ospfd/ospf_dump_api.h \
	ospfd/ospf_ism.h \
	ospfd/ospf_lsa.h \
	ospfd/ospf_lsdb.h \
	ospfd/ospf_nsm.h \
	ospfd/ospf_opaque.h \
	ospfd/ospfd.h \
	# end

ospfd_ospfd_LDADD = ospfd/libfrrospf.a lib/libfrr.la  -lm
ospfd_ospfd_SOURCES = ospfd/ospf_main.c
ospfd_ospfd_snmp_la_SOURCES = ospfd/ospf_snmp.c
ospfd_ospfd_snmp_la_CFLAGS = $(WERROR) $(SNMP_CFLAGS) -std=gnu99
ospfd_ospfd_snmp_la_LDFLAGS = -avoid-version -module -shared -export-dynamic
ospfd_ospfd_snmp_la_LIBADD = lib/libfrrsnmp.la
ospf6d_libospf6_a_SOURCES = \
	ospf6d/ospf6_abr.c \
	ospf6d/ospf6_area.c \
	ospf6d/ospf6_asbr.c \
	ospf6d/ospf6_bfd.c \
	ospf6d/ospf6_flood.c \
	ospf6d/ospf6_interface.c \
	ospf6d/ospf6_intra.c \
	ospf6d/ospf6_lsa.c \
	ospf6d/ospf6_lsdb.c \
	ospf6d/ospf6_memory.c \
	ospf6d/ospf6_message.c \
	ospf6d/ospf6_neighbor.c \
	ospf6d/ospf6_network.c \
	ospf6d/ospf6_proto.c \
	ospf6d/ospf6_route.c \
	ospf6d/ospf6_spf.c \
	ospf6d/ospf6_top.c \
	ospf6d/ospf6_zebra.c \
	ospf6d/ospf6d.c \
	# end

ospf6d_ospf6d_LDADD = ospf6d/libospf6.a lib/libfrr.la 
ospf6d_ospf6d_SOURCES = \
	ospf6d/ospf6_main.c \
	# end

ospf6d_ospf6d_snmp_la_SOURCES = ospf6d/ospf6_snmp.c
ospf6d_ospf6d_snmp_la_CFLAGS = $(WERROR) $(SNMP_CFLAGS) -std=gnu99
ospf6d_ospf6d_snmp_la_LDFLAGS = -avoid-version -module -shared -export-dynamic
ospf6d_ospf6d_snmp_la_LIBADD = lib/libfrrsnmp.la
ospfclient_libfrrospfapiclient_la_LDFLAGS = -version-info 0:0:0
ospfclient_libfrrospfapiclient_la_LIBADD = lib/libfrr.la
ospfclient_libfrrospfapiclient_la_SOURCES = \
	ospfclient/ospf_apiclient.c \
	# end

ospfapiheaderdir = $(pkgincludedir)/ospfapi
ospfapiheader_HEADERS = \
	ospfclient/ospf_apiclient.h \
	# end

ospfclient_ospfclient_LDADD = \
	ospfclient/libfrrospfapiclient.la \
	lib/libfrr.la \
	 \
	# end

ospfclient_ospfclient_SOURCES = \
	ospfclient/ospfclient.c \
	# end

isisd_libisis_a_SOURCES = \
	isisd/dict.c \
	isisd/isis_adjacency.c \
	isisd/isis_circuit.c \
	isisd/isis_csm.c \
	isisd/isis_dr.c \
	isisd/isis_dynhn.c \
	isisd/isis_events.c \
	isisd/isis_flags.c \
	isisd/isis_lsp.c \
	isisd/isis_lsp_hash.c \
	isisd/isis_memory.c \
	isisd/isis_misc.c \
	isisd/isis_mt.c \
	isisd/isis_pdu.c \
	isisd/isis_redist.c \
	isisd/isis_route.c \
	isisd/isis_routemap.c \
	isisd/isis_spf.c \
	isisd/isis_te.c \
	isisd/isis_tlvs.c \
	isisd/isis_vty.c \
	isisd/isis_zebra.c \
	isisd/isisd.c \
	isisd/iso_checksum.c \
	# end

isisd_isisd_LDADD = isisd/libisis.a lib/libfrr.la 
isisd_isisd_SOURCES = \
	isisd/isis_bpf.c \
	isisd/isis_dlpi.c \
	isisd/isis_main.c \
	isisd/isis_pfpacket.c \
	# end

nhrpd_nhrpd_LDADD = lib/libfrr.la  
nhrpd_nhrpd_CFLAGS = $(AM_CFLAGS) 
nhrpd_nhrpd_SOURCES = \
	nhrpd/linux.c \
	nhrpd/netlink_arp.c \
	nhrpd/netlink_gre.c \
	nhrpd/nhrp_cache.c \
	nhrpd/nhrp_event.c \
	nhrpd/nhrp_interface.c \
	nhrpd/nhrp_main.c \
	nhrpd/nhrp_nhs.c \
	nhrpd/nhrp_packet.c \
	nhrpd/nhrp_peer.c \
	nhrpd/nhrp_route.c \
	nhrpd/nhrp_shortcut.c \
	nhrpd/nhrp_vc.c \
	nhrpd/nhrp_vty.c \
	nhrpd/reqid.c \
	nhrpd/resolver.c \
	nhrpd/vici.c \
	nhrpd/zbuf.c \
	nhrpd/znl.c \
	# end

ldpd_libldp_a_SOURCES = \
	ldpd/accept.c \
	ldpd/address.c \
	ldpd/adjacency.c \
	ldpd/control.c \
	ldpd/hello.c \
	ldpd/init.c \
	ldpd/interface.c \
	ldpd/keepalive.c \
	ldpd/l2vpn.c \
	ldpd/labelmapping.c \
	ldpd/lde.c \
	ldpd/lde_lib.c \
	ldpd/ldp_debug.c \
	ldpd/ldp_vty_cmds.c \
	ldpd/ldp_vty_conf.c \
	ldpd/ldp_vty_exec.c \
	ldpd/ldp_zebra.c \
	ldpd/ldpd.c \
	ldpd/ldpe.c \
	ldpd/log.c \
	ldpd/logmsg.c \
	ldpd/neighbor.c \
	ldpd/notification.c \
	ldpd/packet.c \
	ldpd/pfkey.c \
	ldpd/socket.c \
	ldpd/util.c \
	# end

ldpd_ldpd_SOURCES = ldpd/ldpd.c
ldpd_ldpd_LDADD = ldpd/libldp.a lib/libfrr.la 
babeld_libbabel_a_SOURCES = \
	babeld/babel_filter.c \
	babeld/babel_interface.c \
	babeld/babel_memory.c \
	babeld/babel_zebra.c \
	babeld/babeld.c \
	babeld/kernel.c \
	babeld/message.c \
	babeld/neighbour.c \
	babeld/net.c \
	babeld/resend.c \
	babeld/route.c \
	babeld/source.c \
	babeld/util.c \
	babeld/xroute.c \
	# end

babeld_babeld_SOURCES = babeld/babel_main.c
babeld_babeld_LDADD = babeld/libbabel.a lib/libfrr.la 
eigrpd_libeigrp_a_SOURCES = \
	eigrpd/eigrp_dump.c \
	eigrpd/eigrp_filter.c \
	eigrpd/eigrp_fsm.c \
	eigrpd/eigrp_hello.c \
	eigrpd/eigrp_interface.c \
	eigrpd/eigrp_memory.c \
	eigrpd/eigrp_neighbor.c \
	eigrpd/eigrp_network.c \
	eigrpd/eigrp_packet.c \
	eigrpd/eigrp_query.c \
	eigrpd/eigrp_reply.c \
	eigrpd/eigrp_siaquery.c \
	eigrpd/eigrp_siareply.c \
	eigrpd/eigrp_snmp.c \
	eigrpd/eigrp_topology.c \
	eigrpd/eigrp_update.c \
	eigrpd/eigrp_vty.c \
	eigrpd/eigrp_zebra.c \
	eigrpd/eigrpd.c \
	# end

eigrpdheaderdir = $(pkgincludedir)/eigrpd
eigrpdheader_HEADERS = \
	eigrpd/eigrp_dump.h \
	eigrpd/eigrp_topology.h \
	eigrpd/eigrpd.h \
	# end

eigrpd_eigrpd_SOURCES = eigrpd/eigrp_main.c
eigrpd_eigrpd_LDADD = eigrpd/libeigrp.a lib/libfrr.la 
sharpd_libsharp_a_SOURCES = \
	sharpd/sharp_zebra.c \
	sharpd/sharp_vty.c \
	# end

sharpd_sharpd_SOURCES = sharpd/sharp_main.c
sharpd_sharpd_LDADD = sharpd/libsharp.a lib/libfrr.la 
pimd_libpim_a_SOURCES = \
	pimd/pim_assert.c \
	pimd/pim_bfd.c \
	pimd/pim_br.c \
	pimd/pim_cmd.c \
	pimd/pim_hello.c \
	pimd/pim_iface.c \
	pimd/pim_ifchannel.c \
	pimd/pim_igmp.c \
	pimd/pim_igmp_mtrace.c \
	pimd/pim_igmp_stats.c \
	pimd/pim_igmpv2.c \
	pimd/pim_igmpv3.c \
	pimd/pim_instance.c \
	pimd/pim_int.c \
	pimd/pim_join.c \
	pimd/pim_jp_agg.c \
	pimd/pim_macro.c \
	pimd/pim_memory.c \
	pimd/pim_mroute.c \
	pimd/pim_msdp.c \
	pimd/pim_msdp_packet.c \
	pimd/pim_msdp_socket.c \
	pimd/pim_msg.c \
	pimd/pim_neighbor.c \
	pimd/pim_nht.c \
	pimd/pim_oil.c \
	pimd/pim_pim.c \
	pimd/pim_register.c \
	pimd/pim_routemap.c \
	pimd/pim_rp.c \
	pimd/pim_rpf.c \
	pimd/pim_signals.c \
	pimd/pim_sock.c \
	pimd/pim_ssm.c \
	pimd/pim_ssmpingd.c \
	pimd/pim_static.c \
	pimd/pim_str.c \
	pimd/pim_time.c \
	pimd/pim_tlv.c \
	pimd/pim_upstream.c \
	pimd/pim_util.c \
	pimd/pim_version.c \
	pimd/pim_vty.c \
	pimd/pim_zebra.c \
	pimd/pim_zlookup.c \
	pimd/pimd.c \
	# end

pimd_pimd_LDADD = pimd/libpim.a lib/libfrr.la 
pimd_pimd_SOURCES = pimd/pim_main.c
pimd_test_igmpv3_join_LDADD = lib/libfrr.la
pimd_test_igmpv3_join_SOURCES = pimd/test_igmpv3_join.c
pimd_mtracebis_LDADD = lib/libfrr.la
pimd_mtracebis_SOURCES = pimd/mtracebis.c \
			 pimd/mtracebis_netlink.c \
			 pimd/mtracebis_routeget.c \
			 # end

pbrd_libpbr_a_SOURCES = \
	pbrd/pbr_zebra.c \
	pbrd/pbr_vty.c \
	pbrd/pbr_map.c \
	pbrd/pbr_memory.c \
	pbrd/pbr_nht.c \
	pbrd/pbr_debug.c \
	# end

pbrd_pbrd_SOURCES = pbrd/pbr_main.c
pbrd_pbrd_LDADD = pbrd/libpbr.a lib/libfrr.la 
SUBDIRS = . bgpd/rfp-example/librfp bgpd/rfp-example/rfptest \
	 bgpd \
	 vtysh doc \
          tests

DIST_SUBDIRS = . bgpd \
	  vtysh doc tests \
	  solaris bgpd/rfp-example/librfp \
	  bgpd/rfp-example/rfptest \
	  debianpkg \
	  # end

#rcdir = 
#rc_SCRIPTS = \
#	pkgsrc/bgpd.sh \
#	pkgsrc/ospf6d.sh \
#	pkgsrc/ospfd.sh \
#	pkgsrc/ripd.sh \
#	pkgsrc/ripngd.sh \
#	pkgsrc/zebra.sh \
#	# end

ACLOCAL_AMFLAGS = -I m4
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: _clippy.c .proto .pb-c.c .pb-c.h .pb.h .c .l .lo .o .obj .y
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/common.am $(srcdir)/include/subdir.am $(srcdir)/lib/subdir.am $(srcdir)/zebra/subdir.am $(srcdir)/watchfrr/subdir.am $(srcdir)/qpb/subdir.am $(srcdir)/fpm/subdir.am $(srcdir)/tools/subdir.am $(srcdir)/ripd/subdir.am $(srcdir)/ripngd/subdir.am $(srcdir)/ospfd/subdir.am $(srcdir)/ospf6d/subdir.am $(srcdir)/ospfclient/subdir.am $(srcdir)/isisd/subdir.am $(srcdir)/nhrpd/subdir.am $(srcdir)/ldpd/subdir.am $(srcdir)/babeld/subdir.am $(srcdir)/eigrpd/subdir.am $(srcdir)/sharpd/subdir.am $(srcdir)/pimd/subdir.am $(srcdir)/pbrd/subdir.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/common.am $(srcdir)/include/subdir.am $(srcdir)/lib/subdir.am $(srcdir)/zebra/subdir.am $(srcdir)/watchfrr/subdir.am $(srcdir)/qpb/subdir.am $(srcdir)/fpm/subdir.am $(srcdir)/tools/subdir.am $(srcdir)/ripd/subdir.am $(srcdir)/ripngd/subdir.am $(srcdir)/ospfd/subdir.am $(srcdir)/ospf6d/subdir.am $(srcdir)/ospfclient/subdir.am $(srcdir)/isisd/subdir.am $(srcdir)/nhrpd/subdir.am $(srcdir)/ldpd/subdir.am $(srcdir)/babeld/subdir.am $(srcdir)/eigrpd/subdir.am $(srcdir)/sharpd/subdir.am $(srcdir)/pimd/subdir.am $(srcdir)/pbrd/subdir.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
redhat/frr.spec: $(top_builddir)/config.status $(top_srcdir)/redhat/frr.spec.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
alpine/APKBUILD: $(top_builddir)/config.status $(top_srcdir)/alpine/APKBUILD.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
snapcraft/snapcraft.yaml: $(top_builddir)/config.status $(top_srcdir)/snapcraft/snapcraft.yaml.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
lib/version.h: $(top_builddir)/config.status $(top_srcdir)/lib/version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
tests/lib/cli/test_cli.refout: $(top_builddir)/config.status $(top_srcdir)/tests/lib/cli/test_cli.refout.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgsrc/bgpd.sh: $(top_builddir)/config.status $(top_srcdir)/pkgsrc/bgpd.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgsrc/ospf6d.sh: $(top_builddir)/config.status $(top_srcdir)/pkgsrc/ospf6d.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgsrc/ospfd.sh: $(top_builddir)/config.status $(top_srcdir)/pkgsrc/ospfd.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgsrc/ripd.sh: $(top_builddir)/config.status $(top_srcdir)/pkgsrc/ripd.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgsrc/ripngd.sh: $(top_builddir)/config.status $(top_srcdir)/pkgsrc/ripngd.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgsrc/zebra.sh: $(top_builddir)/config.status $(top_srcdir)/pkgsrc/zebra.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
pkgsrc/eigrpd.sh: $(top_builddir)/config.status $(top_srcdir)/pkgsrc/eigrpd.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
babeld/$(am__dirstamp):
	@$(MKDIR_P) babeld
	@: > babeld/$(am__dirstamp)
babeld/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) babeld/$(DEPDIR)
	@: > babeld/$(DEPDIR)/$(am__dirstamp)
babeld/babel_filter.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/babel_interface.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/babel_memory.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/babel_zebra.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/babeld.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/kernel.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/message.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/neighbour.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/net.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/resend.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/route.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/source.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/util.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)
babeld/xroute.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)

babeld/libbabel.a: $(babeld_libbabel_a_OBJECTS) $(babeld_libbabel_a_DEPENDENCIES) $(EXTRA_babeld_libbabel_a_DEPENDENCIES) babeld/$(am__dirstamp)
	$(AM_V_at)-rm -f babeld/libbabel.a
	$(AM_V_AR)$(babeld_libbabel_a_AR) babeld/libbabel.a $(babeld_libbabel_a_OBJECTS) $(babeld_libbabel_a_LIBADD)
	$(AM_V_at)$(RANLIB) babeld/libbabel.a
eigrpd/$(am__dirstamp):
	@$(MKDIR_P) eigrpd
	@: > eigrpd/$(am__dirstamp)
eigrpd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) eigrpd/$(DEPDIR)
	@: > eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_dump.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_filter.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_fsm.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_hello.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_interface.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_memory.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_neighbor.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_network.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_packet.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_query.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_reply.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_siaquery.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_siareply.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_snmp.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_topology.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_update.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_vty.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrp_zebra.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)
eigrpd/eigrpd.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)

eigrpd/libeigrp.a: $(eigrpd_libeigrp_a_OBJECTS) $(eigrpd_libeigrp_a_DEPENDENCIES) $(EXTRA_eigrpd_libeigrp_a_DEPENDENCIES) eigrpd/$(am__dirstamp)
	$(AM_V_at)-rm -f eigrpd/libeigrp.a
	$(AM_V_AR)$(eigrpd_libeigrp_a_AR) eigrpd/libeigrp.a $(eigrpd_libeigrp_a_OBJECTS) $(eigrpd_libeigrp_a_LIBADD)
	$(AM_V_at)$(RANLIB) eigrpd/libeigrp.a
isisd/$(am__dirstamp):
	@$(MKDIR_P) isisd
	@: > isisd/$(am__dirstamp)
isisd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) isisd/$(DEPDIR)
	@: > isisd/$(DEPDIR)/$(am__dirstamp)
isisd/dict.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_adjacency.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_circuit.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_csm.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_dr.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_dynhn.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_events.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_flags.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_lsp.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_lsp_hash.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_memory.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_misc.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_mt.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_pdu.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_redist.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_route.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_routemap.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_spf.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_te.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_tlvs.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_vty.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_zebra.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isisd.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/iso_checksum.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)

isisd/libisis.a: $(isisd_libisis_a_OBJECTS) $(isisd_libisis_a_DEPENDENCIES) $(EXTRA_isisd_libisis_a_DEPENDENCIES) isisd/$(am__dirstamp)
	$(AM_V_at)-rm -f isisd/libisis.a
	$(AM_V_AR)$(isisd_libisis_a_AR) isisd/libisis.a $(isisd_libisis_a_OBJECTS) $(isisd_libisis_a_LIBADD)
	$(AM_V_at)$(RANLIB) isisd/libisis.a
ldpd/$(am__dirstamp):
	@$(MKDIR_P) ldpd
	@: > ldpd/$(am__dirstamp)
ldpd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ldpd/$(DEPDIR)
	@: > ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/accept.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/address.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/adjacency.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/control.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/hello.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/init.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/interface.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/keepalive.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/l2vpn.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/labelmapping.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/lde.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/lde_lib.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/ldp_debug.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/ldp_vty_cmds.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/ldp_vty_conf.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/ldp_vty_exec.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/ldp_zebra.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/ldpd.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/ldpe.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/log.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/logmsg.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/neighbor.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/notification.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/packet.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/pfkey.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/socket.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)
ldpd/util.$(OBJEXT): ldpd/$(am__dirstamp) \
	ldpd/$(DEPDIR)/$(am__dirstamp)

ldpd/libldp.a: $(ldpd_libldp_a_OBJECTS) $(ldpd_libldp_a_DEPENDENCIES) $(EXTRA_ldpd_libldp_a_DEPENDENCIES) ldpd/$(am__dirstamp)
	$(AM_V_at)-rm -f ldpd/libldp.a
	$(AM_V_AR)$(ldpd_libldp_a_AR) ldpd/libldp.a $(ldpd_libldp_a_OBJECTS) $(ldpd_libldp_a_LIBADD)
	$(AM_V_at)$(RANLIB) ldpd/libldp.a
ospf6d/$(am__dirstamp):
	@$(MKDIR_P) ospf6d
	@: > ospf6d/$(am__dirstamp)
ospf6d/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ospf6d/$(DEPDIR)
	@: > ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_abr.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_area.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_asbr.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_bfd.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_flood.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_interface.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_intra.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_lsa.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_lsdb.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_memory.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_message.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_neighbor.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_network.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_proto.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_route.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_spf.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_top.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6_zebra.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)
ospf6d/ospf6d.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)

ospf6d/libospf6.a: $(ospf6d_libospf6_a_OBJECTS) $(ospf6d_libospf6_a_DEPENDENCIES) $(EXTRA_ospf6d_libospf6_a_DEPENDENCIES) ospf6d/$(am__dirstamp)
	$(AM_V_at)-rm -f ospf6d/libospf6.a
	$(AM_V_AR)$(ospf6d_libospf6_a_AR) ospf6d/libospf6.a $(ospf6d_libospf6_a_OBJECTS) $(ospf6d_libospf6_a_LIBADD)
	$(AM_V_at)$(RANLIB) ospf6d/libospf6.a
ospfd/$(am__dirstamp):
	@$(MKDIR_P) ospfd
	@: > ospfd/$(am__dirstamp)
ospfd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ospfd/$(DEPDIR)
	@: > ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_abr.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_api.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_apiserver.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_asbr.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_ase.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_bfd.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_dump.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_dump_api.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_ext.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_flood.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_ia.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_interface.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_ism.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_lsa.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_lsdb.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_memory.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_neighbor.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_network.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_nsm.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_opaque.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_packet.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_ri.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_route.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_routemap.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_spf.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_sr.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_te.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_vty.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospf_zebra.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)
ospfd/ospfd.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)

ospfd/libfrrospf.a: $(ospfd_libfrrospf_a_OBJECTS) $(ospfd_libfrrospf_a_DEPENDENCIES) $(EXTRA_ospfd_libfrrospf_a_DEPENDENCIES) ospfd/$(am__dirstamp)
	$(AM_V_at)-rm -f ospfd/libfrrospf.a
	$(AM_V_AR)$(ospfd_libfrrospf_a_AR) ospfd/libfrrospf.a $(ospfd_libfrrospf_a_OBJECTS) $(ospfd_libfrrospf_a_LIBADD)
	$(AM_V_at)$(RANLIB) ospfd/libfrrospf.a
pbrd/$(am__dirstamp):
	@$(MKDIR_P) pbrd
	@: > pbrd/$(am__dirstamp)
pbrd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) pbrd/$(DEPDIR)
	@: > pbrd/$(DEPDIR)/$(am__dirstamp)
pbrd/pbr_zebra.$(OBJEXT): pbrd/$(am__dirstamp) \
	pbrd/$(DEPDIR)/$(am__dirstamp)
pbrd/pbr_vty.$(OBJEXT): pbrd/$(am__dirstamp) \
	pbrd/$(DEPDIR)/$(am__dirstamp)
pbrd/pbr_map.$(OBJEXT): pbrd/$(am__dirstamp) \
	pbrd/$(DEPDIR)/$(am__dirstamp)
pbrd/pbr_memory.$(OBJEXT): pbrd/$(am__dirstamp) \
	pbrd/$(DEPDIR)/$(am__dirstamp)
pbrd/pbr_nht.$(OBJEXT): pbrd/$(am__dirstamp) \
	pbrd/$(DEPDIR)/$(am__dirstamp)
pbrd/pbr_debug.$(OBJEXT): pbrd/$(am__dirstamp) \
	pbrd/$(DEPDIR)/$(am__dirstamp)

pbrd/libpbr.a: $(pbrd_libpbr_a_OBJECTS) $(pbrd_libpbr_a_DEPENDENCIES) $(EXTRA_pbrd_libpbr_a_DEPENDENCIES) pbrd/$(am__dirstamp)
	$(AM_V_at)-rm -f pbrd/libpbr.a
	$(AM_V_AR)$(pbrd_libpbr_a_AR) pbrd/libpbr.a $(pbrd_libpbr_a_OBJECTS) $(pbrd_libpbr_a_LIBADD)
	$(AM_V_at)$(RANLIB) pbrd/libpbr.a
pimd/$(am__dirstamp):
	@$(MKDIR_P) pimd
	@: > pimd/$(am__dirstamp)
pimd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) pimd/$(DEPDIR)
	@: > pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_assert.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_bfd.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_br.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_cmd.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_hello.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_iface.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_ifchannel.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_igmp.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_igmp_mtrace.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_igmp_stats.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_igmpv2.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_igmpv3.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_instance.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_int.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_join.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_jp_agg.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_macro.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_memory.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_mroute.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_msdp.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_msdp_packet.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_msdp_socket.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_msg.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_neighbor.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_nht.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_oil.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_pim.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_register.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_routemap.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_rp.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_rpf.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_signals.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_sock.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_ssm.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_ssmpingd.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_static.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_str.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_time.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_tlv.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_upstream.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_util.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_version.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_vty.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_zebra.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pim_zlookup.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/pimd.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)

pimd/libpim.a: $(pimd_libpim_a_OBJECTS) $(pimd_libpim_a_DEPENDENCIES) $(EXTRA_pimd_libpim_a_DEPENDENCIES) pimd/$(am__dirstamp)
	$(AM_V_at)-rm -f pimd/libpim.a
	$(AM_V_AR)$(pimd_libpim_a_AR) pimd/libpim.a $(pimd_libpim_a_OBJECTS) $(pimd_libpim_a_LIBADD)
	$(AM_V_at)$(RANLIB) pimd/libpim.a
ripd/$(am__dirstamp):
	@$(MKDIR_P) ripd
	@: > ripd/$(am__dirstamp)
ripd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ripd/$(DEPDIR)
	@: > ripd/$(DEPDIR)/$(am__dirstamp)
ripd/rip_debug.$(OBJEXT): ripd/$(am__dirstamp) \
	ripd/$(DEPDIR)/$(am__dirstamp)
ripd/rip_interface.$(OBJEXT): ripd/$(am__dirstamp) \
	ripd/$(DEPDIR)/$(am__dirstamp)
ripd/rip_memory.$(OBJEXT): ripd/$(am__dirstamp) \
	ripd/$(DEPDIR)/$(am__dirstamp)
ripd/rip_offset.$(OBJEXT): ripd/$(am__dirstamp) \
	ripd/$(DEPDIR)/$(am__dirstamp)
ripd/rip_peer.$(OBJEXT): ripd/$(am__dirstamp) \
	ripd/$(DEPDIR)/$(am__dirstamp)
ripd/rip_routemap.$(OBJEXT): ripd/$(am__dirstamp) \
	ripd/$(DEPDIR)/$(am__dirstamp)
ripd/rip_zebra.$(OBJEXT): ripd/$(am__dirstamp) \
	ripd/$(DEPDIR)/$(am__dirstamp)
ripd/ripd.$(OBJEXT): ripd/$(am__dirstamp) \
	ripd/$(DEPDIR)/$(am__dirstamp)

ripd/librip.a: $(ripd_librip_a_OBJECTS) $(ripd_librip_a_DEPENDENCIES) $(EXTRA_ripd_librip_a_DEPENDENCIES) ripd/$(am__dirstamp)
	$(AM_V_at)-rm -f ripd/librip.a
	$(AM_V_AR)$(ripd_librip_a_AR) ripd/librip.a $(ripd_librip_a_OBJECTS) $(ripd_librip_a_LIBADD)
	$(AM_V_at)$(RANLIB) ripd/librip.a
ripngd/$(am__dirstamp):
	@$(MKDIR_P) ripngd
	@: > ripngd/$(am__dirstamp)
ripngd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ripngd/$(DEPDIR)
	@: > ripngd/$(DEPDIR)/$(am__dirstamp)
ripngd/ripng_debug.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)
ripngd/ripng_interface.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)
ripngd/ripng_memory.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)
ripngd/ripng_nexthop.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)
ripngd/ripng_offset.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)
ripngd/ripng_peer.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)
ripngd/ripng_route.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)
ripngd/ripng_routemap.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)
ripngd/ripng_zebra.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)
ripngd/ripngd.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)

ripngd/libripng.a: $(ripngd_libripng_a_OBJECTS) $(ripngd_libripng_a_DEPENDENCIES) $(EXTRA_ripngd_libripng_a_DEPENDENCIES) ripngd/$(am__dirstamp)
	$(AM_V_at)-rm -f ripngd/libripng.a
	$(AM_V_AR)$(ripngd_libripng_a_AR) ripngd/libripng.a $(ripngd_libripng_a_OBJECTS) $(ripngd_libripng_a_LIBADD)
	$(AM_V_at)$(RANLIB) ripngd/libripng.a
sharpd/$(am__dirstamp):
	@$(MKDIR_P) sharpd
	@: > sharpd/$(am__dirstamp)
sharpd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sharpd/$(DEPDIR)
	@: > sharpd/$(DEPDIR)/$(am__dirstamp)
sharpd/sharp_zebra.$(OBJEXT): sharpd/$(am__dirstamp) \
	sharpd/$(DEPDIR)/$(am__dirstamp)
sharpd/sharp_vty.$(OBJEXT): sharpd/$(am__dirstamp) \
	sharpd/$(DEPDIR)/$(am__dirstamp)

sharpd/libsharp.a: $(sharpd_libsharp_a_OBJECTS) $(sharpd_libsharp_a_DEPENDENCIES) $(EXTRA_sharpd_libsharp_a_DEPENDENCIES) sharpd/$(am__dirstamp)
	$(AM_V_at)-rm -f sharpd/libsharp.a
	$(AM_V_AR)$(sharpd_libsharp_a_AR) sharpd/libsharp.a $(sharpd_libsharp_a_OBJECTS) $(sharpd_libsharp_a_LIBADD)
	$(AM_V_at)$(RANLIB) sharpd/libsharp.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-moduleLTLIBRARIES: $(module_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(module_LTLIBRARIES)'; test -n "$(moduledir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(moduledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(moduledir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(moduledir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(moduledir)"; \
	}

uninstall-moduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(module_LTLIBRARIES)'; test -n "$(moduledir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(moduledir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(moduledir)/$$f"; \
	done

clean-moduleLTLIBRARIES:
	-test -z "$(module_LTLIBRARIES)" || rm -f $(module_LTLIBRARIES)
	@list='$(module_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
fpm/$(am__dirstamp):
	@$(MKDIR_P) fpm
	@: > fpm/$(am__dirstamp)
fpm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) fpm/$(DEPDIR)
	@: > fpm/$(DEPDIR)/$(am__dirstamp)
fpm/fpm_libfrrfpm_pb_la-fpm_pb.lo: fpm/$(am__dirstamp) \
	fpm/$(DEPDIR)/$(am__dirstamp)
fpm/fpm_libfrrfpm_pb_la-fpm.pb-c.lo: fpm/$(am__dirstamp) \
	fpm/$(DEPDIR)/$(am__dirstamp)

fpm/libfrrfpm_pb.la: $(fpm_libfrrfpm_pb_la_OBJECTS) $(fpm_libfrrfpm_pb_la_DEPENDENCIES) $(EXTRA_fpm_libfrrfpm_pb_la_DEPENDENCIES) fpm/$(am__dirstamp)
	$(AM_V_CCLD)$(fpm_libfrrfpm_pb_la_LINK) $(am_fpm_libfrrfpm_pb_la_rpath) $(fpm_libfrrfpm_pb_la_OBJECTS) $(fpm_libfrrfpm_pb_la_LIBADD) $(LIBS)
lib/$(am__dirstamp):
	@$(MKDIR_P) lib
	@: > lib/$(am__dirstamp)
lib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) lib/$(DEPDIR)
	@: > lib/$(DEPDIR)/$(am__dirstamp)
lib/bfd.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/buffer.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/checksum.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/command.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/command_graph.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/command_lex.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/command_match.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/command_parse.h: lib/command_parse.c
	@if test ! -f $@; then rm -f lib/command_parse.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) lib/command_parse.c; else :; fi
lib/command_parse.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/csv.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/debug.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/distribute.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/event_counter.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/ferr.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/filter.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/frr_pthread.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/frrstr.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/getopt.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/getopt1.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/grammar_sandbox.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/graph.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/hash.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/hook.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/if.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/if_rmap.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/imsg-buffer.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/imsg.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/jhash.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/json.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/keychain.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/libfrr.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/linklist.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/log.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/md5.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/memory.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/memory_vty.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/module.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/mpls.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/network.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/nexthop.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/netns_linux.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/netns_other.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/nexthop_group.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/openbsd-tree.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/pid_output.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/plist.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/pqueue.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/prefix.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/privs.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/ptm_lib.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/qobj.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/ringbuf.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/routemap.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/sbuf.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/sha256.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/sigevent.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/skiplist.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/sockopt.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/sockunion.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/spf_backoff.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/srcdest_table.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/stream.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/strlcat.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/strlcpy.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/systemd.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/table.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/termtable.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/thread.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/vector.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/vrf.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/vty.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/wheel.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/workqueue.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/zclient.lo: lib/$(am__dirstamp) lib/$(DEPDIR)/$(am__dirstamp)
lib/logicalrouter.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)

lib/libfrr.la: $(lib_libfrr_la_OBJECTS) $(lib_libfrr_la_DEPENDENCIES) $(EXTRA_lib_libfrr_la_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_CCLD)$(lib_libfrr_la_LINK) -rpath $(libdir) $(lib_libfrr_la_OBJECTS) $(lib_libfrr_la_LIBADD) $(LIBS)
lib/lib_libfrrsnmp_la-agentx.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/lib_libfrrsnmp_la-smux.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/lib_libfrrsnmp_la-snmp.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)

lib/libfrrsnmp.la: $(lib_libfrrsnmp_la_OBJECTS) $(lib_libfrrsnmp_la_DEPENDENCIES) $(EXTRA_lib_libfrrsnmp_la_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_CCLD)$(lib_libfrrsnmp_la_LINK) $(am_lib_libfrrsnmp_la_rpath) $(lib_libfrrsnmp_la_OBJECTS) $(lib_libfrrsnmp_la_LIBADD) $(LIBS)
lib/lib_libfrrzmq_la-frr_zmq.lo: lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)

lib/libfrrzmq.la: $(lib_libfrrzmq_la_OBJECTS) $(lib_libfrrzmq_la_DEPENDENCIES) $(EXTRA_lib_libfrrzmq_la_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_CCLD)$(lib_libfrrzmq_la_LINK) $(am_lib_libfrrzmq_la_rpath) $(lib_libfrrzmq_la_OBJECTS) $(lib_libfrrzmq_la_LIBADD) $(LIBS)
ospf6d/ospf6d_ospf6d_snmp_la-ospf6_snmp.lo: ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)

ospf6d/ospf6d_snmp.la: $(ospf6d_ospf6d_snmp_la_OBJECTS) $(ospf6d_ospf6d_snmp_la_DEPENDENCIES) $(EXTRA_ospf6d_ospf6d_snmp_la_DEPENDENCIES) ospf6d/$(am__dirstamp)
	$(AM_V_CCLD)$(ospf6d_ospf6d_snmp_la_LINK) $(am_ospf6d_ospf6d_snmp_la_rpath) $(ospf6d_ospf6d_snmp_la_OBJECTS) $(ospf6d_ospf6d_snmp_la_LIBADD) $(LIBS)
ospfclient/$(am__dirstamp):
	@$(MKDIR_P) ospfclient
	@: > ospfclient/$(am__dirstamp)
ospfclient/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ospfclient/$(DEPDIR)
	@: > ospfclient/$(DEPDIR)/$(am__dirstamp)
ospfclient/ospf_apiclient.lo: ospfclient/$(am__dirstamp) \
	ospfclient/$(DEPDIR)/$(am__dirstamp)

ospfclient/libfrrospfapiclient.la: $(ospfclient_libfrrospfapiclient_la_OBJECTS) $(ospfclient_libfrrospfapiclient_la_DEPENDENCIES) $(EXTRA_ospfclient_libfrrospfapiclient_la_DEPENDENCIES) ospfclient/$(am__dirstamp)
	$(AM_V_CCLD)$(ospfclient_libfrrospfapiclient_la_LINK) $(am_ospfclient_libfrrospfapiclient_la_rpath) $(ospfclient_libfrrospfapiclient_la_OBJECTS) $(ospfclient_libfrrospfapiclient_la_LIBADD) $(LIBS)
ospfd/ospfd_ospfd_snmp_la-ospf_snmp.lo: ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)

ospfd/ospfd_snmp.la: $(ospfd_ospfd_snmp_la_OBJECTS) $(ospfd_ospfd_snmp_la_DEPENDENCIES) $(EXTRA_ospfd_ospfd_snmp_la_DEPENDENCIES) ospfd/$(am__dirstamp)
	$(AM_V_CCLD)$(ospfd_ospfd_snmp_la_LINK) $(am_ospfd_ospfd_snmp_la_rpath) $(ospfd_ospfd_snmp_la_OBJECTS) $(ospfd_ospfd_snmp_la_LIBADD) $(LIBS)
qpb/$(am__dirstamp):
	@$(MKDIR_P) qpb
	@: > qpb/$(am__dirstamp)
qpb/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qpb/$(DEPDIR)
	@: > qpb/$(DEPDIR)/$(am__dirstamp)
qpb/qpb_libfrr_pb_la-qpb.lo: qpb/$(am__dirstamp) \
	qpb/$(DEPDIR)/$(am__dirstamp)
qpb/qpb_libfrr_pb_la-qpb_allocator.lo: qpb/$(am__dirstamp) \
	qpb/$(DEPDIR)/$(am__dirstamp)
qpb/qpb_libfrr_pb_la-qpb.pb-c.lo: qpb/$(am__dirstamp) \
	qpb/$(DEPDIR)/$(am__dirstamp)

qpb/libfrr_pb.la: $(qpb_libfrr_pb_la_OBJECTS) $(qpb_libfrr_pb_la_DEPENDENCIES) $(EXTRA_qpb_libfrr_pb_la_DEPENDENCIES) qpb/$(am__dirstamp)
	$(AM_V_CCLD)$(qpb_libfrr_pb_la_LINK) $(am_qpb_libfrr_pb_la_rpath) $(qpb_libfrr_pb_la_OBJECTS) $(qpb_libfrr_pb_la_LIBADD) $(LIBS)
ripd/ripd_ripd_snmp_la-rip_snmp.lo: ripd/$(am__dirstamp) \
	ripd/$(DEPDIR)/$(am__dirstamp)

ripd/ripd_snmp.la: $(ripd_ripd_snmp_la_OBJECTS) $(ripd_ripd_snmp_la_DEPENDENCIES) $(EXTRA_ripd_ripd_snmp_la_DEPENDENCIES) ripd/$(am__dirstamp)
	$(AM_V_CCLD)$(ripd_ripd_snmp_la_LINK) $(am_ripd_ripd_snmp_la_rpath) $(ripd_ripd_snmp_la_OBJECTS) $(ripd_ripd_snmp_la_LIBADD) $(LIBS)
zebra/$(am__dirstamp):
	@$(MKDIR_P) zebra
	@: > zebra/$(am__dirstamp)
zebra/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) zebra/$(DEPDIR)
	@: > zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_fpm.lo: zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_fpm_netlink.lo: zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_fpm_protobuf.lo: zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_fpm_dt.lo: zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)

zebra/zebra_fpm.la: $(zebra_zebra_fpm_la_OBJECTS) $(zebra_zebra_fpm_la_DEPENDENCIES) $(EXTRA_zebra_zebra_fpm_la_DEPENDENCIES) zebra/$(am__dirstamp)
	$(AM_V_CCLD)$(zebra_zebra_fpm_la_LINK) $(am_zebra_zebra_fpm_la_rpath) $(zebra_zebra_fpm_la_OBJECTS) $(zebra_zebra_fpm_la_LIBADD) $(LIBS)
zebra/irdp_interface.lo: zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/irdp_main.lo: zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/irdp_packet.lo: zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)

zebra/zebra_irdp.la: $(zebra_zebra_irdp_la_OBJECTS) $(zebra_zebra_irdp_la_DEPENDENCIES) $(EXTRA_zebra_zebra_irdp_la_DEPENDENCIES) zebra/$(am__dirstamp)
	$(AM_V_CCLD)$(zebra_zebra_irdp_la_LINK) $(am_zebra_zebra_irdp_la_rpath) $(zebra_zebra_irdp_la_OBJECTS) $(zebra_zebra_irdp_la_LIBADD) $(LIBS)
zebra/zebra_zebra_snmp_la-zebra_snmp.lo: zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)

zebra/zebra_snmp.la: $(zebra_zebra_snmp_la_OBJECTS) $(zebra_zebra_snmp_la_DEPENDENCIES) $(EXTRA_zebra_zebra_snmp_la_DEPENDENCIES) zebra/$(am__dirstamp)
	$(AM_V_CCLD)$(zebra_zebra_snmp_la_LINK) $(am_zebra_zebra_snmp_la_rpath) $(zebra_zebra_snmp_la_OBJECTS) $(zebra_zebra_snmp_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
babeld/babel_main.$(OBJEXT): babeld/$(am__dirstamp) \
	babeld/$(DEPDIR)/$(am__dirstamp)

babeld/babeld$(EXEEXT): $(babeld_babeld_OBJECTS) $(babeld_babeld_DEPENDENCIES) $(EXTRA_babeld_babeld_DEPENDENCIES) babeld/$(am__dirstamp)
	@rm -f babeld/babeld$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(babeld_babeld_OBJECTS) $(babeld_babeld_LDADD) $(LIBS)
eigrpd/eigrp_main.$(OBJEXT): eigrpd/$(am__dirstamp) \
	eigrpd/$(DEPDIR)/$(am__dirstamp)

eigrpd/eigrpd$(EXEEXT): $(eigrpd_eigrpd_OBJECTS) $(eigrpd_eigrpd_DEPENDENCIES) $(EXTRA_eigrpd_eigrpd_DEPENDENCIES) eigrpd/$(am__dirstamp)
	@rm -f eigrpd/eigrpd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(eigrpd_eigrpd_OBJECTS) $(eigrpd_eigrpd_LDADD) $(LIBS)
isisd/isis_bpf.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_dlpi.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_main.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)
isisd/isis_pfpacket.$(OBJEXT): isisd/$(am__dirstamp) \
	isisd/$(DEPDIR)/$(am__dirstamp)

isisd/isisd$(EXEEXT): $(isisd_isisd_OBJECTS) $(isisd_isisd_DEPENDENCIES) $(EXTRA_isisd_isisd_DEPENDENCIES) isisd/$(am__dirstamp)
	@rm -f isisd/isisd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(isisd_isisd_OBJECTS) $(isisd_isisd_LDADD) $(LIBS)

ldpd/ldpd$(EXEEXT): $(ldpd_ldpd_OBJECTS) $(ldpd_ldpd_DEPENDENCIES) $(EXTRA_ldpd_ldpd_DEPENDENCIES) ldpd/$(am__dirstamp)
	@rm -f ldpd/ldpd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ldpd_ldpd_OBJECTS) $(ldpd_ldpd_LDADD) $(LIBS)
lib/lib_clippy-clippy.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/lib_clippy-command_graph.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/lib_clippy-command_lex.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/lib_clippy-command_parse.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/lib_clippy-command_py.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/lib_clippy-defun_lex.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/lib_clippy-graph.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/lib_clippy-memory.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)
lib/lib_clippy-vector.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)

lib/clippy$(EXEEXT): $(lib_clippy_OBJECTS) $(lib_clippy_DEPENDENCIES) $(EXTRA_lib_clippy_DEPENDENCIES) lib/$(am__dirstamp)
	@rm -f lib/clippy$(EXEEXT)
	$(AM_V_CCLD)$(lib_clippy_LINK) $(lib_clippy_OBJECTS) $(lib_clippy_LDADD) $(LIBS)
lib/grammar_sandbox_main.$(OBJEXT): lib/$(am__dirstamp) \
	lib/$(DEPDIR)/$(am__dirstamp)

lib/grammar_sandbox$(EXEEXT): $(lib_grammar_sandbox_OBJECTS) $(lib_grammar_sandbox_DEPENDENCIES) $(EXTRA_lib_grammar_sandbox_DEPENDENCIES) lib/$(am__dirstamp)
	@rm -f lib/grammar_sandbox$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lib_grammar_sandbox_OBJECTS) $(lib_grammar_sandbox_LDADD) $(LIBS)
nhrpd/$(am__dirstamp):
	@$(MKDIR_P) nhrpd
	@: > nhrpd/$(am__dirstamp)
nhrpd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) nhrpd/$(DEPDIR)
	@: > nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-linux.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-netlink_arp.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-netlink_gre.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_cache.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_event.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_interface.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_main.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_nhs.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_packet.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_peer.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_route.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_shortcut.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_vc.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-nhrp_vty.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-reqid.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-resolver.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-vici.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-zbuf.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)
nhrpd/nhrpd_nhrpd-znl.$(OBJEXT): nhrpd/$(am__dirstamp) \
	nhrpd/$(DEPDIR)/$(am__dirstamp)

nhrpd/nhrpd$(EXEEXT): $(nhrpd_nhrpd_OBJECTS) $(nhrpd_nhrpd_DEPENDENCIES) $(EXTRA_nhrpd_nhrpd_DEPENDENCIES) nhrpd/$(am__dirstamp)
	@rm -f nhrpd/nhrpd$(EXEEXT)
	$(AM_V_CCLD)$(nhrpd_nhrpd_LINK) $(nhrpd_nhrpd_OBJECTS) $(nhrpd_nhrpd_LDADD) $(LIBS)
ospf6d/ospf6_main.$(OBJEXT): ospf6d/$(am__dirstamp) \
	ospf6d/$(DEPDIR)/$(am__dirstamp)

ospf6d/ospf6d$(EXEEXT): $(ospf6d_ospf6d_OBJECTS) $(ospf6d_ospf6d_DEPENDENCIES) $(EXTRA_ospf6d_ospf6d_DEPENDENCIES) ospf6d/$(am__dirstamp)
	@rm -f ospf6d/ospf6d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ospf6d_ospf6d_OBJECTS) $(ospf6d_ospf6d_LDADD) $(LIBS)
ospfclient/ospfclient.$(OBJEXT): ospfclient/$(am__dirstamp) \
	ospfclient/$(DEPDIR)/$(am__dirstamp)

ospfclient/ospfclient$(EXEEXT): $(ospfclient_ospfclient_OBJECTS) $(ospfclient_ospfclient_DEPENDENCIES) $(EXTRA_ospfclient_ospfclient_DEPENDENCIES) ospfclient/$(am__dirstamp)
	@rm -f ospfclient/ospfclient$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ospfclient_ospfclient_OBJECTS) $(ospfclient_ospfclient_LDADD) $(LIBS)
ospfd/ospf_main.$(OBJEXT): ospfd/$(am__dirstamp) \
	ospfd/$(DEPDIR)/$(am__dirstamp)

ospfd/ospfd$(EXEEXT): $(ospfd_ospfd_OBJECTS) $(ospfd_ospfd_DEPENDENCIES) $(EXTRA_ospfd_ospfd_DEPENDENCIES) ospfd/$(am__dirstamp)
	@rm -f ospfd/ospfd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ospfd_ospfd_OBJECTS) $(ospfd_ospfd_LDADD) $(LIBS)
pbrd/pbr_main.$(OBJEXT): pbrd/$(am__dirstamp) \
	pbrd/$(DEPDIR)/$(am__dirstamp)

pbrd/pbrd$(EXEEXT): $(pbrd_pbrd_OBJECTS) $(pbrd_pbrd_DEPENDENCIES) $(EXTRA_pbrd_pbrd_DEPENDENCIES) pbrd/$(am__dirstamp)
	@rm -f pbrd/pbrd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pbrd_pbrd_OBJECTS) $(pbrd_pbrd_LDADD) $(LIBS)
pimd/mtracebis.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/mtracebis_netlink.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)
pimd/mtracebis_routeget.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)

pimd/mtracebis$(EXEEXT): $(pimd_mtracebis_OBJECTS) $(pimd_mtracebis_DEPENDENCIES) $(EXTRA_pimd_mtracebis_DEPENDENCIES) pimd/$(am__dirstamp)
	@rm -f pimd/mtracebis$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pimd_mtracebis_OBJECTS) $(pimd_mtracebis_LDADD) $(LIBS)
pimd/pim_main.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)

pimd/pimd$(EXEEXT): $(pimd_pimd_OBJECTS) $(pimd_pimd_DEPENDENCIES) $(EXTRA_pimd_pimd_DEPENDENCIES) pimd/$(am__dirstamp)
	@rm -f pimd/pimd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pimd_pimd_OBJECTS) $(pimd_pimd_LDADD) $(LIBS)
pimd/test_igmpv3_join.$(OBJEXT): pimd/$(am__dirstamp) \
	pimd/$(DEPDIR)/$(am__dirstamp)

pimd/test_igmpv3_join$(EXEEXT): $(pimd_test_igmpv3_join_OBJECTS) $(pimd_test_igmpv3_join_DEPENDENCIES) $(EXTRA_pimd_test_igmpv3_join_DEPENDENCIES) pimd/$(am__dirstamp)
	@rm -f pimd/test_igmpv3_join$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pimd_test_igmpv3_join_OBJECTS) $(pimd_test_igmpv3_join_LDADD) $(LIBS)
ripd/rip_main.$(OBJEXT): ripd/$(am__dirstamp) \
	ripd/$(DEPDIR)/$(am__dirstamp)

ripd/ripd$(EXEEXT): $(ripd_ripd_OBJECTS) $(ripd_ripd_DEPENDENCIES) $(EXTRA_ripd_ripd_DEPENDENCIES) ripd/$(am__dirstamp)
	@rm -f ripd/ripd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ripd_ripd_OBJECTS) $(ripd_ripd_LDADD) $(LIBS)
ripngd/ripng_main.$(OBJEXT): ripngd/$(am__dirstamp) \
	ripngd/$(DEPDIR)/$(am__dirstamp)

ripngd/ripngd$(EXEEXT): $(ripngd_ripngd_OBJECTS) $(ripngd_ripngd_DEPENDENCIES) $(EXTRA_ripngd_ripngd_DEPENDENCIES) ripngd/$(am__dirstamp)
	@rm -f ripngd/ripngd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ripngd_ripngd_OBJECTS) $(ripngd_ripngd_LDADD) $(LIBS)
sharpd/sharp_main.$(OBJEXT): sharpd/$(am__dirstamp) \
	sharpd/$(DEPDIR)/$(am__dirstamp)

sharpd/sharpd$(EXEEXT): $(sharpd_sharpd_OBJECTS) $(sharpd_sharpd_DEPENDENCIES) $(EXTRA_sharpd_sharpd_DEPENDENCIES) sharpd/$(am__dirstamp)
	@rm -f sharpd/sharpd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sharpd_sharpd_OBJECTS) $(sharpd_sharpd_LDADD) $(LIBS)
tools/$(am__dirstamp):
	@$(MKDIR_P) tools
	@: > tools/$(am__dirstamp)
tools/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tools/$(DEPDIR)
	@: > tools/$(DEPDIR)/$(am__dirstamp)
tools/permutations.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)

tools/permutations$(EXEEXT): $(tools_permutations_OBJECTS) $(tools_permutations_DEPENDENCIES) $(EXTRA_tools_permutations_DEPENDENCIES) tools/$(am__dirstamp)
	@rm -f tools/permutations$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tools_permutations_OBJECTS) $(tools_permutations_LDADD) $(LIBS)
tools/start-stop-daemon.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)

tools/ssd$(EXEEXT): $(tools_ssd_OBJECTS) $(tools_ssd_DEPENDENCIES) $(EXTRA_tools_ssd_DEPENDENCIES) tools/$(am__dirstamp)
	@rm -f tools/ssd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tools_ssd_OBJECTS) $(tools_ssd_LDADD) $(LIBS)
watchfrr/$(am__dirstamp):
	@$(MKDIR_P) watchfrr
	@: > watchfrr/$(am__dirstamp)
watchfrr/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) watchfrr/$(DEPDIR)
	@: > watchfrr/$(DEPDIR)/$(am__dirstamp)
watchfrr/watchfrr.$(OBJEXT): watchfrr/$(am__dirstamp) \
	watchfrr/$(DEPDIR)/$(am__dirstamp)
watchfrr/watchfrr_vty.$(OBJEXT): watchfrr/$(am__dirstamp) \
	watchfrr/$(DEPDIR)/$(am__dirstamp)

watchfrr/watchfrr$(EXEEXT): $(watchfrr_watchfrr_OBJECTS) $(watchfrr_watchfrr_DEPENDENCIES) $(EXTRA_watchfrr_watchfrr_DEPENDENCIES) watchfrr/$(am__dirstamp)
	@rm -f watchfrr/watchfrr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(watchfrr_watchfrr_OBJECTS) $(watchfrr_watchfrr_LDADD) $(LIBS)
zebra/connected.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/debug.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/if_ioctl.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/if_ioctl_solaris.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/if_netlink.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/if_sysctl.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/interface.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/ioctl.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/ioctl_solaris.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/ipforward_proc.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/ipforward_solaris.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/ipforward_sysctl.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/kernel_netlink.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/kernel_socket.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/label_manager.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/main.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/redistribute.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/router-id.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/rt_netlink.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/rt_socket.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/rtadv.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/rtread_getmsg.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/rtread_netlink.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/rtread_sysctl.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/rule_netlink.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/rule_socket.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_l2.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_memory.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_mpls.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_mpls_netlink.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_mpls_openbsd.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_mpls_null.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_mpls_vty.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_mroute.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_ns.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_pbr.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_ptm.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_ptm_redistribute.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_pw.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_rib.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_rnh.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_routemap.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_static.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_vrf.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_vty.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_vxlan.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zserv.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_netns_id.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zebra_netns_notify.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/table_manager.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)
zebra/zapi_msg.$(OBJEXT): zebra/$(am__dirstamp) \
	zebra/$(DEPDIR)/$(am__dirstamp)

zebra/zebra$(EXEEXT): $(zebra_zebra_OBJECTS) $(zebra_zebra_DEPENDENCIES) $(EXTRA_zebra_zebra_DEPENDENCIES) zebra/$(am__dirstamp)
	@rm -f zebra/zebra$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(zebra_zebra_OBJECTS) $(zebra_zebra_LDADD) $(LIBS)
install-rcSCRIPTS: $(rc_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(rc_SCRIPTS)'; test -n "$(rcdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(rcdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(rcdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(rcdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(rcdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-rcSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_SCRIPTS)'; test -n "$(rcdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(rcdir)'; $(am__uninstall_files_from_dir)
install-sbinSCRIPTS: $(sbin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_SCRIPTS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-sbinSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_SCRIPTS)'; test -n "$(sbindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(sbindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f babeld/*.$(OBJEXT)
	-rm -f eigrpd/*.$(OBJEXT)
	-rm -f fpm/*.$(OBJEXT)
	-rm -f fpm/*.lo
	-rm -f isisd/*.$(OBJEXT)
	-rm -f ldpd/*.$(OBJEXT)
	-rm -f lib/*.$(OBJEXT)
	-rm -f lib/*.lo
	-rm -f nhrpd/*.$(OBJEXT)
	-rm -f ospf6d/*.$(OBJEXT)
	-rm -f ospf6d/*.lo
	-rm -f ospfclient/*.$(OBJEXT)
	-rm -f ospfclient/*.lo
	-rm -f ospfd/*.$(OBJEXT)
	-rm -f ospfd/*.lo
	-rm -f pbrd/*.$(OBJEXT)
	-rm -f pimd/*.$(OBJEXT)
	-rm -f qpb/*.$(OBJEXT)
	-rm -f qpb/*.lo
	-rm -f ripd/*.$(OBJEXT)
	-rm -f ripd/*.lo
	-rm -f ripngd/*.$(OBJEXT)
	-rm -f sharpd/*.$(OBJEXT)
	-rm -f tools/*.$(OBJEXT)
	-rm -f watchfrr/*.$(OBJEXT)
	-rm -f zebra/*.$(OBJEXT)
	-rm -f zebra/*.lo

distclean-compile:
	-rm -f *.tab.c

include babeld/$(DEPDIR)/babel_filter.Po
include babeld/$(DEPDIR)/babel_interface.Po
include babeld/$(DEPDIR)/babel_main.Po
include babeld/$(DEPDIR)/babel_memory.Po
include babeld/$(DEPDIR)/babel_zebra.Po
include babeld/$(DEPDIR)/babeld.Po
include babeld/$(DEPDIR)/kernel.Po
include babeld/$(DEPDIR)/message.Po
include babeld/$(DEPDIR)/neighbour.Po
include babeld/$(DEPDIR)/net.Po
include babeld/$(DEPDIR)/resend.Po
include babeld/$(DEPDIR)/route.Po
include babeld/$(DEPDIR)/source.Po
include babeld/$(DEPDIR)/util.Po
include babeld/$(DEPDIR)/xroute.Po
include eigrpd/$(DEPDIR)/eigrp_dump.Po
include eigrpd/$(DEPDIR)/eigrp_filter.Po
include eigrpd/$(DEPDIR)/eigrp_fsm.Po
include eigrpd/$(DEPDIR)/eigrp_hello.Po
include eigrpd/$(DEPDIR)/eigrp_interface.Po
include eigrpd/$(DEPDIR)/eigrp_main.Po
include eigrpd/$(DEPDIR)/eigrp_memory.Po
include eigrpd/$(DEPDIR)/eigrp_neighbor.Po
include eigrpd/$(DEPDIR)/eigrp_network.Po
include eigrpd/$(DEPDIR)/eigrp_packet.Po
include eigrpd/$(DEPDIR)/eigrp_query.Po
include eigrpd/$(DEPDIR)/eigrp_reply.Po
include eigrpd/$(DEPDIR)/eigrp_siaquery.Po
include eigrpd/$(DEPDIR)/eigrp_siareply.Po
include eigrpd/$(DEPDIR)/eigrp_snmp.Po
include eigrpd/$(DEPDIR)/eigrp_topology.Po
include eigrpd/$(DEPDIR)/eigrp_update.Po
include eigrpd/$(DEPDIR)/eigrp_vty.Po
include eigrpd/$(DEPDIR)/eigrp_zebra.Po
include eigrpd/$(DEPDIR)/eigrpd.Po
include fpm/$(DEPDIR)/fpm_libfrrfpm_pb_la-fpm.pb-c.Plo
include fpm/$(DEPDIR)/fpm_libfrrfpm_pb_la-fpm_pb.Plo
include isisd/$(DEPDIR)/dict.Po
include isisd/$(DEPDIR)/isis_adjacency.Po
include isisd/$(DEPDIR)/isis_bpf.Po
include isisd/$(DEPDIR)/isis_circuit.Po
include isisd/$(DEPDIR)/isis_csm.Po
include isisd/$(DEPDIR)/isis_dlpi.Po
include isisd/$(DEPDIR)/isis_dr.Po
include isisd/$(DEPDIR)/isis_dynhn.Po
include isisd/$(DEPDIR)/isis_events.Po
include isisd/$(DEPDIR)/isis_flags.Po
include isisd/$(DEPDIR)/isis_lsp.Po
include isisd/$(DEPDIR)/isis_lsp_hash.Po
include isisd/$(DEPDIR)/isis_main.Po
include isisd/$(DEPDIR)/isis_memory.Po
include isisd/$(DEPDIR)/isis_misc.Po
include isisd/$(DEPDIR)/isis_mt.Po
include isisd/$(DEPDIR)/isis_pdu.Po
include isisd/$(DEPDIR)/isis_pfpacket.Po
include isisd/$(DEPDIR)/isis_redist.Po
include isisd/$(DEPDIR)/isis_route.Po
include isisd/$(DEPDIR)/isis_routemap.Po
include isisd/$(DEPDIR)/isis_spf.Po
include isisd/$(DEPDIR)/isis_te.Po
include isisd/$(DEPDIR)/isis_tlvs.Po
include isisd/$(DEPDIR)/isis_vty.Po
include isisd/$(DEPDIR)/isis_zebra.Po
include isisd/$(DEPDIR)/isisd.Po
include isisd/$(DEPDIR)/iso_checksum.Po
include ldpd/$(DEPDIR)/accept.Po
include ldpd/$(DEPDIR)/address.Po
include ldpd/$(DEPDIR)/adjacency.Po
include ldpd/$(DEPDIR)/control.Po
include ldpd/$(DEPDIR)/hello.Po
include ldpd/$(DEPDIR)/init.Po
include ldpd/$(DEPDIR)/interface.Po
include ldpd/$(DEPDIR)/keepalive.Po
include ldpd/$(DEPDIR)/l2vpn.Po
include ldpd/$(DEPDIR)/labelmapping.Po
include ldpd/$(DEPDIR)/lde.Po
include ldpd/$(DEPDIR)/lde_lib.Po
include ldpd/$(DEPDIR)/ldp_debug.Po
include ldpd/$(DEPDIR)/ldp_vty_cmds.Po
include ldpd/$(DEPDIR)/ldp_vty_conf.Po
include ldpd/$(DEPDIR)/ldp_vty_exec.Po
include ldpd/$(DEPDIR)/ldp_zebra.Po
include ldpd/$(DEPDIR)/ldpd.Po
include ldpd/$(DEPDIR)/ldpe.Po
include ldpd/$(DEPDIR)/log.Po
include ldpd/$(DEPDIR)/logmsg.Po
include ldpd/$(DEPDIR)/neighbor.Po
include ldpd/$(DEPDIR)/notification.Po
include ldpd/$(DEPDIR)/packet.Po
include ldpd/$(DEPDIR)/pfkey.Po
include ldpd/$(DEPDIR)/socket.Po
include ldpd/$(DEPDIR)/util.Po
include lib/$(DEPDIR)/bfd.Plo
include lib/$(DEPDIR)/buffer.Plo
include lib/$(DEPDIR)/checksum.Plo
include lib/$(DEPDIR)/command.Plo
include lib/$(DEPDIR)/command_graph.Plo
include lib/$(DEPDIR)/command_lex.Plo
include lib/$(DEPDIR)/command_match.Plo
include lib/$(DEPDIR)/command_parse.Plo
include lib/$(DEPDIR)/csv.Plo
include lib/$(DEPDIR)/debug.Plo
include lib/$(DEPDIR)/distribute.Plo
include lib/$(DEPDIR)/event_counter.Plo
include lib/$(DEPDIR)/ferr.Plo
include lib/$(DEPDIR)/filter.Plo
include lib/$(DEPDIR)/frr_pthread.Plo
include lib/$(DEPDIR)/frrstr.Plo
include lib/$(DEPDIR)/getopt.Plo
include lib/$(DEPDIR)/getopt1.Plo
include lib/$(DEPDIR)/grammar_sandbox.Plo
include lib/$(DEPDIR)/grammar_sandbox_main.Po
include lib/$(DEPDIR)/graph.Plo
include lib/$(DEPDIR)/hash.Plo
include lib/$(DEPDIR)/hook.Plo
include lib/$(DEPDIR)/if.Plo
include lib/$(DEPDIR)/if_rmap.Plo
include lib/$(DEPDIR)/imsg-buffer.Plo
include lib/$(DEPDIR)/imsg.Plo
include lib/$(DEPDIR)/jhash.Plo
include lib/$(DEPDIR)/json.Plo
include lib/$(DEPDIR)/keychain.Plo
include lib/$(DEPDIR)/lib_clippy-clippy.Po
include lib/$(DEPDIR)/lib_clippy-command_graph.Po
include lib/$(DEPDIR)/lib_clippy-command_lex.Po
include lib/$(DEPDIR)/lib_clippy-command_parse.Po
include lib/$(DEPDIR)/lib_clippy-command_py.Po
include lib/$(DEPDIR)/lib_clippy-defun_lex.Po
include lib/$(DEPDIR)/lib_clippy-graph.Po
include lib/$(DEPDIR)/lib_clippy-memory.Po
include lib/$(DEPDIR)/lib_clippy-vector.Po
include lib/$(DEPDIR)/lib_libfrrsnmp_la-agentx.Plo
include lib/$(DEPDIR)/lib_libfrrsnmp_la-smux.Plo
include lib/$(DEPDIR)/lib_libfrrsnmp_la-snmp.Plo
include lib/$(DEPDIR)/lib_libfrrzmq_la-frr_zmq.Plo
include lib/$(DEPDIR)/libfrr.Plo
include lib/$(DEPDIR)/linklist.Plo
include lib/$(DEPDIR)/log.Plo
include lib/$(DEPDIR)/logicalrouter.Plo
include lib/$(DEPDIR)/md5.Plo
include lib/$(DEPDIR)/memory.Plo
include lib/$(DEPDIR)/memory_vty.Plo
include lib/$(DEPDIR)/module.Plo
include lib/$(DEPDIR)/mpls.Plo
include lib/$(DEPDIR)/netns_linux.Plo
include lib/$(DEPDIR)/netns_other.Plo
include lib/$(DEPDIR)/network.Plo
include lib/$(DEPDIR)/nexthop.Plo
include lib/$(DEPDIR)/nexthop_group.Plo
include lib/$(DEPDIR)/openbsd-tree.Plo
include lib/$(DEPDIR)/pid_output.Plo
include lib/$(DEPDIR)/plist.Plo
include lib/$(DEPDIR)/pqueue.Plo
include lib/$(DEPDIR)/prefix.Plo
include lib/$(DEPDIR)/privs.Plo
include lib/$(DEPDIR)/ptm_lib.Plo
include lib/$(DEPDIR)/qobj.Plo
include lib/$(DEPDIR)/ringbuf.Plo
include lib/$(DEPDIR)/routemap.Plo
include lib/$(DEPDIR)/sbuf.Plo
include lib/$(DEPDIR)/sha256.Plo
include lib/$(DEPDIR)/sigevent.Plo
include lib/$(DEPDIR)/skiplist.Plo
include lib/$(DEPDIR)/sockopt.Plo
include lib/$(DEPDIR)/sockunion.Plo
include lib/$(DEPDIR)/spf_backoff.Plo
include lib/$(DEPDIR)/srcdest_table.Plo
include lib/$(DEPDIR)/stream.Plo
include lib/$(DEPDIR)/strlcat.Plo
include lib/$(DEPDIR)/strlcpy.Plo
include lib/$(DEPDIR)/systemd.Plo
include lib/$(DEPDIR)/table.Plo
include lib/$(DEPDIR)/termtable.Plo
include lib/$(DEPDIR)/thread.Plo
include lib/$(DEPDIR)/vector.Plo
include lib/$(DEPDIR)/vrf.Plo
include lib/$(DEPDIR)/vty.Plo
include lib/$(DEPDIR)/wheel.Plo
include lib/$(DEPDIR)/workqueue.Plo
include lib/$(DEPDIR)/zclient.Plo
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-linux.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_arp.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_gre.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_cache.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_event.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_interface.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_main.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_nhs.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_packet.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_peer.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_route.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_shortcut.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vc.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vty.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-reqid.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-resolver.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-vici.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-zbuf.Po
include nhrpd/$(DEPDIR)/nhrpd_nhrpd-znl.Po
include ospf6d/$(DEPDIR)/ospf6_abr.Po
include ospf6d/$(DEPDIR)/ospf6_area.Po
include ospf6d/$(DEPDIR)/ospf6_asbr.Po
include ospf6d/$(DEPDIR)/ospf6_bfd.Po
include ospf6d/$(DEPDIR)/ospf6_flood.Po
include ospf6d/$(DEPDIR)/ospf6_interface.Po
include ospf6d/$(DEPDIR)/ospf6_intra.Po
include ospf6d/$(DEPDIR)/ospf6_lsa.Po
include ospf6d/$(DEPDIR)/ospf6_lsdb.Po
include ospf6d/$(DEPDIR)/ospf6_main.Po
include ospf6d/$(DEPDIR)/ospf6_memory.Po
include ospf6d/$(DEPDIR)/ospf6_message.Po
include ospf6d/$(DEPDIR)/ospf6_neighbor.Po
include ospf6d/$(DEPDIR)/ospf6_network.Po
include ospf6d/$(DEPDIR)/ospf6_proto.Po
include ospf6d/$(DEPDIR)/ospf6_route.Po
include ospf6d/$(DEPDIR)/ospf6_spf.Po
include ospf6d/$(DEPDIR)/ospf6_top.Po
include ospf6d/$(DEPDIR)/ospf6_zebra.Po
include ospf6d/$(DEPDIR)/ospf6d.Po
include ospf6d/$(DEPDIR)/ospf6d_ospf6d_snmp_la-ospf6_snmp.Plo
include ospfclient/$(DEPDIR)/ospf_apiclient.Plo
include ospfclient/$(DEPDIR)/ospfclient.Po
include ospfd/$(DEPDIR)/ospf_abr.Po
include ospfd/$(DEPDIR)/ospf_api.Po
include ospfd/$(DEPDIR)/ospf_apiserver.Po
include ospfd/$(DEPDIR)/ospf_asbr.Po
include ospfd/$(DEPDIR)/ospf_ase.Po
include ospfd/$(DEPDIR)/ospf_bfd.Po
include ospfd/$(DEPDIR)/ospf_dump.Po
include ospfd/$(DEPDIR)/ospf_dump_api.Po
include ospfd/$(DEPDIR)/ospf_ext.Po
include ospfd/$(DEPDIR)/ospf_flood.Po
include ospfd/$(DEPDIR)/ospf_ia.Po
include ospfd/$(DEPDIR)/ospf_interface.Po
include ospfd/$(DEPDIR)/ospf_ism.Po
include ospfd/$(DEPDIR)/ospf_lsa.Po
include ospfd/$(DEPDIR)/ospf_lsdb.Po
include ospfd/$(DEPDIR)/ospf_main.Po
include ospfd/$(DEPDIR)/ospf_memory.Po
include ospfd/$(DEPDIR)/ospf_neighbor.Po
include ospfd/$(DEPDIR)/ospf_network.Po
include ospfd/$(DEPDIR)/ospf_nsm.Po
include ospfd/$(DEPDIR)/ospf_opaque.Po
include ospfd/$(DEPDIR)/ospf_packet.Po
include ospfd/$(DEPDIR)/ospf_ri.Po
include ospfd/$(DEPDIR)/ospf_route.Po
include ospfd/$(DEPDIR)/ospf_routemap.Po
include ospfd/$(DEPDIR)/ospf_spf.Po
include ospfd/$(DEPDIR)/ospf_sr.Po
include ospfd/$(DEPDIR)/ospf_te.Po
include ospfd/$(DEPDIR)/ospf_vty.Po
include ospfd/$(DEPDIR)/ospf_zebra.Po
include ospfd/$(DEPDIR)/ospfd.Po
include ospfd/$(DEPDIR)/ospfd_ospfd_snmp_la-ospf_snmp.Plo
include pbrd/$(DEPDIR)/pbr_debug.Po
include pbrd/$(DEPDIR)/pbr_main.Po
include pbrd/$(DEPDIR)/pbr_map.Po
include pbrd/$(DEPDIR)/pbr_memory.Po
include pbrd/$(DEPDIR)/pbr_nht.Po
include pbrd/$(DEPDIR)/pbr_vty.Po
include pbrd/$(DEPDIR)/pbr_zebra.Po
include pimd/$(DEPDIR)/mtracebis.Po
include pimd/$(DEPDIR)/mtracebis_netlink.Po
include pimd/$(DEPDIR)/mtracebis_routeget.Po
include pimd/$(DEPDIR)/pim_assert.Po
include pimd/$(DEPDIR)/pim_bfd.Po
include pimd/$(DEPDIR)/pim_br.Po
include pimd/$(DEPDIR)/pim_cmd.Po
include pimd/$(DEPDIR)/pim_hello.Po
include pimd/$(DEPDIR)/pim_iface.Po
include pimd/$(DEPDIR)/pim_ifchannel.Po
include pimd/$(DEPDIR)/pim_igmp.Po
include pimd/$(DEPDIR)/pim_igmp_mtrace.Po
include pimd/$(DEPDIR)/pim_igmp_stats.Po
include pimd/$(DEPDIR)/pim_igmpv2.Po
include pimd/$(DEPDIR)/pim_igmpv3.Po
include pimd/$(DEPDIR)/pim_instance.Po
include pimd/$(DEPDIR)/pim_int.Po
include pimd/$(DEPDIR)/pim_join.Po
include pimd/$(DEPDIR)/pim_jp_agg.Po
include pimd/$(DEPDIR)/pim_macro.Po
include pimd/$(DEPDIR)/pim_main.Po
include pimd/$(DEPDIR)/pim_memory.Po
include pimd/$(DEPDIR)/pim_mroute.Po
include pimd/$(DEPDIR)/pim_msdp.Po
include pimd/$(DEPDIR)/pim_msdp_packet.Po
include pimd/$(DEPDIR)/pim_msdp_socket.Po
include pimd/$(DEPDIR)/pim_msg.Po
include pimd/$(DEPDIR)/pim_neighbor.Po
include pimd/$(DEPDIR)/pim_nht.Po
include pimd/$(DEPDIR)/pim_oil.Po
include pimd/$(DEPDIR)/pim_pim.Po
include pimd/$(DEPDIR)/pim_register.Po
include pimd/$(DEPDIR)/pim_routemap.Po
include pimd/$(DEPDIR)/pim_rp.Po
include pimd/$(DEPDIR)/pim_rpf.Po
include pimd/$(DEPDIR)/pim_signals.Po
include pimd/$(DEPDIR)/pim_sock.Po
include pimd/$(DEPDIR)/pim_ssm.Po
include pimd/$(DEPDIR)/pim_ssmpingd.Po
include pimd/$(DEPDIR)/pim_static.Po
include pimd/$(DEPDIR)/pim_str.Po
include pimd/$(DEPDIR)/pim_time.Po
include pimd/$(DEPDIR)/pim_tlv.Po
include pimd/$(DEPDIR)/pim_upstream.Po
include pimd/$(DEPDIR)/pim_util.Po
include pimd/$(DEPDIR)/pim_version.Po
include pimd/$(DEPDIR)/pim_vty.Po
include pimd/$(DEPDIR)/pim_zebra.Po
include pimd/$(DEPDIR)/pim_zlookup.Po
include pimd/$(DEPDIR)/pimd.Po
include pimd/$(DEPDIR)/test_igmpv3_join.Po
include qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb.Plo
include qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb.pb-c.Plo
include qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb_allocator.Plo
include ripd/$(DEPDIR)/rip_debug.Po
include ripd/$(DEPDIR)/rip_interface.Po
include ripd/$(DEPDIR)/rip_main.Po
include ripd/$(DEPDIR)/rip_memory.Po
include ripd/$(DEPDIR)/rip_offset.Po
include ripd/$(DEPDIR)/rip_peer.Po
include ripd/$(DEPDIR)/rip_routemap.Po
include ripd/$(DEPDIR)/rip_zebra.Po
include ripd/$(DEPDIR)/ripd.Po
include ripd/$(DEPDIR)/ripd_ripd_snmp_la-rip_snmp.Plo
include ripngd/$(DEPDIR)/ripng_debug.Po
include ripngd/$(DEPDIR)/ripng_interface.Po
include ripngd/$(DEPDIR)/ripng_main.Po
include ripngd/$(DEPDIR)/ripng_memory.Po
include ripngd/$(DEPDIR)/ripng_nexthop.Po
include ripngd/$(DEPDIR)/ripng_offset.Po
include ripngd/$(DEPDIR)/ripng_peer.Po
include ripngd/$(DEPDIR)/ripng_route.Po
include ripngd/$(DEPDIR)/ripng_routemap.Po
include ripngd/$(DEPDIR)/ripng_zebra.Po
include ripngd/$(DEPDIR)/ripngd.Po
include sharpd/$(DEPDIR)/sharp_main.Po
include sharpd/$(DEPDIR)/sharp_vty.Po
include sharpd/$(DEPDIR)/sharp_zebra.Po
include tools/$(DEPDIR)/permutations.Po
include tools/$(DEPDIR)/start-stop-daemon.Po
include watchfrr/$(DEPDIR)/watchfrr.Po
include watchfrr/$(DEPDIR)/watchfrr_vty.Po
include zebra/$(DEPDIR)/connected.Po
include zebra/$(DEPDIR)/debug.Po
include zebra/$(DEPDIR)/if_ioctl.Po
include zebra/$(DEPDIR)/if_ioctl_solaris.Po
include zebra/$(DEPDIR)/if_netlink.Po
include zebra/$(DEPDIR)/if_sysctl.Po
include zebra/$(DEPDIR)/interface.Po
include zebra/$(DEPDIR)/ioctl.Po
include zebra/$(DEPDIR)/ioctl_solaris.Po
include zebra/$(DEPDIR)/ipforward_proc.Po
include zebra/$(DEPDIR)/ipforward_solaris.Po
include zebra/$(DEPDIR)/ipforward_sysctl.Po
include zebra/$(DEPDIR)/irdp_interface.Plo
include zebra/$(DEPDIR)/irdp_main.Plo
include zebra/$(DEPDIR)/irdp_packet.Plo
include zebra/$(DEPDIR)/kernel_netlink.Po
include zebra/$(DEPDIR)/kernel_socket.Po
include zebra/$(DEPDIR)/label_manager.Po
include zebra/$(DEPDIR)/main.Po
include zebra/$(DEPDIR)/redistribute.Po
include zebra/$(DEPDIR)/router-id.Po
include zebra/$(DEPDIR)/rt_netlink.Po
include zebra/$(DEPDIR)/rt_socket.Po
include zebra/$(DEPDIR)/rtadv.Po
include zebra/$(DEPDIR)/rtread_getmsg.Po
include zebra/$(DEPDIR)/rtread_netlink.Po
include zebra/$(DEPDIR)/rtread_sysctl.Po
include zebra/$(DEPDIR)/rule_netlink.Po
include zebra/$(DEPDIR)/rule_socket.Po
include zebra/$(DEPDIR)/table_manager.Po
include zebra/$(DEPDIR)/zapi_msg.Po
include zebra/$(DEPDIR)/zebra_fpm.Plo
include zebra/$(DEPDIR)/zebra_fpm_dt.Plo
include zebra/$(DEPDIR)/zebra_fpm_netlink.Plo
include zebra/$(DEPDIR)/zebra_fpm_protobuf.Plo
include zebra/$(DEPDIR)/zebra_l2.Po
include zebra/$(DEPDIR)/zebra_memory.Po
include zebra/$(DEPDIR)/zebra_mpls.Po
include zebra/$(DEPDIR)/zebra_mpls_netlink.Po
include zebra/$(DEPDIR)/zebra_mpls_null.Po
include zebra/$(DEPDIR)/zebra_mpls_openbsd.Po
include zebra/$(DEPDIR)/zebra_mpls_vty.Po
include zebra/$(DEPDIR)/zebra_mroute.Po
include zebra/$(DEPDIR)/zebra_netns_id.Po
include zebra/$(DEPDIR)/zebra_netns_notify.Po
include zebra/$(DEPDIR)/zebra_ns.Po
include zebra/$(DEPDIR)/zebra_pbr.Po
include zebra/$(DEPDIR)/zebra_ptm.Po
include zebra/$(DEPDIR)/zebra_ptm_redistribute.Po
include zebra/$(DEPDIR)/zebra_pw.Po
include zebra/$(DEPDIR)/zebra_rib.Po
include zebra/$(DEPDIR)/zebra_rnh.Po
include zebra/$(DEPDIR)/zebra_routemap.Po
include zebra/$(DEPDIR)/zebra_static.Po
include zebra/$(DEPDIR)/zebra_vrf.Po
include zebra/$(DEPDIR)/zebra_vty.Po
include zebra/$(DEPDIR)/zebra_vxlan.Po
include zebra/$(DEPDIR)/zebra_zebra_snmp_la-zebra_snmp.Plo
include zebra/$(DEPDIR)/zserv.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

fpm/fpm_libfrrfpm_pb_la-fpm_pb.lo: fpm/fpm_pb.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fpm_libfrrfpm_pb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fpm/fpm_libfrrfpm_pb_la-fpm_pb.lo -MD -MP -MF fpm/$(DEPDIR)/fpm_libfrrfpm_pb_la-fpm_pb.Tpo -c -o fpm/fpm_libfrrfpm_pb_la-fpm_pb.lo `test -f 'fpm/fpm_pb.c' || echo '$(srcdir)/'`fpm/fpm_pb.c
	$(AM_V_at)$(am__mv) fpm/$(DEPDIR)/fpm_libfrrfpm_pb_la-fpm_pb.Tpo fpm/$(DEPDIR)/fpm_libfrrfpm_pb_la-fpm_pb.Plo
#	$(AM_V_CC)source='fpm/fpm_pb.c' object='fpm/fpm_libfrrfpm_pb_la-fpm_pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fpm_libfrrfpm_pb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fpm/fpm_libfrrfpm_pb_la-fpm_pb.lo `test -f 'fpm/fpm_pb.c' || echo '$(srcdir)/'`fpm/fpm_pb.c

fpm/fpm_libfrrfpm_pb_la-fpm.pb-c.lo: fpm/fpm.pb-c.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fpm_libfrrfpm_pb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fpm/fpm_libfrrfpm_pb_la-fpm.pb-c.lo -MD -MP -MF fpm/$(DEPDIR)/fpm_libfrrfpm_pb_la-fpm.pb-c.Tpo -c -o fpm/fpm_libfrrfpm_pb_la-fpm.pb-c.lo `test -f 'fpm/fpm.pb-c.c' || echo '$(srcdir)/'`fpm/fpm.pb-c.c
	$(AM_V_at)$(am__mv) fpm/$(DEPDIR)/fpm_libfrrfpm_pb_la-fpm.pb-c.Tpo fpm/$(DEPDIR)/fpm_libfrrfpm_pb_la-fpm.pb-c.Plo
#	$(AM_V_CC)source='fpm/fpm.pb-c.c' object='fpm/fpm_libfrrfpm_pb_la-fpm.pb-c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fpm_libfrrfpm_pb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fpm/fpm_libfrrfpm_pb_la-fpm.pb-c.lo `test -f 'fpm/fpm.pb-c.c' || echo '$(srcdir)/'`fpm/fpm.pb-c.c

lib/lib_libfrrsnmp_la-agentx.lo: lib/agentx.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libfrrsnmp_la_CFLAGS) $(CFLAGS) -MT lib/lib_libfrrsnmp_la-agentx.lo -MD -MP -MF lib/$(DEPDIR)/lib_libfrrsnmp_la-agentx.Tpo -c -o lib/lib_libfrrsnmp_la-agentx.lo `test -f 'lib/agentx.c' || echo '$(srcdir)/'`lib/agentx.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_libfrrsnmp_la-agentx.Tpo lib/$(DEPDIR)/lib_libfrrsnmp_la-agentx.Plo
#	$(AM_V_CC)source='lib/agentx.c' object='lib/lib_libfrrsnmp_la-agentx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libfrrsnmp_la_CFLAGS) $(CFLAGS) -c -o lib/lib_libfrrsnmp_la-agentx.lo `test -f 'lib/agentx.c' || echo '$(srcdir)/'`lib/agentx.c

lib/lib_libfrrsnmp_la-smux.lo: lib/smux.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libfrrsnmp_la_CFLAGS) $(CFLAGS) -MT lib/lib_libfrrsnmp_la-smux.lo -MD -MP -MF lib/$(DEPDIR)/lib_libfrrsnmp_la-smux.Tpo -c -o lib/lib_libfrrsnmp_la-smux.lo `test -f 'lib/smux.c' || echo '$(srcdir)/'`lib/smux.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_libfrrsnmp_la-smux.Tpo lib/$(DEPDIR)/lib_libfrrsnmp_la-smux.Plo
#	$(AM_V_CC)source='lib/smux.c' object='lib/lib_libfrrsnmp_la-smux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libfrrsnmp_la_CFLAGS) $(CFLAGS) -c -o lib/lib_libfrrsnmp_la-smux.lo `test -f 'lib/smux.c' || echo '$(srcdir)/'`lib/smux.c

lib/lib_libfrrsnmp_la-snmp.lo: lib/snmp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libfrrsnmp_la_CFLAGS) $(CFLAGS) -MT lib/lib_libfrrsnmp_la-snmp.lo -MD -MP -MF lib/$(DEPDIR)/lib_libfrrsnmp_la-snmp.Tpo -c -o lib/lib_libfrrsnmp_la-snmp.lo `test -f 'lib/snmp.c' || echo '$(srcdir)/'`lib/snmp.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_libfrrsnmp_la-snmp.Tpo lib/$(DEPDIR)/lib_libfrrsnmp_la-snmp.Plo
#	$(AM_V_CC)source='lib/snmp.c' object='lib/lib_libfrrsnmp_la-snmp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libfrrsnmp_la_CFLAGS) $(CFLAGS) -c -o lib/lib_libfrrsnmp_la-snmp.lo `test -f 'lib/snmp.c' || echo '$(srcdir)/'`lib/snmp.c

lib/lib_libfrrzmq_la-frr_zmq.lo: lib/frr_zmq.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libfrrzmq_la_CFLAGS) $(CFLAGS) -MT lib/lib_libfrrzmq_la-frr_zmq.lo -MD -MP -MF lib/$(DEPDIR)/lib_libfrrzmq_la-frr_zmq.Tpo -c -o lib/lib_libfrrzmq_la-frr_zmq.lo `test -f 'lib/frr_zmq.c' || echo '$(srcdir)/'`lib/frr_zmq.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_libfrrzmq_la-frr_zmq.Tpo lib/$(DEPDIR)/lib_libfrrzmq_la-frr_zmq.Plo
#	$(AM_V_CC)source='lib/frr_zmq.c' object='lib/lib_libfrrzmq_la-frr_zmq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libfrrzmq_la_CFLAGS) $(CFLAGS) -c -o lib/lib_libfrrzmq_la-frr_zmq.lo `test -f 'lib/frr_zmq.c' || echo '$(srcdir)/'`lib/frr_zmq.c

ospf6d/ospf6d_ospf6d_snmp_la-ospf6_snmp.lo: ospf6d/ospf6_snmp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ospf6d_ospf6d_snmp_la_CFLAGS) $(CFLAGS) -MT ospf6d/ospf6d_ospf6d_snmp_la-ospf6_snmp.lo -MD -MP -MF ospf6d/$(DEPDIR)/ospf6d_ospf6d_snmp_la-ospf6_snmp.Tpo -c -o ospf6d/ospf6d_ospf6d_snmp_la-ospf6_snmp.lo `test -f 'ospf6d/ospf6_snmp.c' || echo '$(srcdir)/'`ospf6d/ospf6_snmp.c
	$(AM_V_at)$(am__mv) ospf6d/$(DEPDIR)/ospf6d_ospf6d_snmp_la-ospf6_snmp.Tpo ospf6d/$(DEPDIR)/ospf6d_ospf6d_snmp_la-ospf6_snmp.Plo
#	$(AM_V_CC)source='ospf6d/ospf6_snmp.c' object='ospf6d/ospf6d_ospf6d_snmp_la-ospf6_snmp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ospf6d_ospf6d_snmp_la_CFLAGS) $(CFLAGS) -c -o ospf6d/ospf6d_ospf6d_snmp_la-ospf6_snmp.lo `test -f 'ospf6d/ospf6_snmp.c' || echo '$(srcdir)/'`ospf6d/ospf6_snmp.c

ospfd/ospfd_ospfd_snmp_la-ospf_snmp.lo: ospfd/ospf_snmp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ospfd_ospfd_snmp_la_CFLAGS) $(CFLAGS) -MT ospfd/ospfd_ospfd_snmp_la-ospf_snmp.lo -MD -MP -MF ospfd/$(DEPDIR)/ospfd_ospfd_snmp_la-ospf_snmp.Tpo -c -o ospfd/ospfd_ospfd_snmp_la-ospf_snmp.lo `test -f 'ospfd/ospf_snmp.c' || echo '$(srcdir)/'`ospfd/ospf_snmp.c
	$(AM_V_at)$(am__mv) ospfd/$(DEPDIR)/ospfd_ospfd_snmp_la-ospf_snmp.Tpo ospfd/$(DEPDIR)/ospfd_ospfd_snmp_la-ospf_snmp.Plo
#	$(AM_V_CC)source='ospfd/ospf_snmp.c' object='ospfd/ospfd_ospfd_snmp_la-ospf_snmp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ospfd_ospfd_snmp_la_CFLAGS) $(CFLAGS) -c -o ospfd/ospfd_ospfd_snmp_la-ospf_snmp.lo `test -f 'ospfd/ospf_snmp.c' || echo '$(srcdir)/'`ospfd/ospf_snmp.c

qpb/qpb_libfrr_pb_la-qpb.lo: qpb/qpb.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qpb_libfrr_pb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qpb/qpb_libfrr_pb_la-qpb.lo -MD -MP -MF qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb.Tpo -c -o qpb/qpb_libfrr_pb_la-qpb.lo `test -f 'qpb/qpb.c' || echo '$(srcdir)/'`qpb/qpb.c
	$(AM_V_at)$(am__mv) qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb.Tpo qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb.Plo
#	$(AM_V_CC)source='qpb/qpb.c' object='qpb/qpb_libfrr_pb_la-qpb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qpb_libfrr_pb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qpb/qpb_libfrr_pb_la-qpb.lo `test -f 'qpb/qpb.c' || echo '$(srcdir)/'`qpb/qpb.c

qpb/qpb_libfrr_pb_la-qpb_allocator.lo: qpb/qpb_allocator.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qpb_libfrr_pb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qpb/qpb_libfrr_pb_la-qpb_allocator.lo -MD -MP -MF qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb_allocator.Tpo -c -o qpb/qpb_libfrr_pb_la-qpb_allocator.lo `test -f 'qpb/qpb_allocator.c' || echo '$(srcdir)/'`qpb/qpb_allocator.c
	$(AM_V_at)$(am__mv) qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb_allocator.Tpo qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb_allocator.Plo
#	$(AM_V_CC)source='qpb/qpb_allocator.c' object='qpb/qpb_libfrr_pb_la-qpb_allocator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qpb_libfrr_pb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qpb/qpb_libfrr_pb_la-qpb_allocator.lo `test -f 'qpb/qpb_allocator.c' || echo '$(srcdir)/'`qpb/qpb_allocator.c

qpb/qpb_libfrr_pb_la-qpb.pb-c.lo: qpb/qpb.pb-c.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qpb_libfrr_pb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qpb/qpb_libfrr_pb_la-qpb.pb-c.lo -MD -MP -MF qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb.pb-c.Tpo -c -o qpb/qpb_libfrr_pb_la-qpb.pb-c.lo `test -f 'qpb/qpb.pb-c.c' || echo '$(srcdir)/'`qpb/qpb.pb-c.c
	$(AM_V_at)$(am__mv) qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb.pb-c.Tpo qpb/$(DEPDIR)/qpb_libfrr_pb_la-qpb.pb-c.Plo
#	$(AM_V_CC)source='qpb/qpb.pb-c.c' object='qpb/qpb_libfrr_pb_la-qpb.pb-c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qpb_libfrr_pb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qpb/qpb_libfrr_pb_la-qpb.pb-c.lo `test -f 'qpb/qpb.pb-c.c' || echo '$(srcdir)/'`qpb/qpb.pb-c.c

ripd/ripd_ripd_snmp_la-rip_snmp.lo: ripd/rip_snmp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ripd_ripd_snmp_la_CFLAGS) $(CFLAGS) -MT ripd/ripd_ripd_snmp_la-rip_snmp.lo -MD -MP -MF ripd/$(DEPDIR)/ripd_ripd_snmp_la-rip_snmp.Tpo -c -o ripd/ripd_ripd_snmp_la-rip_snmp.lo `test -f 'ripd/rip_snmp.c' || echo '$(srcdir)/'`ripd/rip_snmp.c
	$(AM_V_at)$(am__mv) ripd/$(DEPDIR)/ripd_ripd_snmp_la-rip_snmp.Tpo ripd/$(DEPDIR)/ripd_ripd_snmp_la-rip_snmp.Plo
#	$(AM_V_CC)source='ripd/rip_snmp.c' object='ripd/ripd_ripd_snmp_la-rip_snmp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ripd_ripd_snmp_la_CFLAGS) $(CFLAGS) -c -o ripd/ripd_ripd_snmp_la-rip_snmp.lo `test -f 'ripd/rip_snmp.c' || echo '$(srcdir)/'`ripd/rip_snmp.c

zebra/zebra_zebra_snmp_la-zebra_snmp.lo: zebra/zebra_snmp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zebra_zebra_snmp_la_CFLAGS) $(CFLAGS) -MT zebra/zebra_zebra_snmp_la-zebra_snmp.lo -MD -MP -MF zebra/$(DEPDIR)/zebra_zebra_snmp_la-zebra_snmp.Tpo -c -o zebra/zebra_zebra_snmp_la-zebra_snmp.lo `test -f 'zebra/zebra_snmp.c' || echo '$(srcdir)/'`zebra/zebra_snmp.c
	$(AM_V_at)$(am__mv) zebra/$(DEPDIR)/zebra_zebra_snmp_la-zebra_snmp.Tpo zebra/$(DEPDIR)/zebra_zebra_snmp_la-zebra_snmp.Plo
#	$(AM_V_CC)source='zebra/zebra_snmp.c' object='zebra/zebra_zebra_snmp_la-zebra_snmp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zebra_zebra_snmp_la_CFLAGS) $(CFLAGS) -c -o zebra/zebra_zebra_snmp_la-zebra_snmp.lo `test -f 'zebra/zebra_snmp.c' || echo '$(srcdir)/'`zebra/zebra_snmp.c

lib/lib_clippy-clippy.o: lib/clippy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-clippy.o -MD -MP -MF lib/$(DEPDIR)/lib_clippy-clippy.Tpo -c -o lib/lib_clippy-clippy.o `test -f 'lib/clippy.c' || echo '$(srcdir)/'`lib/clippy.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-clippy.Tpo lib/$(DEPDIR)/lib_clippy-clippy.Po
#	$(AM_V_CC)source='lib/clippy.c' object='lib/lib_clippy-clippy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-clippy.o `test -f 'lib/clippy.c' || echo '$(srcdir)/'`lib/clippy.c

lib/lib_clippy-clippy.obj: lib/clippy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-clippy.obj -MD -MP -MF lib/$(DEPDIR)/lib_clippy-clippy.Tpo -c -o lib/lib_clippy-clippy.obj `if test -f 'lib/clippy.c'; then $(CYGPATH_W) 'lib/clippy.c'; else $(CYGPATH_W) '$(srcdir)/lib/clippy.c'; fi`
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-clippy.Tpo lib/$(DEPDIR)/lib_clippy-clippy.Po
#	$(AM_V_CC)source='lib/clippy.c' object='lib/lib_clippy-clippy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-clippy.obj `if test -f 'lib/clippy.c'; then $(CYGPATH_W) 'lib/clippy.c'; else $(CYGPATH_W) '$(srcdir)/lib/clippy.c'; fi`

lib/lib_clippy-command_graph.o: lib/command_graph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-command_graph.o -MD -MP -MF lib/$(DEPDIR)/lib_clippy-command_graph.Tpo -c -o lib/lib_clippy-command_graph.o `test -f 'lib/command_graph.c' || echo '$(srcdir)/'`lib/command_graph.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-command_graph.Tpo lib/$(DEPDIR)/lib_clippy-command_graph.Po
#	$(AM_V_CC)source='lib/command_graph.c' object='lib/lib_clippy-command_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-command_graph.o `test -f 'lib/command_graph.c' || echo '$(srcdir)/'`lib/command_graph.c

lib/lib_clippy-command_graph.obj: lib/command_graph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-command_graph.obj -MD -MP -MF lib/$(DEPDIR)/lib_clippy-command_graph.Tpo -c -o lib/lib_clippy-command_graph.obj `if test -f 'lib/command_graph.c'; then $(CYGPATH_W) 'lib/command_graph.c'; else $(CYGPATH_W) '$(srcdir)/lib/command_graph.c'; fi`
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-command_graph.Tpo lib/$(DEPDIR)/lib_clippy-command_graph.Po
#	$(AM_V_CC)source='lib/command_graph.c' object='lib/lib_clippy-command_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-command_graph.obj `if test -f 'lib/command_graph.c'; then $(CYGPATH_W) 'lib/command_graph.c'; else $(CYGPATH_W) '$(srcdir)/lib/command_graph.c'; fi`

lib/lib_clippy-command_lex.o: lib/command_lex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-command_lex.o -MD -MP -MF lib/$(DEPDIR)/lib_clippy-command_lex.Tpo -c -o lib/lib_clippy-command_lex.o `test -f 'lib/command_lex.c' || echo '$(srcdir)/'`lib/command_lex.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-command_lex.Tpo lib/$(DEPDIR)/lib_clippy-command_lex.Po
#	$(AM_V_CC)source='lib/command_lex.c' object='lib/lib_clippy-command_lex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-command_lex.o `test -f 'lib/command_lex.c' || echo '$(srcdir)/'`lib/command_lex.c

lib/lib_clippy-command_lex.obj: lib/command_lex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-command_lex.obj -MD -MP -MF lib/$(DEPDIR)/lib_clippy-command_lex.Tpo -c -o lib/lib_clippy-command_lex.obj `if test -f 'lib/command_lex.c'; then $(CYGPATH_W) 'lib/command_lex.c'; else $(CYGPATH_W) '$(srcdir)/lib/command_lex.c'; fi`
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-command_lex.Tpo lib/$(DEPDIR)/lib_clippy-command_lex.Po
#	$(AM_V_CC)source='lib/command_lex.c' object='lib/lib_clippy-command_lex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-command_lex.obj `if test -f 'lib/command_lex.c'; then $(CYGPATH_W) 'lib/command_lex.c'; else $(CYGPATH_W) '$(srcdir)/lib/command_lex.c'; fi`

lib/lib_clippy-command_parse.o: lib/command_parse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-command_parse.o -MD -MP -MF lib/$(DEPDIR)/lib_clippy-command_parse.Tpo -c -o lib/lib_clippy-command_parse.o `test -f 'lib/command_parse.c' || echo '$(srcdir)/'`lib/command_parse.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-command_parse.Tpo lib/$(DEPDIR)/lib_clippy-command_parse.Po
#	$(AM_V_CC)source='lib/command_parse.c' object='lib/lib_clippy-command_parse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-command_parse.o `test -f 'lib/command_parse.c' || echo '$(srcdir)/'`lib/command_parse.c

lib/lib_clippy-command_parse.obj: lib/command_parse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-command_parse.obj -MD -MP -MF lib/$(DEPDIR)/lib_clippy-command_parse.Tpo -c -o lib/lib_clippy-command_parse.obj `if test -f 'lib/command_parse.c'; then $(CYGPATH_W) 'lib/command_parse.c'; else $(CYGPATH_W) '$(srcdir)/lib/command_parse.c'; fi`
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-command_parse.Tpo lib/$(DEPDIR)/lib_clippy-command_parse.Po
#	$(AM_V_CC)source='lib/command_parse.c' object='lib/lib_clippy-command_parse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-command_parse.obj `if test -f 'lib/command_parse.c'; then $(CYGPATH_W) 'lib/command_parse.c'; else $(CYGPATH_W) '$(srcdir)/lib/command_parse.c'; fi`

lib/lib_clippy-command_py.o: lib/command_py.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-command_py.o -MD -MP -MF lib/$(DEPDIR)/lib_clippy-command_py.Tpo -c -o lib/lib_clippy-command_py.o `test -f 'lib/command_py.c' || echo '$(srcdir)/'`lib/command_py.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-command_py.Tpo lib/$(DEPDIR)/lib_clippy-command_py.Po
#	$(AM_V_CC)source='lib/command_py.c' object='lib/lib_clippy-command_py.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-command_py.o `test -f 'lib/command_py.c' || echo '$(srcdir)/'`lib/command_py.c

lib/lib_clippy-command_py.obj: lib/command_py.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-command_py.obj -MD -MP -MF lib/$(DEPDIR)/lib_clippy-command_py.Tpo -c -o lib/lib_clippy-command_py.obj `if test -f 'lib/command_py.c'; then $(CYGPATH_W) 'lib/command_py.c'; else $(CYGPATH_W) '$(srcdir)/lib/command_py.c'; fi`
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-command_py.Tpo lib/$(DEPDIR)/lib_clippy-command_py.Po
#	$(AM_V_CC)source='lib/command_py.c' object='lib/lib_clippy-command_py.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-command_py.obj `if test -f 'lib/command_py.c'; then $(CYGPATH_W) 'lib/command_py.c'; else $(CYGPATH_W) '$(srcdir)/lib/command_py.c'; fi`

lib/lib_clippy-defun_lex.o: lib/defun_lex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-defun_lex.o -MD -MP -MF lib/$(DEPDIR)/lib_clippy-defun_lex.Tpo -c -o lib/lib_clippy-defun_lex.o `test -f 'lib/defun_lex.c' || echo '$(srcdir)/'`lib/defun_lex.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-defun_lex.Tpo lib/$(DEPDIR)/lib_clippy-defun_lex.Po
#	$(AM_V_CC)source='lib/defun_lex.c' object='lib/lib_clippy-defun_lex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-defun_lex.o `test -f 'lib/defun_lex.c' || echo '$(srcdir)/'`lib/defun_lex.c

lib/lib_clippy-defun_lex.obj: lib/defun_lex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-defun_lex.obj -MD -MP -MF lib/$(DEPDIR)/lib_clippy-defun_lex.Tpo -c -o lib/lib_clippy-defun_lex.obj `if test -f 'lib/defun_lex.c'; then $(CYGPATH_W) 'lib/defun_lex.c'; else $(CYGPATH_W) '$(srcdir)/lib/defun_lex.c'; fi`
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-defun_lex.Tpo lib/$(DEPDIR)/lib_clippy-defun_lex.Po
#	$(AM_V_CC)source='lib/defun_lex.c' object='lib/lib_clippy-defun_lex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-defun_lex.obj `if test -f 'lib/defun_lex.c'; then $(CYGPATH_W) 'lib/defun_lex.c'; else $(CYGPATH_W) '$(srcdir)/lib/defun_lex.c'; fi`

lib/lib_clippy-graph.o: lib/graph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-graph.o -MD -MP -MF lib/$(DEPDIR)/lib_clippy-graph.Tpo -c -o lib/lib_clippy-graph.o `test -f 'lib/graph.c' || echo '$(srcdir)/'`lib/graph.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-graph.Tpo lib/$(DEPDIR)/lib_clippy-graph.Po
#	$(AM_V_CC)source='lib/graph.c' object='lib/lib_clippy-graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-graph.o `test -f 'lib/graph.c' || echo '$(srcdir)/'`lib/graph.c

lib/lib_clippy-graph.obj: lib/graph.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-graph.obj -MD -MP -MF lib/$(DEPDIR)/lib_clippy-graph.Tpo -c -o lib/lib_clippy-graph.obj `if test -f 'lib/graph.c'; then $(CYGPATH_W) 'lib/graph.c'; else $(CYGPATH_W) '$(srcdir)/lib/graph.c'; fi`
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-graph.Tpo lib/$(DEPDIR)/lib_clippy-graph.Po
#	$(AM_V_CC)source='lib/graph.c' object='lib/lib_clippy-graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-graph.obj `if test -f 'lib/graph.c'; then $(CYGPATH_W) 'lib/graph.c'; else $(CYGPATH_W) '$(srcdir)/lib/graph.c'; fi`

lib/lib_clippy-memory.o: lib/memory.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-memory.o -MD -MP -MF lib/$(DEPDIR)/lib_clippy-memory.Tpo -c -o lib/lib_clippy-memory.o `test -f 'lib/memory.c' || echo '$(srcdir)/'`lib/memory.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-memory.Tpo lib/$(DEPDIR)/lib_clippy-memory.Po
#	$(AM_V_CC)source='lib/memory.c' object='lib/lib_clippy-memory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-memory.o `test -f 'lib/memory.c' || echo '$(srcdir)/'`lib/memory.c

lib/lib_clippy-memory.obj: lib/memory.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-memory.obj -MD -MP -MF lib/$(DEPDIR)/lib_clippy-memory.Tpo -c -o lib/lib_clippy-memory.obj `if test -f 'lib/memory.c'; then $(CYGPATH_W) 'lib/memory.c'; else $(CYGPATH_W) '$(srcdir)/lib/memory.c'; fi`
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-memory.Tpo lib/$(DEPDIR)/lib_clippy-memory.Po
#	$(AM_V_CC)source='lib/memory.c' object='lib/lib_clippy-memory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-memory.obj `if test -f 'lib/memory.c'; then $(CYGPATH_W) 'lib/memory.c'; else $(CYGPATH_W) '$(srcdir)/lib/memory.c'; fi`

lib/lib_clippy-vector.o: lib/vector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-vector.o -MD -MP -MF lib/$(DEPDIR)/lib_clippy-vector.Tpo -c -o lib/lib_clippy-vector.o `test -f 'lib/vector.c' || echo '$(srcdir)/'`lib/vector.c
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-vector.Tpo lib/$(DEPDIR)/lib_clippy-vector.Po
#	$(AM_V_CC)source='lib/vector.c' object='lib/lib_clippy-vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-vector.o `test -f 'lib/vector.c' || echo '$(srcdir)/'`lib/vector.c

lib/lib_clippy-vector.obj: lib/vector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -MT lib/lib_clippy-vector.obj -MD -MP -MF lib/$(DEPDIR)/lib_clippy-vector.Tpo -c -o lib/lib_clippy-vector.obj `if test -f 'lib/vector.c'; then $(CYGPATH_W) 'lib/vector.c'; else $(CYGPATH_W) '$(srcdir)/lib/vector.c'; fi`
	$(AM_V_at)$(am__mv) lib/$(DEPDIR)/lib_clippy-vector.Tpo lib/$(DEPDIR)/lib_clippy-vector.Po
#	$(AM_V_CC)source='lib/vector.c' object='lib/lib_clippy-vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lib_clippy_CPPFLAGS) $(CPPFLAGS) $(lib_clippy_CFLAGS) $(CFLAGS) -c -o lib/lib_clippy-vector.obj `if test -f 'lib/vector.c'; then $(CYGPATH_W) 'lib/vector.c'; else $(CYGPATH_W) '$(srcdir)/lib/vector.c'; fi`

nhrpd/nhrpd_nhrpd-linux.o: nhrpd/linux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-linux.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-linux.Tpo -c -o nhrpd/nhrpd_nhrpd-linux.o `test -f 'nhrpd/linux.c' || echo '$(srcdir)/'`nhrpd/linux.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-linux.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-linux.Po
#	$(AM_V_CC)source='nhrpd/linux.c' object='nhrpd/nhrpd_nhrpd-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-linux.o `test -f 'nhrpd/linux.c' || echo '$(srcdir)/'`nhrpd/linux.c

nhrpd/nhrpd_nhrpd-linux.obj: nhrpd/linux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-linux.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-linux.Tpo -c -o nhrpd/nhrpd_nhrpd-linux.obj `if test -f 'nhrpd/linux.c'; then $(CYGPATH_W) 'nhrpd/linux.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/linux.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-linux.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-linux.Po
#	$(AM_V_CC)source='nhrpd/linux.c' object='nhrpd/nhrpd_nhrpd-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-linux.obj `if test -f 'nhrpd/linux.c'; then $(CYGPATH_W) 'nhrpd/linux.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/linux.c'; fi`

nhrpd/nhrpd_nhrpd-netlink_arp.o: nhrpd/netlink_arp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-netlink_arp.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_arp.Tpo -c -o nhrpd/nhrpd_nhrpd-netlink_arp.o `test -f 'nhrpd/netlink_arp.c' || echo '$(srcdir)/'`nhrpd/netlink_arp.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_arp.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_arp.Po
#	$(AM_V_CC)source='nhrpd/netlink_arp.c' object='nhrpd/nhrpd_nhrpd-netlink_arp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-netlink_arp.o `test -f 'nhrpd/netlink_arp.c' || echo '$(srcdir)/'`nhrpd/netlink_arp.c

nhrpd/nhrpd_nhrpd-netlink_arp.obj: nhrpd/netlink_arp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-netlink_arp.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_arp.Tpo -c -o nhrpd/nhrpd_nhrpd-netlink_arp.obj `if test -f 'nhrpd/netlink_arp.c'; then $(CYGPATH_W) 'nhrpd/netlink_arp.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/netlink_arp.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_arp.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_arp.Po
#	$(AM_V_CC)source='nhrpd/netlink_arp.c' object='nhrpd/nhrpd_nhrpd-netlink_arp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-netlink_arp.obj `if test -f 'nhrpd/netlink_arp.c'; then $(CYGPATH_W) 'nhrpd/netlink_arp.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/netlink_arp.c'; fi`

nhrpd/nhrpd_nhrpd-netlink_gre.o: nhrpd/netlink_gre.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-netlink_gre.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_gre.Tpo -c -o nhrpd/nhrpd_nhrpd-netlink_gre.o `test -f 'nhrpd/netlink_gre.c' || echo '$(srcdir)/'`nhrpd/netlink_gre.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_gre.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_gre.Po
#	$(AM_V_CC)source='nhrpd/netlink_gre.c' object='nhrpd/nhrpd_nhrpd-netlink_gre.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-netlink_gre.o `test -f 'nhrpd/netlink_gre.c' || echo '$(srcdir)/'`nhrpd/netlink_gre.c

nhrpd/nhrpd_nhrpd-netlink_gre.obj: nhrpd/netlink_gre.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-netlink_gre.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_gre.Tpo -c -o nhrpd/nhrpd_nhrpd-netlink_gre.obj `if test -f 'nhrpd/netlink_gre.c'; then $(CYGPATH_W) 'nhrpd/netlink_gre.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/netlink_gre.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_gre.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-netlink_gre.Po
#	$(AM_V_CC)source='nhrpd/netlink_gre.c' object='nhrpd/nhrpd_nhrpd-netlink_gre.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-netlink_gre.obj `if test -f 'nhrpd/netlink_gre.c'; then $(CYGPATH_W) 'nhrpd/netlink_gre.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/netlink_gre.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_cache.o: nhrpd/nhrp_cache.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_cache.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_cache.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_cache.o `test -f 'nhrpd/nhrp_cache.c' || echo '$(srcdir)/'`nhrpd/nhrp_cache.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_cache.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_cache.Po
#	$(AM_V_CC)source='nhrpd/nhrp_cache.c' object='nhrpd/nhrpd_nhrpd-nhrp_cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_cache.o `test -f 'nhrpd/nhrp_cache.c' || echo '$(srcdir)/'`nhrpd/nhrp_cache.c

nhrpd/nhrpd_nhrpd-nhrp_cache.obj: nhrpd/nhrp_cache.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_cache.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_cache.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_cache.obj `if test -f 'nhrpd/nhrp_cache.c'; then $(CYGPATH_W) 'nhrpd/nhrp_cache.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_cache.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_cache.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_cache.Po
#	$(AM_V_CC)source='nhrpd/nhrp_cache.c' object='nhrpd/nhrpd_nhrpd-nhrp_cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_cache.obj `if test -f 'nhrpd/nhrp_cache.c'; then $(CYGPATH_W) 'nhrpd/nhrp_cache.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_cache.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_event.o: nhrpd/nhrp_event.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_event.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_event.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_event.o `test -f 'nhrpd/nhrp_event.c' || echo '$(srcdir)/'`nhrpd/nhrp_event.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_event.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_event.Po
#	$(AM_V_CC)source='nhrpd/nhrp_event.c' object='nhrpd/nhrpd_nhrpd-nhrp_event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_event.o `test -f 'nhrpd/nhrp_event.c' || echo '$(srcdir)/'`nhrpd/nhrp_event.c

nhrpd/nhrpd_nhrpd-nhrp_event.obj: nhrpd/nhrp_event.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_event.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_event.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_event.obj `if test -f 'nhrpd/nhrp_event.c'; then $(CYGPATH_W) 'nhrpd/nhrp_event.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_event.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_event.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_event.Po
#	$(AM_V_CC)source='nhrpd/nhrp_event.c' object='nhrpd/nhrpd_nhrpd-nhrp_event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_event.obj `if test -f 'nhrpd/nhrp_event.c'; then $(CYGPATH_W) 'nhrpd/nhrp_event.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_event.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_interface.o: nhrpd/nhrp_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_interface.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_interface.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_interface.o `test -f 'nhrpd/nhrp_interface.c' || echo '$(srcdir)/'`nhrpd/nhrp_interface.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_interface.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_interface.Po
#	$(AM_V_CC)source='nhrpd/nhrp_interface.c' object='nhrpd/nhrpd_nhrpd-nhrp_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_interface.o `test -f 'nhrpd/nhrp_interface.c' || echo '$(srcdir)/'`nhrpd/nhrp_interface.c

nhrpd/nhrpd_nhrpd-nhrp_interface.obj: nhrpd/nhrp_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_interface.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_interface.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_interface.obj `if test -f 'nhrpd/nhrp_interface.c'; then $(CYGPATH_W) 'nhrpd/nhrp_interface.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_interface.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_interface.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_interface.Po
#	$(AM_V_CC)source='nhrpd/nhrp_interface.c' object='nhrpd/nhrpd_nhrpd-nhrp_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_interface.obj `if test -f 'nhrpd/nhrp_interface.c'; then $(CYGPATH_W) 'nhrpd/nhrp_interface.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_interface.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_main.o: nhrpd/nhrp_main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_main.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_main.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_main.o `test -f 'nhrpd/nhrp_main.c' || echo '$(srcdir)/'`nhrpd/nhrp_main.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_main.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_main.Po
#	$(AM_V_CC)source='nhrpd/nhrp_main.c' object='nhrpd/nhrpd_nhrpd-nhrp_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_main.o `test -f 'nhrpd/nhrp_main.c' || echo '$(srcdir)/'`nhrpd/nhrp_main.c

nhrpd/nhrpd_nhrpd-nhrp_main.obj: nhrpd/nhrp_main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_main.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_main.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_main.obj `if test -f 'nhrpd/nhrp_main.c'; then $(CYGPATH_W) 'nhrpd/nhrp_main.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_main.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_main.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_main.Po
#	$(AM_V_CC)source='nhrpd/nhrp_main.c' object='nhrpd/nhrpd_nhrpd-nhrp_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_main.obj `if test -f 'nhrpd/nhrp_main.c'; then $(CYGPATH_W) 'nhrpd/nhrp_main.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_main.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_nhs.o: nhrpd/nhrp_nhs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_nhs.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_nhs.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_nhs.o `test -f 'nhrpd/nhrp_nhs.c' || echo '$(srcdir)/'`nhrpd/nhrp_nhs.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_nhs.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_nhs.Po
#	$(AM_V_CC)source='nhrpd/nhrp_nhs.c' object='nhrpd/nhrpd_nhrpd-nhrp_nhs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_nhs.o `test -f 'nhrpd/nhrp_nhs.c' || echo '$(srcdir)/'`nhrpd/nhrp_nhs.c

nhrpd/nhrpd_nhrpd-nhrp_nhs.obj: nhrpd/nhrp_nhs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_nhs.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_nhs.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_nhs.obj `if test -f 'nhrpd/nhrp_nhs.c'; then $(CYGPATH_W) 'nhrpd/nhrp_nhs.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_nhs.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_nhs.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_nhs.Po
#	$(AM_V_CC)source='nhrpd/nhrp_nhs.c' object='nhrpd/nhrpd_nhrpd-nhrp_nhs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_nhs.obj `if test -f 'nhrpd/nhrp_nhs.c'; then $(CYGPATH_W) 'nhrpd/nhrp_nhs.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_nhs.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_packet.o: nhrpd/nhrp_packet.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_packet.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_packet.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_packet.o `test -f 'nhrpd/nhrp_packet.c' || echo '$(srcdir)/'`nhrpd/nhrp_packet.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_packet.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_packet.Po
#	$(AM_V_CC)source='nhrpd/nhrp_packet.c' object='nhrpd/nhrpd_nhrpd-nhrp_packet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_packet.o `test -f 'nhrpd/nhrp_packet.c' || echo '$(srcdir)/'`nhrpd/nhrp_packet.c

nhrpd/nhrpd_nhrpd-nhrp_packet.obj: nhrpd/nhrp_packet.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_packet.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_packet.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_packet.obj `if test -f 'nhrpd/nhrp_packet.c'; then $(CYGPATH_W) 'nhrpd/nhrp_packet.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_packet.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_packet.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_packet.Po
#	$(AM_V_CC)source='nhrpd/nhrp_packet.c' object='nhrpd/nhrpd_nhrpd-nhrp_packet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_packet.obj `if test -f 'nhrpd/nhrp_packet.c'; then $(CYGPATH_W) 'nhrpd/nhrp_packet.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_packet.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_peer.o: nhrpd/nhrp_peer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_peer.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_peer.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_peer.o `test -f 'nhrpd/nhrp_peer.c' || echo '$(srcdir)/'`nhrpd/nhrp_peer.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_peer.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_peer.Po
#	$(AM_V_CC)source='nhrpd/nhrp_peer.c' object='nhrpd/nhrpd_nhrpd-nhrp_peer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_peer.o `test -f 'nhrpd/nhrp_peer.c' || echo '$(srcdir)/'`nhrpd/nhrp_peer.c

nhrpd/nhrpd_nhrpd-nhrp_peer.obj: nhrpd/nhrp_peer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_peer.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_peer.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_peer.obj `if test -f 'nhrpd/nhrp_peer.c'; then $(CYGPATH_W) 'nhrpd/nhrp_peer.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_peer.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_peer.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_peer.Po
#	$(AM_V_CC)source='nhrpd/nhrp_peer.c' object='nhrpd/nhrpd_nhrpd-nhrp_peer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_peer.obj `if test -f 'nhrpd/nhrp_peer.c'; then $(CYGPATH_W) 'nhrpd/nhrp_peer.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_peer.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_route.o: nhrpd/nhrp_route.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_route.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_route.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_route.o `test -f 'nhrpd/nhrp_route.c' || echo '$(srcdir)/'`nhrpd/nhrp_route.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_route.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_route.Po
#	$(AM_V_CC)source='nhrpd/nhrp_route.c' object='nhrpd/nhrpd_nhrpd-nhrp_route.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_route.o `test -f 'nhrpd/nhrp_route.c' || echo '$(srcdir)/'`nhrpd/nhrp_route.c

nhrpd/nhrpd_nhrpd-nhrp_route.obj: nhrpd/nhrp_route.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_route.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_route.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_route.obj `if test -f 'nhrpd/nhrp_route.c'; then $(CYGPATH_W) 'nhrpd/nhrp_route.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_route.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_route.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_route.Po
#	$(AM_V_CC)source='nhrpd/nhrp_route.c' object='nhrpd/nhrpd_nhrpd-nhrp_route.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_route.obj `if test -f 'nhrpd/nhrp_route.c'; then $(CYGPATH_W) 'nhrpd/nhrp_route.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_route.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_shortcut.o: nhrpd/nhrp_shortcut.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_shortcut.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_shortcut.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_shortcut.o `test -f 'nhrpd/nhrp_shortcut.c' || echo '$(srcdir)/'`nhrpd/nhrp_shortcut.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_shortcut.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_shortcut.Po
#	$(AM_V_CC)source='nhrpd/nhrp_shortcut.c' object='nhrpd/nhrpd_nhrpd-nhrp_shortcut.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_shortcut.o `test -f 'nhrpd/nhrp_shortcut.c' || echo '$(srcdir)/'`nhrpd/nhrp_shortcut.c

nhrpd/nhrpd_nhrpd-nhrp_shortcut.obj: nhrpd/nhrp_shortcut.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_shortcut.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_shortcut.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_shortcut.obj `if test -f 'nhrpd/nhrp_shortcut.c'; then $(CYGPATH_W) 'nhrpd/nhrp_shortcut.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_shortcut.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_shortcut.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_shortcut.Po
#	$(AM_V_CC)source='nhrpd/nhrp_shortcut.c' object='nhrpd/nhrpd_nhrpd-nhrp_shortcut.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_shortcut.obj `if test -f 'nhrpd/nhrp_shortcut.c'; then $(CYGPATH_W) 'nhrpd/nhrp_shortcut.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_shortcut.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_vc.o: nhrpd/nhrp_vc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_vc.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vc.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_vc.o `test -f 'nhrpd/nhrp_vc.c' || echo '$(srcdir)/'`nhrpd/nhrp_vc.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vc.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vc.Po
#	$(AM_V_CC)source='nhrpd/nhrp_vc.c' object='nhrpd/nhrpd_nhrpd-nhrp_vc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_vc.o `test -f 'nhrpd/nhrp_vc.c' || echo '$(srcdir)/'`nhrpd/nhrp_vc.c

nhrpd/nhrpd_nhrpd-nhrp_vc.obj: nhrpd/nhrp_vc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_vc.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vc.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_vc.obj `if test -f 'nhrpd/nhrp_vc.c'; then $(CYGPATH_W) 'nhrpd/nhrp_vc.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_vc.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vc.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vc.Po
#	$(AM_V_CC)source='nhrpd/nhrp_vc.c' object='nhrpd/nhrpd_nhrpd-nhrp_vc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_vc.obj `if test -f 'nhrpd/nhrp_vc.c'; then $(CYGPATH_W) 'nhrpd/nhrp_vc.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_vc.c'; fi`

nhrpd/nhrpd_nhrpd-nhrp_vty.o: nhrpd/nhrp_vty.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_vty.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vty.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_vty.o `test -f 'nhrpd/nhrp_vty.c' || echo '$(srcdir)/'`nhrpd/nhrp_vty.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vty.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vty.Po
#	$(AM_V_CC)source='nhrpd/nhrp_vty.c' object='nhrpd/nhrpd_nhrpd-nhrp_vty.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_vty.o `test -f 'nhrpd/nhrp_vty.c' || echo '$(srcdir)/'`nhrpd/nhrp_vty.c

nhrpd/nhrpd_nhrpd-nhrp_vty.obj: nhrpd/nhrp_vty.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-nhrp_vty.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vty.Tpo -c -o nhrpd/nhrpd_nhrpd-nhrp_vty.obj `if test -f 'nhrpd/nhrp_vty.c'; then $(CYGPATH_W) 'nhrpd/nhrp_vty.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_vty.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vty.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-nhrp_vty.Po
#	$(AM_V_CC)source='nhrpd/nhrp_vty.c' object='nhrpd/nhrpd_nhrpd-nhrp_vty.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-nhrp_vty.obj `if test -f 'nhrpd/nhrp_vty.c'; then $(CYGPATH_W) 'nhrpd/nhrp_vty.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/nhrp_vty.c'; fi`

nhrpd/nhrpd_nhrpd-reqid.o: nhrpd/reqid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-reqid.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-reqid.Tpo -c -o nhrpd/nhrpd_nhrpd-reqid.o `test -f 'nhrpd/reqid.c' || echo '$(srcdir)/'`nhrpd/reqid.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-reqid.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-reqid.Po
#	$(AM_V_CC)source='nhrpd/reqid.c' object='nhrpd/nhrpd_nhrpd-reqid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-reqid.o `test -f 'nhrpd/reqid.c' || echo '$(srcdir)/'`nhrpd/reqid.c

nhrpd/nhrpd_nhrpd-reqid.obj: nhrpd/reqid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-reqid.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-reqid.Tpo -c -o nhrpd/nhrpd_nhrpd-reqid.obj `if test -f 'nhrpd/reqid.c'; then $(CYGPATH_W) 'nhrpd/reqid.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/reqid.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-reqid.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-reqid.Po
#	$(AM_V_CC)source='nhrpd/reqid.c' object='nhrpd/nhrpd_nhrpd-reqid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-reqid.obj `if test -f 'nhrpd/reqid.c'; then $(CYGPATH_W) 'nhrpd/reqid.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/reqid.c'; fi`

nhrpd/nhrpd_nhrpd-resolver.o: nhrpd/resolver.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-resolver.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-resolver.Tpo -c -o nhrpd/nhrpd_nhrpd-resolver.o `test -f 'nhrpd/resolver.c' || echo '$(srcdir)/'`nhrpd/resolver.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-resolver.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-resolver.Po
#	$(AM_V_CC)source='nhrpd/resolver.c' object='nhrpd/nhrpd_nhrpd-resolver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-resolver.o `test -f 'nhrpd/resolver.c' || echo '$(srcdir)/'`nhrpd/resolver.c

nhrpd/nhrpd_nhrpd-resolver.obj: nhrpd/resolver.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-resolver.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-resolver.Tpo -c -o nhrpd/nhrpd_nhrpd-resolver.obj `if test -f 'nhrpd/resolver.c'; then $(CYGPATH_W) 'nhrpd/resolver.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/resolver.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-resolver.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-resolver.Po
#	$(AM_V_CC)source='nhrpd/resolver.c' object='nhrpd/nhrpd_nhrpd-resolver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-resolver.obj `if test -f 'nhrpd/resolver.c'; then $(CYGPATH_W) 'nhrpd/resolver.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/resolver.c'; fi`

nhrpd/nhrpd_nhrpd-vici.o: nhrpd/vici.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-vici.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-vici.Tpo -c -o nhrpd/nhrpd_nhrpd-vici.o `test -f 'nhrpd/vici.c' || echo '$(srcdir)/'`nhrpd/vici.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-vici.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-vici.Po
#	$(AM_V_CC)source='nhrpd/vici.c' object='nhrpd/nhrpd_nhrpd-vici.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-vici.o `test -f 'nhrpd/vici.c' || echo '$(srcdir)/'`nhrpd/vici.c

nhrpd/nhrpd_nhrpd-vici.obj: nhrpd/vici.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-vici.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-vici.Tpo -c -o nhrpd/nhrpd_nhrpd-vici.obj `if test -f 'nhrpd/vici.c'; then $(CYGPATH_W) 'nhrpd/vici.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/vici.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-vici.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-vici.Po
#	$(AM_V_CC)source='nhrpd/vici.c' object='nhrpd/nhrpd_nhrpd-vici.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-vici.obj `if test -f 'nhrpd/vici.c'; then $(CYGPATH_W) 'nhrpd/vici.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/vici.c'; fi`

nhrpd/nhrpd_nhrpd-zbuf.o: nhrpd/zbuf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-zbuf.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-zbuf.Tpo -c -o nhrpd/nhrpd_nhrpd-zbuf.o `test -f 'nhrpd/zbuf.c' || echo '$(srcdir)/'`nhrpd/zbuf.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-zbuf.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-zbuf.Po
#	$(AM_V_CC)source='nhrpd/zbuf.c' object='nhrpd/nhrpd_nhrpd-zbuf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-zbuf.o `test -f 'nhrpd/zbuf.c' || echo '$(srcdir)/'`nhrpd/zbuf.c

nhrpd/nhrpd_nhrpd-zbuf.obj: nhrpd/zbuf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-zbuf.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-zbuf.Tpo -c -o nhrpd/nhrpd_nhrpd-zbuf.obj `if test -f 'nhrpd/zbuf.c'; then $(CYGPATH_W) 'nhrpd/zbuf.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/zbuf.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-zbuf.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-zbuf.Po
#	$(AM_V_CC)source='nhrpd/zbuf.c' object='nhrpd/nhrpd_nhrpd-zbuf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-zbuf.obj `if test -f 'nhrpd/zbuf.c'; then $(CYGPATH_W) 'nhrpd/zbuf.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/zbuf.c'; fi`

nhrpd/nhrpd_nhrpd-znl.o: nhrpd/znl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-znl.o -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-znl.Tpo -c -o nhrpd/nhrpd_nhrpd-znl.o `test -f 'nhrpd/znl.c' || echo '$(srcdir)/'`nhrpd/znl.c
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-znl.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-znl.Po
#	$(AM_V_CC)source='nhrpd/znl.c' object='nhrpd/nhrpd_nhrpd-znl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-znl.o `test -f 'nhrpd/znl.c' || echo '$(srcdir)/'`nhrpd/znl.c

nhrpd/nhrpd_nhrpd-znl.obj: nhrpd/znl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -MT nhrpd/nhrpd_nhrpd-znl.obj -MD -MP -MF nhrpd/$(DEPDIR)/nhrpd_nhrpd-znl.Tpo -c -o nhrpd/nhrpd_nhrpd-znl.obj `if test -f 'nhrpd/znl.c'; then $(CYGPATH_W) 'nhrpd/znl.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/znl.c'; fi`
	$(AM_V_at)$(am__mv) nhrpd/$(DEPDIR)/nhrpd_nhrpd-znl.Tpo nhrpd/$(DEPDIR)/nhrpd_nhrpd-znl.Po
#	$(AM_V_CC)source='nhrpd/znl.c' object='nhrpd/nhrpd_nhrpd-znl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nhrpd_nhrpd_CFLAGS) $(CFLAGS) -c -o nhrpd/nhrpd_nhrpd-znl.obj `if test -f 'nhrpd/znl.c'; then $(CYGPATH_W) 'nhrpd/znl.c'; else $(CYGPATH_W) '$(srcdir)/nhrpd/znl.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf babeld/.libs babeld/_libs
	-rm -rf eigrpd/.libs eigrpd/_libs
	-rm -rf fpm/.libs fpm/_libs
	-rm -rf isisd/.libs isisd/_libs
	-rm -rf ldpd/.libs ldpd/_libs
	-rm -rf lib/.libs lib/_libs
	-rm -rf nhrpd/.libs nhrpd/_libs
	-rm -rf ospf6d/.libs ospf6d/_libs
	-rm -rf ospfclient/.libs ospfclient/_libs
	-rm -rf ospfd/.libs ospfd/_libs
	-rm -rf pbrd/.libs pbrd/_libs
	-rm -rf pimd/.libs pimd/_libs
	-rm -rf qpb/.libs qpb/_libs
	-rm -rf ripd/.libs ripd/_libs
	-rm -rf ripngd/.libs ripngd/_libs
	-rm -rf sharpd/.libs sharpd/_libs
	-rm -rf tools/.libs tools/_libs
	-rm -rf watchfrr/.libs watchfrr/_libs
	-rm -rf zebra/.libs zebra/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-dist_examplesDATA: $(dist_examples_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_examples_DATA)'; test -n "$(examplesdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(examplesdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(examplesdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(examplesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(examplesdir)" || exit $$?; \
	done

uninstall-dist_examplesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_examples_DATA)'; test -n "$(examplesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(examplesdir)'; $(am__uninstall_files_from_dir)
install-eigrpdheaderHEADERS: $(eigrpdheader_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(eigrpdheader_HEADERS)'; test -n "$(eigrpdheaderdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(eigrpdheaderdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(eigrpdheaderdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(eigrpdheaderdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(eigrpdheaderdir)" || exit $$?; \
	done

uninstall-eigrpdheaderHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(eigrpdheader_HEADERS)'; test -n "$(eigrpdheaderdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(eigrpdheaderdir)'; $(am__uninstall_files_from_dir)
install-nodist_pkgincludeHEADERS: $(nodist_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-nodist_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)
install-ospfapiheaderHEADERS: $(ospfapiheader_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(ospfapiheader_HEADERS)'; test -n "$(ospfapiheaderdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ospfapiheaderdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ospfapiheaderdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(ospfapiheaderdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(ospfapiheaderdir)" || exit $$?; \
	done

uninstall-ospfapiheaderHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(ospfapiheader_HEADERS)'; test -n "$(ospfapiheaderdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ospfapiheaderdir)'; $(am__uninstall_files_from_dir)
install-ospfdheaderHEADERS: $(ospfdheader_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(ospfdheader_HEADERS)'; test -n "$(ospfdheaderdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ospfdheaderdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ospfdheaderdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(ospfdheaderdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(ospfdheaderdir)" || exit $$?; \
	done

uninstall-ospfdheaderHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(ospfdheader_HEADERS)'; test -n "$(ospfdheaderdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ospfdheaderdir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) \
		$(DATA) $(HEADERS) config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(moduledir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(examplesdir)" "$(DESTDIR)$(eigrpdheaderdir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(ospfapiheaderdir)" "$(DESTDIR)$(ospfdheaderdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f babeld/$(DEPDIR)/$(am__dirstamp)
	-rm -f babeld/$(am__dirstamp)
	-rm -f eigrpd/$(DEPDIR)/$(am__dirstamp)
	-rm -f eigrpd/$(am__dirstamp)
	-rm -f fpm/$(DEPDIR)/$(am__dirstamp)
	-rm -f fpm/$(am__dirstamp)
	-rm -f isisd/$(DEPDIR)/$(am__dirstamp)
	-rm -f isisd/$(am__dirstamp)
	-rm -f ldpd/$(DEPDIR)/$(am__dirstamp)
	-rm -f ldpd/$(am__dirstamp)
	-rm -f lib/$(DEPDIR)/$(am__dirstamp)
	-rm -f lib/$(am__dirstamp)
	-rm -f nhrpd/$(DEPDIR)/$(am__dirstamp)
	-rm -f nhrpd/$(am__dirstamp)
	-rm -f ospf6d/$(DEPDIR)/$(am__dirstamp)
	-rm -f ospf6d/$(am__dirstamp)
	-rm -f ospfclient/$(DEPDIR)/$(am__dirstamp)
	-rm -f ospfclient/$(am__dirstamp)
	-rm -f ospfd/$(DEPDIR)/$(am__dirstamp)
	-rm -f ospfd/$(am__dirstamp)
	-rm -f pbrd/$(DEPDIR)/$(am__dirstamp)
	-rm -f pbrd/$(am__dirstamp)
	-rm -f pimd/$(DEPDIR)/$(am__dirstamp)
	-rm -f pimd/$(am__dirstamp)
	-rm -f qpb/$(DEPDIR)/$(am__dirstamp)
	-rm -f qpb/$(am__dirstamp)
	-rm -f ripd/$(DEPDIR)/$(am__dirstamp)
	-rm -f ripd/$(am__dirstamp)
	-rm -f ripngd/$(DEPDIR)/$(am__dirstamp)
	-rm -f ripngd/$(am__dirstamp)
	-rm -f sharpd/$(DEPDIR)/$(am__dirstamp)
	-rm -f sharpd/$(am__dirstamp)
	-rm -f tools/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/$(am__dirstamp)
	-rm -f watchfrr/$(DEPDIR)/$(am__dirstamp)
	-rm -f watchfrr/$(am__dirstamp)
	-rm -f zebra/$(DEPDIR)/$(am__dirstamp)
	-rm -f zebra/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f lib/command_lex.c
	-rm -f lib/command_parse.c
	-rm -f lib/command_parse.h
	-rm -f lib/defun_lex.c
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-moduleLTLIBRARIES clean-noinstLIBRARIES \
	clean-noinstPROGRAMS clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf babeld/$(DEPDIR) eigrpd/$(DEPDIR) fpm/$(DEPDIR) isisd/$(DEPDIR) ldpd/$(DEPDIR) lib/$(DEPDIR) nhrpd/$(DEPDIR) ospf6d/$(DEPDIR) ospfclient/$(DEPDIR) ospfd/$(DEPDIR) pbrd/$(DEPDIR) pimd/$(DEPDIR) qpb/$(DEPDIR) ripd/$(DEPDIR) ripngd/$(DEPDIR) sharpd/$(DEPDIR) tools/$(DEPDIR) watchfrr/$(DEPDIR) zebra/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dist_examplesDATA install-eigrpdheaderHEADERS \
	install-moduleLTLIBRARIES install-nodist_pkgincludeHEADERS \
	install-ospfapiheaderHEADERS install-ospfdheaderHEADERS \
	install-pkgincludeHEADERS install-rcSCRIPTS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES \
	install-sbinPROGRAMS install-sbinSCRIPTS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf babeld/$(DEPDIR) eigrpd/$(DEPDIR) fpm/$(DEPDIR) isisd/$(DEPDIR) ldpd/$(DEPDIR) lib/$(DEPDIR) nhrpd/$(DEPDIR) ospf6d/$(DEPDIR) ospfclient/$(DEPDIR) ospfd/$(DEPDIR) pbrd/$(DEPDIR) pimd/$(DEPDIR) qpb/$(DEPDIR) ripd/$(DEPDIR) ripngd/$(DEPDIR) sharpd/$(DEPDIR) tools/$(DEPDIR) watchfrr/$(DEPDIR) zebra/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_examplesDATA \
	uninstall-eigrpdheaderHEADERS uninstall-libLTLIBRARIES \
	uninstall-moduleLTLIBRARIES uninstall-nodist_pkgincludeHEADERS \
	uninstall-ospfapiheaderHEADERS uninstall-ospfdheaderHEADERS \
	uninstall-pkgincludeHEADERS uninstall-rcSCRIPTS \
	uninstall-sbinPROGRAMS uninstall-sbinSCRIPTS

.MAKE: $(am__recursive_targets) all check install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-moduleLTLIBRARIES clean-noinstLIBRARIES \
	clean-noinstPROGRAMS clean-sbinPROGRAMS cscope cscopelist-am \
	ctags ctags-am dist dist-all dist-bzip2 dist-gzip dist-lzip \
	dist-shar dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_examplesDATA install-dvi \
	install-dvi-am install-eigrpdheaderHEADERS install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-moduleLTLIBRARIES install-nodist_pkgincludeHEADERS \
	install-ospfapiheaderHEADERS install-ospfdheaderHEADERS \
	install-pdf install-pdf-am install-pkgincludeHEADERS \
	install-ps install-ps-am install-rcSCRIPTS \
	install-sbinPROGRAMS install-sbinSCRIPTS install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_examplesDATA \
	uninstall-eigrpdheaderHEADERS uninstall-libLTLIBRARIES \
	uninstall-moduleLTLIBRARIES uninstall-nodist_pkgincludeHEADERS \
	uninstall-ospfapiheaderHEADERS uninstall-ospfdheaderHEADERS \
	uninstall-pkgincludeHEADERS uninstall-rcSCRIPTS \
	uninstall-sbinPROGRAMS uninstall-sbinSCRIPTS

.PRECIOUS: Makefile

.c_clippy.c:
	@{ test -x $(top_builddir)/$(HOSTTOOLS)lib/clippy || $(MAKE) -C $(top_builddir)/$(HOSTTOOLS) lib/clippy; }
	$(AM_V_CLIPPY) $(top_builddir)/$(HOSTTOOLS)lib/clippy $(top_srcdir)/python/clidef.py -o $@ $<

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(LEXCOMPILE) $<
.y.c:
	$(AM_V_YACC)$(am__skipyacc) $(YACCCOMPILE) $<

# Rules
#.proto.pb.h:
#	$(Q_PROTOC) -I$(top_srcdir) --cpp_out=$(top_srcdir) $(top_srcdir)/$^

#.proto.pb-c.c:
#	$(AM_V_PROTOC_C)$(Q_PROTOC_C) -I$(top_srcdir) --c_out=$(top_srcdir) $(top_srcdir)/$^
#.pb-c.c.pb-c.h:
#	@/bin/true

$(AUTOMAKE_DUMMY)install-moduleLTLIBRARIES: install-libLTLIBRARIES
$(AUTOMAKE_DUMMY)install-binPROGRAMS: install-libLTLIBRARIES
$(AUTOMAKE_DUMMY)install-sbinPROGRAMS: install-libLTLIBRARIES

lib/plist_clippy.c: $(CLIPPY_DEPS)
lib/plist.lo: lib/plist_clippy.c
lib/nexthop_group_clippy.c: $(CLIPPY_DEPS)
lib/nexthop_group.lo: lib/nexthop_group_clippy.c
#$(HOSTTOOLS)lib/clippy:
#	@$(MAKE) -C $(top_builddir)/$(HOSTTOOLS) lib/route_types.h lib/clippy

$(lib_clippy_OBJECTS): lib/route_types.h
$(lib_libfrr_la_OBJECTS): lib/route_types.h

lib/command_lex.h: lib/command_lex.c
	@if test ! -f $@; then rm -f "lib/command_lex.c"; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) "lib/command_lex.c"; else :; fi
lib/command_lex.lo: lib/command_parse.h
lib/command_parse.lo: lib/command_lex.h
lib/lib_clippy-command_lex.$(OBJEXT): lib/command_parse.h
lib/lib_clippy-command_parse.$(OBJEXT): lib/command_lex.h

lib/route_types.h: $(top_srcdir)/lib/route_types.txt $(top_srcdir)/lib/route_types.pl
	/usr/bin/perl $(top_srcdir)/lib/route_types.pl < $(top_srcdir)/lib/route_types.txt > $@

# bit of a trick here to always have up-to-date git stamps without triggering
# unneccessary rebuilds.  .PHONY causes the .tmp file to be rebuilt always,
# but if we use that on gitversion.h it'll ripple through the .c file deps.
# (even if gitversion.h's file timestamp doesn't change, make will think it
# did, because of .PHONY...)

#.PHONY: lib/gitversion.h.tmp
#.SILENT: lib/gitversion.h lib/gitversion.h.tmp
#lib/gitversion.h.tmp: $(top_srcdir)/.git
#	/usr/bin/perl $(top_srcdir)/lib/gitversion.pl $(top_srcdir) > ${GITH}.tmp
#lib/gitversion.h: lib/gitversion.h.tmp
#	{ test -f ${GITH} && diff -s -q ${GITH}.tmp ${GITH}; } || cp ${GITH}.tmp ${GITH}

.PHONY: lib/gitversion.h
lib/gitversion.h:
	true

zebra/zebra_vty_clippy.c: $(CLIPPY_DEPS)
zebra/zebra_vty.$(OBJEXT): zebra/zebra_vty_clippy.c

# -- unmaintained --
# noinst_PROGRAMS += zebra/client
# zebra_client_SOURCES = zebra/client_main.c
# zebra_client_LDADD = lib/libfrr.la

ospfd/ospf_vty_clippy.c: $(CLIPPY_DEPS)
ospfd/ospf_vty.$(OBJEXT): ospfd/ospf_vty_clippy.c

ldpd/ldp_vty_cmds_clippy.c: $(CLIPPY_DEPS)
ldpd/ldp_vty_cmds.$(OBJEXT): ldpd/ldp_vty_cmds_clippy.c

sharpd/sharp_vty_clippy.c: $(CLIPPY_DEPS)
sharpd/sharp_vty.$(OBJEXT): sharpd/sharp_vty_clippy.c

pbrd/pbr_vty_clippy.c: $(CLIPPY_DEPS)
pbrd/pbr_vty.$(OBJEXT): pbrd/pbr_vty_clippy.c

pbrd/pbr_debug_clippy.c: $(CLIPPY_DEPS)
pbrd/pbr_debug.$(OBJEXT): pbrd/pbr_debug_clippy.c

indent:
	tools/indent.py `find sharpd bgpd eigrpd include isisd lib nhrpd ospf6d ospfd pimd qpb ripd vtysh zebra -name '*.[ch]' | grep -v include/linux`

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
